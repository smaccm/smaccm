/*
 * generated by Xtext
 */
parser grammar InternalAgreeParser;

options {
	tokenVocab=InternalAgreeLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package com.rockwellcollins.atc.agree.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.rockwellcollins.atc.agree.services.AgreeGrammarAccess;

}

@members {


	private AgreeGrammarAccess grammarAccess;
	 	
	public InternalAgreeParser(TokenStream input, AgreeGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "NamedElement";	
	} 
	   	   	
	@Override
	protected AgreeGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleNamedElement
entryRuleNamedElement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNamedElementRule()); }
	 iv_ruleNamedElement=ruleNamedElement 
	 { $current=$iv_ruleNamedElement.current; } 
	 EOF 
;

// Rule NamedElement
ruleNamedElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getArgParserRuleCall_0()); 
    }
    this_Arg_0=ruleArg
    {
        $current = $this_Arg_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getNamedSpecStatementParserRuleCall_1()); 
    }
    this_NamedSpecStatement_1=ruleNamedSpecStatement
    {
        $current = $this_NamedSpecStatement_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getFnDefParserRuleCall_2()); 
    }
    this_FnDef_2=ruleFnDef
    {
        $current = $this_FnDef_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getPropertyStatementParserRuleCall_3()); 
    }
    this_PropertyStatement_3=rulePropertyStatement
    {
        $current = $this_PropertyStatement_3.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getConstStatementParserRuleCall_4()); 
    }
    this_ConstStatement_4=ruleConstStatement
    {
        $current = $this_ConstStatement_4.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getEnumStatementParserRuleCall_5()); 
    }
    this_EnumStatement_5=ruleEnumStatement
    {
        $current = $this_EnumStatement_5.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getNodeDefParserRuleCall_6()); 
    }
    this_NodeDef_6=ruleNodeDef
    {
        $current = $this_NodeDef_6.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getLinearizationDefParserRuleCall_7()); 
    }
    this_LinearizationDef_7=ruleLinearizationDef
    {
        $current = $this_LinearizationDef_7.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getLibraryFnDefParserRuleCall_8()); 
    }
    this_LibraryFnDef_8=ruleLibraryFnDef
    {
        $current = $this_LibraryFnDef_8.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getRecordDefParserRuleCall_9()); 
    }
    this_RecordDef_9=ruleRecordDef
    {
        $current = $this_RecordDef_9.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNamedElementAccess().getNamedIDParserRuleCall_10()); 
    }
    this_NamedID_10=ruleNamedID
    {
        $current = $this_NamedID_10.current;
        afterParserOrEnumRuleCall();
    }
)
;











// Entry rule entryRuleAgreeLibrary
entryRuleAgreeLibrary returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAgreeLibraryRule()); }
	 iv_ruleAgreeLibrary=ruleAgreeLibrary 
	 { $current=$iv_ruleAgreeLibrary.current; } 
	 EOF 
;

// Rule AgreeLibrary
ruleAgreeLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAgreeLibraryAccess().getAgreeContractLibraryAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAgreeLibraryAccess().getContractAgreeContractParserRuleCall_1_0()); 
	    }
		lv_contract_1_0=ruleAgreeContract		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgreeLibraryRule());
	        }
       		set(
       			$current, 
       			"contract",
        		lv_contract_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.AgreeContract");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAgreeSubclause
entryRuleAgreeSubclause returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAgreeSubclauseRule()); }
	 iv_ruleAgreeSubclause=ruleAgreeSubclause 
	 { $current=$iv_ruleAgreeSubclause.current; } 
	 EOF 
;

// Rule AgreeSubclause
ruleAgreeSubclause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAgreeSubclauseAccess().getAgreeContractSubclauseAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAgreeSubclauseAccess().getContractAgreeContractParserRuleCall_1_0()); 
	    }
		lv_contract_1_0=ruleAgreeContract		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgreeSubclauseRule());
	        }
       		set(
       			$current, 
       			"contract",
        		lv_contract_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.AgreeContract");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAgreeContract
entryRuleAgreeContract returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAgreeContractRule()); }
	 iv_ruleAgreeContract=ruleAgreeContract 
	 { $current=$iv_ruleAgreeContract.current; } 
	 EOF 
;

// Rule AgreeContract
ruleAgreeContract returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAgreeContractAccess().getAgreeContractAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAgreeContractAccess().getSpecsSpecStatementParserRuleCall_1_0()); 
	    }
		lv_specs_1_0=ruleSpecStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgreeContractRule());
	        }
       		add(
       			$current, 
       			"specs",
        		lv_specs_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.SpecStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSpecStatement
entryRuleSpecStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSpecStatementRule()); }
	 iv_ruleSpecStatement=ruleSpecStatement 
	 { $current=$iv_ruleSpecStatement.current; } 
	 EOF 
;

// Rule SpecStatement
ruleSpecStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getNamedSpecStatementParserRuleCall_0()); 
    }
    this_NamedSpecStatement_0=ruleNamedSpecStatement
    {
        $current = $this_NamedSpecStatement_0.current;
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecStatementAccess().getInitialStatementAction_1_0(),
            $current);
    }
)
	otherlv_2=Initially
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpecStatementAccess().getInitiallyKeyword_1_1());
    }

	otherlv_3=Colon
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpecStatementAccess().getColonKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecStatementAccess().getExprExprParserRuleCall_1_3_0()); 
	    }
		lv_expr_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Semicolon
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpecStatementAccess().getSemicolonKeyword_1_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecStatementAccess().getParamStatementAction_2_0(),
            $current);
    }
)
	otherlv_7=Parameter
    {
    	newLeafNode(otherlv_7, grammarAccess.getSpecStatementAccess().getParameterKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecStatementAccess().getExprExprParserRuleCall_2_2_0()); 
	    }
		lv_expr_8_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=Colon
    {
    	newLeafNode(otherlv_9, grammarAccess.getSpecStatementAccess().getColonKeyword_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecStatementAccess().getTypeTypeParserRuleCall_2_4_0()); 
	    }
		lv_type_10_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecStatementRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.Type");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_11=Semicolon
    {
    	newLeafNode(otherlv_11, grammarAccess.getSpecStatementAccess().getSemicolonKeyword_2_5());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecStatementAccess().getLiftStatementAction_3_0(),
            $current);
    }
)
	otherlv_13=Lift
    {
    	newLeafNode(otherlv_13, grammarAccess.getSpecStatementAccess().getLiftKeyword_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecStatementRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getSpecStatementAccess().getSubcompNamedElementCrossReference_3_2_0()); 
	}

)
)
	otherlv_15=Semicolon
    {
    	newLeafNode(otherlv_15, grammarAccess.getSpecStatementAccess().getSemicolonKeyword_3_3());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecStatementAccess().getConnectionStatementAction_4_0(),
            $current);
    }
)
	otherlv_17=Connection
    {
    	newLeafNode(otherlv_17, grammarAccess.getSpecStatementAccess().getConnectionKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecStatementRule());
	        }
        }
	otherlv_18=RULE_ID
	{
		newLeafNode(otherlv_18, grammarAccess.getSpecStatementAccess().getConnNamedElementCrossReference_4_2_0()); 
	}

)
)
	otherlv_19=Colon
    {
    	newLeafNode(otherlv_19, grammarAccess.getSpecStatementAccess().getColonKeyword_4_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecStatementAccess().getExprExprParserRuleCall_4_4_0()); 
	    }
		lv_expr_20_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_20_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_21=Semicolon
    {
    	newLeafNode(otherlv_21, grammarAccess.getSpecStatementAccess().getSemicolonKeyword_4_5());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getSynchStatementParserRuleCall_5()); 
    }
    this_SynchStatement_22=ruleSynchStatement
    {
        $current = $this_SynchStatement_22.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getOrderStatementParserRuleCall_6()); 
    }
    this_OrderStatement_23=ruleOrderStatement
    {
        $current = $this_OrderStatement_23.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getPropertyStatementParserRuleCall_7()); 
    }
    this_PropertyStatement_24=rulePropertyStatement
    {
        $current = $this_PropertyStatement_24.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getConstStatementParserRuleCall_8()); 
    }
    this_ConstStatement_25=ruleConstStatement
    {
        $current = $this_ConstStatement_25.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getEnumStatementParserRuleCall_9()); 
    }
    this_EnumStatement_26=ruleEnumStatement
    {
        $current = $this_EnumStatement_26.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getEqStatementParserRuleCall_10()); 
    }
    this_EqStatement_27=ruleEqStatement
    {
        $current = $this_EqStatement_27.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getAssignStatementParserRuleCall_11()); 
    }
    this_AssignStatement_28=ruleAssignStatement
    {
        $current = $this_AssignStatement_28.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getLinearizationDefParserRuleCall_12()); 
    }
    this_LinearizationDef_29=ruleLinearizationDef
    {
        $current = $this_LinearizationDef_29.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getFnDefParserRuleCall_13()); 
    }
    this_FnDef_30=ruleFnDef
    {
        $current = $this_FnDef_30.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getLibraryFnDefParserRuleCall_14()); 
    }
    this_LibraryFnDef_31=ruleLibraryFnDef
    {
        $current = $this_LibraryFnDef_31.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getNodeDefParserRuleCall_15()); 
    }
    this_NodeDef_32=ruleNodeDef
    {
        $current = $this_NodeDef_32.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getRecordDefParserRuleCall_16()); 
    }
    this_RecordDef_33=ruleRecordDef
    {
        $current = $this_RecordDef_33.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpecStatementAccess().getInputStatementParserRuleCall_17()); 
    }
    this_InputStatement_34=ruleInputStatement
    {
        $current = $this_InputStatement_34.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamedSpecStatement
entryRuleNamedSpecStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNamedSpecStatementRule()); }
	 iv_ruleNamedSpecStatement=ruleNamedSpecStatement 
	 { $current=$iv_ruleNamedSpecStatement.current; } 
	 EOF 
;

// Rule NamedSpecStatement
ruleNamedSpecStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamedSpecStatementAccess().getAssumeStatementAction_0_0(),
            $current);
    }
)
	otherlv_1=Assume
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedSpecStatementAccess().getAssumeKeyword_0_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getNamedSpecStatementAccess().getNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)?(
(
		lv_str_3_0=RULE_STRING
		{
			newLeafNode(lv_str_3_0, grammarAccess.getNamedSpecStatementAccess().getStrSTRINGTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_3_0, 
        		"org.osate.xtext.aadl2.properties.Properties.STRING");
	    }

)
)
	otherlv_4=Colon
    {
    	newLeafNode(otherlv_4, grammarAccess.getNamedSpecStatementAccess().getColonKeyword_0_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getExprExprParserRuleCall_0_5_0_0()); 
	    }
		lv_expr_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getPatternPatternStatementParserRuleCall_0_5_1_0()); 
	    }
		lv_pattern_6_0=rulePatternStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.PatternStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
	otherlv_7=Semicolon
    {
    	newLeafNode(otherlv_7, grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_0_6());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamedSpecStatementAccess().getGuaranteeStatementAction_1_0(),
            $current);
    }
)
	otherlv_9=Guarantee
    {
    	newLeafNode(otherlv_9, grammarAccess.getNamedSpecStatementAccess().getGuaranteeKeyword_1_1());
    }
(
(
		lv_name_10_0=RULE_ID
		{
			newLeafNode(lv_name_10_0, grammarAccess.getNamedSpecStatementAccess().getNameIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)?(
(
		lv_str_11_0=RULE_STRING
		{
			newLeafNode(lv_str_11_0, grammarAccess.getNamedSpecStatementAccess().getStrSTRINGTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_11_0, 
        		"org.osate.xtext.aadl2.properties.Properties.STRING");
	    }

)
)
	otherlv_12=Colon
    {
    	newLeafNode(otherlv_12, grammarAccess.getNamedSpecStatementAccess().getColonKeyword_1_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getExprExprParserRuleCall_1_5_0_0()); 
	    }
		lv_expr_13_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_13_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getPatternPatternStatementParserRuleCall_1_5_1_0()); 
	    }
		lv_pattern_14_0=rulePatternStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_14_0, 
        		"com.rockwellcollins.atc.agree.Agree.PatternStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
	otherlv_15=Semicolon
    {
    	newLeafNode(otherlv_15, grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_1_6());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamedSpecStatementAccess().getAssertStatementAction_2_0(),
            $current);
    }
)
	otherlv_17=Assert
    {
    	newLeafNode(otherlv_17, grammarAccess.getNamedSpecStatementAccess().getAssertKeyword_2_1());
    }
((
(
		lv_name_18_0=RULE_ID
		{
			newLeafNode(lv_name_18_0, grammarAccess.getNamedSpecStatementAccess().getNameIDTerminalRuleCall_2_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_18_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)?(
(
		lv_str_19_0=RULE_STRING
		{
			newLeafNode(lv_str_19_0, grammarAccess.getNamedSpecStatementAccess().getStrSTRINGTerminalRuleCall_2_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_19_0, 
        		"org.osate.xtext.aadl2.properties.Properties.STRING");
	    }

)
)
	otherlv_20=Colon
    {
    	newLeafNode(otherlv_20, grammarAccess.getNamedSpecStatementAccess().getColonKeyword_2_2_2());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getExprExprParserRuleCall_2_3_0_0()); 
	    }
		lv_expr_21_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_21_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getPatternPatternStatementParserRuleCall_2_3_1_0()); 
	    }
		lv_pattern_22_0=rulePatternStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_22_0, 
        		"com.rockwellcollins.atc.agree.Agree.PatternStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
	otherlv_23=Semicolon
    {
    	newLeafNode(otherlv_23, grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_2_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamedSpecStatementAccess().getLemmaStatementAction_3_0(),
            $current);
    }
)
	otherlv_25=Lemma
    {
    	newLeafNode(otherlv_25, grammarAccess.getNamedSpecStatementAccess().getLemmaKeyword_3_1());
    }
(
(
		lv_name_26_0=RULE_ID
		{
			newLeafNode(lv_name_26_0, grammarAccess.getNamedSpecStatementAccess().getNameIDTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_26_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)?(
(
		lv_str_27_0=RULE_STRING
		{
			newLeafNode(lv_str_27_0, grammarAccess.getNamedSpecStatementAccess().getStrSTRINGTerminalRuleCall_3_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedSpecStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_27_0, 
        		"org.osate.xtext.aadl2.properties.Properties.STRING");
	    }

)
)
	otherlv_28=Colon
    {
    	newLeafNode(otherlv_28, grammarAccess.getNamedSpecStatementAccess().getColonKeyword_3_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getExprExprParserRuleCall_3_5_0_0()); 
	    }
		lv_expr_29_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_29_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedSpecStatementAccess().getPatternPatternStatementParserRuleCall_3_5_1_0()); 
	    }
		lv_pattern_30_0=rulePatternStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedSpecStatementRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_30_0, 
        		"com.rockwellcollins.atc.agree.Agree.PatternStatement");
	        afterParserOrEnumRuleCall();
	    }

)
))
	otherlv_31=Semicolon
    {
    	newLeafNode(otherlv_31, grammarAccess.getNamedSpecStatementAccess().getSemicolonKeyword_3_6());
    }
))
;





// Entry rule entryRulePatternStatement
entryRulePatternStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPatternStatementRule()); }
	 iv_rulePatternStatement=rulePatternStatement 
	 { $current=$iv_rulePatternStatement.current; } 
	 EOF 
;

// Rule PatternStatement
rulePatternStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPatternStatementAccess().getWheneverStatementParserRuleCall_0()); 
    }
    this_WheneverStatement_0=ruleWheneverStatement
    {
        $current = $this_WheneverStatement_0.current;
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPatternStatementAccess().getAlwaysStatementAction_1_0(),
            $current);
    }
)
	otherlv_2=Always
    {
    	newLeafNode(otherlv_2, grammarAccess.getPatternStatementAccess().getAlwaysKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternStatementAccess().getExprExprParserRuleCall_1_2_0()); 
	    }
		lv_expr_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=Semicolon
    {
    	newLeafNode(otherlv_4, grammarAccess.getPatternStatementAccess().getSemicolonKeyword_1_3());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPatternStatementAccess().getWhenStatementParserRuleCall_2()); 
    }
    this_WhenStatement_5=ruleWhenStatement
    {
        $current = $this_WhenStatement_5.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPatternStatementAccess().getRealTimeStatementParserRuleCall_3()); 
    }
    this_RealTimeStatement_6=ruleRealTimeStatement
    {
        $current = $this_RealTimeStatement_6.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleWhenStatement
entryRuleWhenStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getWhenStatementRule()); }
	 iv_ruleWhenStatement=ruleWhenStatement 
	 { $current=$iv_ruleWhenStatement.current; } 
	 EOF 
;

// Rule WhenStatement
ruleWhenStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((((
)
When
(
(
ruleExpr
)
)
Holds
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWhenStatementAccess().getWhenHoldsStatementAction_0_0_0_0(),
            $current);
    }
)
	otherlv_1=When
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhenStatementAccess().getWhenKeyword_0_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getConditionExprParserRuleCall_0_0_0_2_0()); 
	    }
		lv_condition_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Holds
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenStatementAccess().getHoldsKeyword_0_0_0_3());
    }
))
	otherlv_4=During
    {
    	newLeafNode(otherlv_4, grammarAccess.getWhenStatementAccess().getDuringKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getConditionIntervalTimeIntervalParserRuleCall_0_2_0()); 
	    }
		lv_conditionInterval_5_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"conditionInterval",
        		lv_conditionInterval_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getEventExprParserRuleCall_0_3_0()); 
	    }
		lv_event_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_excl_7_0=
	Exclusively
    {
        newLeafNode(lv_excl_7_0, grammarAccess.getWhenStatementAccess().getExclExclusivelyKeyword_0_4_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhenStatementRule());
	        }
       		setWithLastConsumed($current, "excl", lv_excl_7_0, "exclusively");
	    }

)
)?
	otherlv_8=Occurs
    {
    	newLeafNode(otherlv_8, grammarAccess.getWhenStatementAccess().getOccursKeyword_0_5());
    }
(
	otherlv_9=During
    {
    	newLeafNode(otherlv_9, grammarAccess.getWhenStatementAccess().getDuringKeyword_0_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getEventIntervalTimeIntervalParserRuleCall_0_6_1_0()); 
	    }
		lv_eventInterval_10_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"eventInterval",
        		lv_eventInterval_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((((
)
When
(
(
ruleExpr
)
)
Occurs
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWhenStatementAccess().getWhenOccursStatmentAction_1_0_0_0(),
            $current);
    }
)
	otherlv_12=When
    {
    	newLeafNode(otherlv_12, grammarAccess.getWhenStatementAccess().getWhenKeyword_1_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getConditionExprParserRuleCall_1_0_0_2_0()); 
	    }
		lv_condition_13_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_13_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=Occurs
    {
    	newLeafNode(otherlv_14, grammarAccess.getWhenStatementAccess().getOccursKeyword_1_0_0_3());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getTimesExprParserRuleCall_1_1_0()); 
	    }
		lv_times_15_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"times",
        		lv_times_15_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_16=Times
    {
    	newLeafNode(otherlv_16, grammarAccess.getWhenStatementAccess().getTimesKeyword_1_2());
    }

	otherlv_17=During
    {
    	newLeafNode(otherlv_17, grammarAccess.getWhenStatementAccess().getDuringKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getIntervalTimeIntervalParserRuleCall_1_4_0()); 
	    }
		lv_interval_18_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"interval",
        		lv_interval_18_0, 
        		"com.rockwellcollins.atc.agree.Agree.TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_excl_19_0=
	Exclusively
    {
        newLeafNode(lv_excl_19_0, grammarAccess.getWhenStatementAccess().getExclExclusivelyKeyword_1_5_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhenStatementRule());
	        }
       		setWithLastConsumed($current, "excl", lv_excl_19_0, "exclusively");
	    }

)
)?
	otherlv_20=Raises
    {
    	newLeafNode(otherlv_20, grammarAccess.getWhenStatementAccess().getRaisesKeyword_1_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenStatementAccess().getEventExprParserRuleCall_1_7_0()); 
	    }
		lv_event_21_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenStatementRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_21_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleWheneverStatement
entryRuleWheneverStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getWheneverStatementRule()); }
	 iv_ruleWheneverStatement=ruleWheneverStatement 
	 { $current=$iv_ruleWheneverStatement.current; } 
	 EOF 
;

// Rule WheneverStatement
ruleWheneverStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((((
)
Whenever
(
(
ruleExpr
)
)
Occurs
(
(
ruleExpr
)
)(
(

Exclusively


)
)?(
Occur

    |
Occurs
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWheneverStatementAccess().getWheneverOccursStatementAction_0_0_0_0(),
            $current);
    }
)
	otherlv_1=Whenever
    {
    	newLeafNode(otherlv_1, grammarAccess.getWheneverStatementAccess().getWheneverKeyword_0_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getCauseExprParserRuleCall_0_0_0_2_0()); 
	    }
		lv_cause_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"cause",
        		lv_cause_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Occurs
    {
    	newLeafNode(otherlv_3, grammarAccess.getWheneverStatementAccess().getOccursKeyword_0_0_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getEffectExprParserRuleCall_0_0_0_4_0()); 
	    }
		lv_effect_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"effect",
        		lv_effect_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_excl_5_0=
	Exclusively
    {
        newLeafNode(lv_excl_5_0, grammarAccess.getWheneverStatementAccess().getExclExclusivelyKeyword_0_0_0_5_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWheneverStatementRule());
	        }
       		setWithLastConsumed($current, "excl", lv_excl_5_0, "exclusively");
	    }

)
)?(
	otherlv_6=Occur
    {
    	newLeafNode(otherlv_6, grammarAccess.getWheneverStatementAccess().getOccurKeyword_0_0_0_6_0());
    }

    |
	otherlv_7=Occurs
    {
    	newLeafNode(otherlv_7, grammarAccess.getWheneverStatementAccess().getOccursKeyword_0_0_0_6_1());
    }
)))(
	otherlv_8=During
    {
    	newLeafNode(otherlv_8, grammarAccess.getWheneverStatementAccess().getDuringKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getIntervalTimeIntervalParserRuleCall_0_1_1_0()); 
	    }
		lv_interval_9_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"interval",
        		lv_interval_9_0, 
        		"com.rockwellcollins.atc.agree.Agree.TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((((
)
Whenever
(
(
ruleExpr
)
)
Becomes

True
(
(
ruleExpr
)
)(
(

Exclusively


)
)?(
Occur

    |
Occurs
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWheneverStatementAccess().getWheneverBecomesTrueStatementAction_1_0_0_0(),
            $current);
    }
)
	otherlv_11=Whenever
    {
    	newLeafNode(otherlv_11, grammarAccess.getWheneverStatementAccess().getWheneverKeyword_1_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getCauseExprParserRuleCall_1_0_0_2_0()); 
	    }
		lv_cause_12_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"cause",
        		lv_cause_12_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_13=Becomes
    {
    	newLeafNode(otherlv_13, grammarAccess.getWheneverStatementAccess().getBecomesKeyword_1_0_0_3());
    }

	otherlv_14=True
    {
    	newLeafNode(otherlv_14, grammarAccess.getWheneverStatementAccess().getTrueKeyword_1_0_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getEffectExprParserRuleCall_1_0_0_5_0()); 
	    }
		lv_effect_15_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"effect",
        		lv_effect_15_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_excl_16_0=
	Exclusively
    {
        newLeafNode(lv_excl_16_0, grammarAccess.getWheneverStatementAccess().getExclExclusivelyKeyword_1_0_0_6_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWheneverStatementRule());
	        }
       		setWithLastConsumed($current, "excl", lv_excl_16_0, "exclusively");
	    }

)
)?(
	otherlv_17=Occur
    {
    	newLeafNode(otherlv_17, grammarAccess.getWheneverStatementAccess().getOccurKeyword_1_0_0_7_0());
    }

    |
	otherlv_18=Occurs
    {
    	newLeafNode(otherlv_18, grammarAccess.getWheneverStatementAccess().getOccursKeyword_1_0_0_7_1());
    }
)))(
	otherlv_19=During
    {
    	newLeafNode(otherlv_19, grammarAccess.getWheneverStatementAccess().getDuringKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getIntervalTimeIntervalParserRuleCall_1_1_1_0()); 
	    }
		lv_interval_20_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"interval",
        		lv_interval_20_0, 
        		"com.rockwellcollins.atc.agree.Agree.TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((((
)
Whenever
(
(
ruleExpr
)
)
Occurs
(
(
ruleExpr
)
)(
(

Exclusively


)
)?
Holds
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWheneverStatementAccess().getWheneverHoldsStatementAction_2_0_0_0(),
            $current);
    }
)
	otherlv_22=Whenever
    {
    	newLeafNode(otherlv_22, grammarAccess.getWheneverStatementAccess().getWheneverKeyword_2_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getCauseExprParserRuleCall_2_0_0_2_0()); 
	    }
		lv_cause_23_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"cause",
        		lv_cause_23_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_24=Occurs
    {
    	newLeafNode(otherlv_24, grammarAccess.getWheneverStatementAccess().getOccursKeyword_2_0_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getEffectExprParserRuleCall_2_0_0_4_0()); 
	    }
		lv_effect_25_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"effect",
        		lv_effect_25_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_excl_26_0=
	Exclusively
    {
        newLeafNode(lv_excl_26_0, grammarAccess.getWheneverStatementAccess().getExclExclusivelyKeyword_2_0_0_5_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWheneverStatementRule());
	        }
       		setWithLastConsumed($current, "excl", lv_excl_26_0, "exclusively");
	    }

)
)?
	otherlv_27=Holds
    {
    	newLeafNode(otherlv_27, grammarAccess.getWheneverStatementAccess().getHoldsKeyword_2_0_0_6());
    }
))(
	otherlv_28=During
    {
    	newLeafNode(otherlv_28, grammarAccess.getWheneverStatementAccess().getDuringKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getIntervalTimeIntervalParserRuleCall_2_1_1_0()); 
	    }
		lv_interval_29_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"interval",
        		lv_interval_29_0, 
        		"com.rockwellcollins.atc.agree.Agree.TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((((
)
Whenever
(
(
ruleExpr
)
)
Occurs
(
(
ruleExpr
)
)
Implies
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWheneverStatementAccess().getWheneverImpliesStatementAction_3_0_0_0(),
            $current);
    }
)
	otherlv_31=Whenever
    {
    	newLeafNode(otherlv_31, grammarAccess.getWheneverStatementAccess().getWheneverKeyword_3_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getCauseExprParserRuleCall_3_0_0_2_0()); 
	    }
		lv_cause_32_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"cause",
        		lv_cause_32_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_33=Occurs
    {
    	newLeafNode(otherlv_33, grammarAccess.getWheneverStatementAccess().getOccursKeyword_3_0_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getLhsExprParserRuleCall_3_0_0_4_0()); 
	    }
		lv_lhs_34_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_34_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_35=Implies
    {
    	newLeafNode(otherlv_35, grammarAccess.getWheneverStatementAccess().getImpliesKeyword_3_0_0_5());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getRhsExprParserRuleCall_3_1_0()); 
	    }
		lv_rhs_36_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_36_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_excl_37_0=
	Exclusively
    {
        newLeafNode(lv_excl_37_0, grammarAccess.getWheneverStatementAccess().getExclExclusivelyKeyword_3_2_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWheneverStatementRule());
	        }
       		setWithLastConsumed($current, "excl", lv_excl_37_0, "exclusively");
	    }

)
)?(
	otherlv_38=During
    {
    	newLeafNode(otherlv_38, grammarAccess.getWheneverStatementAccess().getDuringKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWheneverStatementAccess().getIntervalTimeIntervalParserRuleCall_3_3_1_0()); 
	    }
		lv_interval_39_0=ruleTimeInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWheneverStatementRule());
	        }
       		set(
       			$current, 
       			"interval",
        		lv_interval_39_0, 
        		"com.rockwellcollins.atc.agree.Agree.TimeInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleRealTimeStatement
entryRuleRealTimeStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRealTimeStatementRule()); }
	 iv_ruleRealTimeStatement=ruleRealTimeStatement 
	 { $current=$iv_ruleRealTimeStatement.current; } 
	 EOF 
;

// Rule RealTimeStatement
ruleRealTimeStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((((
)
Condition
(
(
ruleExpr
)
)
Occurs

Each
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRealTimeStatementAccess().getPeriodicStatementAction_0_0_0_0(),
            $current);
    }
)
	otherlv_1=Condition
    {
    	newLeafNode(otherlv_1, grammarAccess.getRealTimeStatementAccess().getConditionKeyword_0_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealTimeStatementAccess().getEventExprParserRuleCall_0_0_0_2_0()); 
	    }
		lv_event_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTimeStatementRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Occurs
    {
    	newLeafNode(otherlv_3, grammarAccess.getRealTimeStatementAccess().getOccursKeyword_0_0_0_3());
    }

	otherlv_4=Each
    {
    	newLeafNode(otherlv_4, grammarAccess.getRealTimeStatementAccess().getEachKeyword_0_0_0_4());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getRealTimeStatementAccess().getPeriodExprParserRuleCall_0_1_0()); 
	    }
		lv_period_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTimeStatementRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_6=With
    {
    	newLeafNode(otherlv_6, grammarAccess.getRealTimeStatementAccess().getWithKeyword_0_2_0());
    }

	otherlv_7=Jitter
    {
    	newLeafNode(otherlv_7, grammarAccess.getRealTimeStatementAccess().getJitterKeyword_0_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealTimeStatementAccess().getJitterExprParserRuleCall_0_2_2_0()); 
	    }
		lv_jitter_8_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTimeStatementRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((((
)
Condition
(
(
ruleExpr
)
)
Occurs

Sporadic
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRealTimeStatementAccess().getSporadicStatementAction_1_0_0_0(),
            $current);
    }
)
	otherlv_10=Condition
    {
    	newLeafNode(otherlv_10, grammarAccess.getRealTimeStatementAccess().getConditionKeyword_1_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealTimeStatementAccess().getEventExprParserRuleCall_1_0_0_2_0()); 
	    }
		lv_event_11_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTimeStatementRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_11_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_12=Occurs
    {
    	newLeafNode(otherlv_12, grammarAccess.getRealTimeStatementAccess().getOccursKeyword_1_0_0_3());
    }

	otherlv_13=Sporadic
    {
    	newLeafNode(otherlv_13, grammarAccess.getRealTimeStatementAccess().getSporadicKeyword_1_0_0_4());
    }
))
	otherlv_14=With
    {
    	newLeafNode(otherlv_14, grammarAccess.getRealTimeStatementAccess().getWithKeyword_1_1());
    }

	otherlv_15=IAT
    {
    	newLeafNode(otherlv_15, grammarAccess.getRealTimeStatementAccess().getIATKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealTimeStatementAccess().getIatExprParserRuleCall_1_3_0()); 
	    }
		lv_iat_16_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTimeStatementRule());
	        }
       		set(
       			$current, 
       			"iat",
        		lv_iat_16_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_17=With
    {
    	newLeafNode(otherlv_17, grammarAccess.getRealTimeStatementAccess().getWithKeyword_1_4_0());
    }

	otherlv_18=Jitter
    {
    	newLeafNode(otherlv_18, grammarAccess.getRealTimeStatementAccess().getJitterKeyword_1_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealTimeStatementAccess().getJitterExprParserRuleCall_1_4_2_0()); 
	    }
		lv_jitter_19_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTimeStatementRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_19_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleTimeInterval
entryRuleTimeInterval returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTimeIntervalRule()); }
	 iv_ruleTimeInterval=ruleTimeInterval 
	 { $current=$iv_ruleTimeInterval.current; } 
	 EOF 
;

// Rule TimeInterval
ruleTimeInterval returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)
LeftSquareBracket
(
(
ruleExpr
)
)
Comma
(
(
ruleExpr
)
)
RightSquareBracket
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTimeIntervalAccess().getClosedTimeIntervalAction_0_0_0(),
            $current);
    }
)
	otherlv_1=LeftSquareBracket
    {
    	newLeafNode(otherlv_1, grammarAccess.getTimeIntervalAccess().getLeftSquareBracketKeyword_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getLowExprParserRuleCall_0_0_2_0()); 
	    }
		lv_low_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"low",
        		lv_low_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Comma
    {
    	newLeafNode(otherlv_3, grammarAccess.getTimeIntervalAccess().getCommaKeyword_0_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getHighExprParserRuleCall_0_0_4_0()); 
	    }
		lv_high_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"high",
        		lv_high_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=RightSquareBracket
    {
    	newLeafNode(otherlv_5, grammarAccess.getTimeIntervalAccess().getRightSquareBracketKeyword_0_0_5());
    }
))
    |((((
)
LeftParenthesis
(
(
ruleExpr
)
)
Comma
(
(
ruleExpr
)
)
RightSquareBracket
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTimeIntervalAccess().getOpenLeftTimeIntervalAction_1_0_0(),
            $current);
    }
)
	otherlv_7=LeftParenthesis
    {
    	newLeafNode(otherlv_7, grammarAccess.getTimeIntervalAccess().getLeftParenthesisKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getLowExprParserRuleCall_1_0_2_0()); 
	    }
		lv_low_8_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"low",
        		lv_low_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=Comma
    {
    	newLeafNode(otherlv_9, grammarAccess.getTimeIntervalAccess().getCommaKeyword_1_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getHighExprParserRuleCall_1_0_4_0()); 
	    }
		lv_high_10_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"high",
        		lv_high_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_11=RightSquareBracket
    {
    	newLeafNode(otherlv_11, grammarAccess.getTimeIntervalAccess().getRightSquareBracketKeyword_1_0_5());
    }
))
    |((((
)
LeftSquareBracket
(
(
ruleExpr
)
)
Comma
(
(
ruleExpr
)
)
RightParenthesis
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTimeIntervalAccess().getOpenRightTimeIntervalAction_2_0_0(),
            $current);
    }
)
	otherlv_13=LeftSquareBracket
    {
    	newLeafNode(otherlv_13, grammarAccess.getTimeIntervalAccess().getLeftSquareBracketKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getLowExprParserRuleCall_2_0_2_0()); 
	    }
		lv_low_14_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"low",
        		lv_low_14_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_15=Comma
    {
    	newLeafNode(otherlv_15, grammarAccess.getTimeIntervalAccess().getCommaKeyword_2_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getHighExprParserRuleCall_2_0_4_0()); 
	    }
		lv_high_16_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"high",
        		lv_high_16_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_17=RightParenthesis
    {
    	newLeafNode(otherlv_17, grammarAccess.getTimeIntervalAccess().getRightParenthesisKeyword_2_0_5());
    }
))
    |((((
)
LeftParenthesis
(
(
ruleExpr
)
)
Comma
(
(
ruleExpr
)
)
RightParenthesis
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTimeIntervalAccess().getOpenTimeIntervalAction_3_0_0(),
            $current);
    }
)
	otherlv_19=LeftParenthesis
    {
    	newLeafNode(otherlv_19, grammarAccess.getTimeIntervalAccess().getLeftParenthesisKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getLowExprParserRuleCall_3_0_2_0()); 
	    }
		lv_low_20_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"low",
        		lv_low_20_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_21=Comma
    {
    	newLeafNode(otherlv_21, grammarAccess.getTimeIntervalAccess().getCommaKeyword_3_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeIntervalAccess().getHighExprParserRuleCall_3_0_4_0()); 
	    }
		lv_high_22_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeIntervalRule());
	        }
       		set(
       			$current, 
       			"high",
        		lv_high_22_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_23=RightParenthesis
    {
    	newLeafNode(otherlv_23, grammarAccess.getTimeIntervalAccess().getRightParenthesisKeyword_3_0_5());
    }
)))
;





// Entry rule entryRuleSynchStatement
entryRuleSynchStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSynchStatementRule()); }
	 iv_ruleSynchStatement=ruleSynchStatement 
	 { $current=$iv_ruleSynchStatement.current; } 
	 EOF 
;

// Rule SynchStatement
ruleSynchStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSynchStatementAccess().getSynchStatementAction_0_0(),
            $current);
    }
)
	otherlv_1=Synchrony
    {
    	newLeafNode(otherlv_1, grammarAccess.getSynchStatementAccess().getSynchronyKeyword_0_1());
    }

	otherlv_2=Colon
    {
    	newLeafNode(otherlv_2, grammarAccess.getSynchStatementAccess().getColonKeyword_0_2());
    }
(
(
		lv_val_3_0=RULE_INTEGER_LIT
		{
			newLeafNode(lv_val_3_0, grammarAccess.getSynchStatementAccess().getValINTEGER_LITTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_3_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getSynchStatementAccess().getCommaKeyword_0_4_0());
    }
(
(
		lv_val2_5_0=RULE_INTEGER_LIT
		{
			newLeafNode(lv_val2_5_0, grammarAccess.getSynchStatementAccess().getVal2INTEGER_LITTerminalRuleCall_0_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val2",
        		lv_val2_5_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

)
))?(
(
(
		lv_sim_6_1=
	Simult
    {
        newLeafNode(lv_sim_6_1, grammarAccess.getSynchStatementAccess().getSimSimultKeyword_0_5_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
       		setWithLastConsumed($current, "sim", lv_sim_6_1, null);
	    }

    |		lv_sim_6_2=
	No_simult
    {
        newLeafNode(lv_sim_6_2, grammarAccess.getSynchStatementAccess().getSimNo_simultKeyword_0_5_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
       		setWithLastConsumed($current, "sim", lv_sim_6_2, null);
	    }

)

)
)?
	otherlv_7=Semicolon
    {
    	newLeafNode(otherlv_7, grammarAccess.getSynchStatementAccess().getSemicolonKeyword_0_6());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSynchStatementAccess().getMNSynchStatementAction_1_0(),
            $current);
    }
)
	otherlv_9=Synchrony
    {
    	newLeafNode(otherlv_9, grammarAccess.getSynchStatementAccess().getSynchronyKeyword_1_1());
    }

	otherlv_10=Colon
    {
    	newLeafNode(otherlv_10, grammarAccess.getSynchStatementAccess().getColonKeyword_1_2());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getSynchStatementAccess().getComp1NamedElementCrossReference_1_3_0_0()); 
	}

)
)
	otherlv_12=Comma
    {
    	newLeafNode(otherlv_12, grammarAccess.getSynchStatementAccess().getCommaKeyword_1_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getSynchStatementAccess().getComp2NamedElementCrossReference_1_3_2_0()); 
	}

)
)
	otherlv_14=Colon
    {
    	newLeafNode(otherlv_14, grammarAccess.getSynchStatementAccess().getColonKeyword_1_3_3());
    }
(
(
		lv_max_15_0=RULE_INTEGER_LIT
		{
			newLeafNode(lv_max_15_0, grammarAccess.getSynchStatementAccess().getMaxINTEGER_LITTerminalRuleCall_1_3_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"max",
        		lv_max_15_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

)
)
	otherlv_16=Comma
    {
    	newLeafNode(otherlv_16, grammarAccess.getSynchStatementAccess().getCommaKeyword_1_3_5());
    }
(
(
		lv_min_17_0=RULE_INTEGER_LIT
		{
			newLeafNode(lv_min_17_0, grammarAccess.getSynchStatementAccess().getMinINTEGER_LITTerminalRuleCall_1_3_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"min",
        		lv_min_17_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

)
))+
	otherlv_18=Semicolon
    {
    	newLeafNode(otherlv_18, grammarAccess.getSynchStatementAccess().getSemicolonKeyword_1_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSynchStatementAccess().getCalenStatementAction_2_0(),
            $current);
    }
)
	otherlv_20=Calendar
    {
    	newLeafNode(otherlv_20, grammarAccess.getSynchStatementAccess().getCalendarKeyword_2_1());
    }

	otherlv_21=Colon
    {
    	newLeafNode(otherlv_21, grammarAccess.getSynchStatementAccess().getColonKeyword_2_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
        }
	otherlv_22=RULE_ID
	{
		newLeafNode(otherlv_22, grammarAccess.getSynchStatementAccess().getElsNamedElementCrossReference_2_3_0()); 
	}

)
)(
	otherlv_23=Comma
    {
    	newLeafNode(otherlv_23, grammarAccess.getSynchStatementAccess().getCommaKeyword_2_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchStatementRule());
	        }
        }
	otherlv_24=RULE_ID
	{
		newLeafNode(otherlv_24, grammarAccess.getSynchStatementAccess().getElsNamedElementCrossReference_2_4_1_0()); 
	}

)
))*
	otherlv_25=Semicolon
    {
    	newLeafNode(otherlv_25, grammarAccess.getSynchStatementAccess().getSemicolonKeyword_2_5());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSynchStatementAccess().getAsynchStatementAction_3_0(),
            $current);
    }
)
	otherlv_27=Synchrony
    {
    	newLeafNode(otherlv_27, grammarAccess.getSynchStatementAccess().getSynchronyKeyword_3_1());
    }

	otherlv_28=Colon
    {
    	newLeafNode(otherlv_28, grammarAccess.getSynchStatementAccess().getColonKeyword_3_2());
    }

	otherlv_29=Asynchronous
    {
    	newLeafNode(otherlv_29, grammarAccess.getSynchStatementAccess().getAsynchronousKeyword_3_3());
    }

	otherlv_30=Semicolon
    {
    	newLeafNode(otherlv_30, grammarAccess.getSynchStatementAccess().getSemicolonKeyword_3_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSynchStatementAccess().getLatchedStatementAction_4_0(),
            $current);
    }
)
	otherlv_32=Synchrony
    {
    	newLeafNode(otherlv_32, grammarAccess.getSynchStatementAccess().getSynchronyKeyword_4_1());
    }

	otherlv_33=Colon
    {
    	newLeafNode(otherlv_33, grammarAccess.getSynchStatementAccess().getColonKeyword_4_2());
    }

	otherlv_34=Latched
    {
    	newLeafNode(otherlv_34, grammarAccess.getSynchStatementAccess().getLatchedKeyword_4_3());
    }

	otherlv_35=Semicolon
    {
    	newLeafNode(otherlv_35, grammarAccess.getSynchStatementAccess().getSemicolonKeyword_4_4());
    }
))
;





// Entry rule entryRuleOrderStatement
entryRuleOrderStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getOrderStatementRule()); }
	 iv_ruleOrderStatement=ruleOrderStatement 
	 { $current=$iv_ruleOrderStatement.current; } 
	 EOF 
;

// Rule OrderStatement
ruleOrderStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Ordering
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderStatementAccess().getOrderingKeyword_0());
    }

	otherlv_1=Colon
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrderStatementAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderStatementRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getOrderStatementAccess().getCompsNamedElementCrossReference_2_0()); 
	}

)
)(
	otherlv_3=Comma
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrderStatementAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderStatementRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getOrderStatementAccess().getCompsNamedElementCrossReference_3_1_0()); 
	}

)
))*
	otherlv_5=Semicolon
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrderStatementAccess().getSemicolonKeyword_4());
    }
)
;







// Entry rule entryRuleAbstraction
entryRuleAbstraction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAbstractionRule()); }
	 iv_ruleAbstraction=ruleAbstraction 
	 { $current=$iv_ruleAbstraction.current; } 
	 EOF 
;

// Rule Abstraction
ruleAbstraction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractionAccess().getLinearizationDefParserRuleCall_0()); 
    }
    this_LinearizationDef_0=ruleLinearizationDef
    {
        $current = $this_LinearizationDef_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractionAccess().getLibraryFnDefParserRuleCall_1()); 
    }
    this_LibraryFnDef_1=ruleLibraryFnDef
    {
        $current = $this_LibraryFnDef_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractionAccess().getFnDefParserRuleCall_2()); 
    }
    this_FnDef_2=ruleFnDef
    {
        $current = $this_FnDef_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractionAccess().getNodeDefParserRuleCall_3()); 
    }
    this_NodeDef_3=ruleNodeDef
    {
        $current = $this_NodeDef_3.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePropertyStatement
entryRulePropertyStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyStatementRule()); }
	 iv_rulePropertyStatement=rulePropertyStatement 
	 { $current=$iv_rulePropertyStatement.current; } 
	 EOF 
;

// Rule PropertyStatement
rulePropertyStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Property
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertyStatementAccess().getPropertyKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPropertyStatementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=EqualsSign
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertyStatementAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyStatementAccess().getExprExprParserRuleCall_3_0()); 
	    }
		lv_expr_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=Semicolon
    {
    	newLeafNode(otherlv_4, grammarAccess.getPropertyStatementAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleConstStatement
entryRuleConstStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConstStatementRule()); }
	 iv_ruleConstStatement=ruleConstStatement 
	 { $current=$iv_ruleConstStatement.current; } 
	 EOF 
;

// Rule ConstStatement
ruleConstStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Const
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstStatementAccess().getConstKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstStatementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=Colon
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstStatementAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstStatementAccess().getTypeTypeParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstStatementRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Type");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=EqualsSign
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstStatementAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstStatementAccess().getExprExprParserRuleCall_5_0()); 
	    }
		lv_expr_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstStatementAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleEqStatement
entryRuleEqStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getEqStatementRule()); }
	 iv_ruleEqStatement=ruleEqStatement 
	 { $current=$iv_ruleEqStatement.current; } 
	 EOF 
;

// Rule EqStatement
ruleEqStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Eq
    {
    	newLeafNode(otherlv_0, grammarAccess.getEqStatementAccess().getEqKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEqStatementAccess().getLhsArgParserRuleCall_1_0_0()); 
	    }
		lv_lhs_1_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqStatementRule());
	        }
       		add(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=Comma
    {
    	newLeafNode(otherlv_2, grammarAccess.getEqStatementAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEqStatementAccess().getLhsArgParserRuleCall_1_1_1_0()); 
	    }
		lv_lhs_3_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqStatementRule());
	        }
       		add(
       			$current, 
       			"lhs",
        		lv_lhs_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)(
	otherlv_4=EqualsSign
    {
    	newLeafNode(otherlv_4, grammarAccess.getEqStatementAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEqStatementAccess().getExprExprParserRuleCall_2_1_0()); 
	    }
		lv_expr_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getEqStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleInputStatement
entryRuleInputStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getInputStatementRule()); }
	 iv_ruleInputStatement=ruleInputStatement 
	 { $current=$iv_ruleInputStatement.current; } 
	 EOF 
;

// Rule InputStatement
ruleInputStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Agree_input
    {
    	newLeafNode(otherlv_0, grammarAccess.getInputStatementAccess().getAgree_inputKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInputStatementAccess().getLhsArgParserRuleCall_1_0_0()); 
	    }
		lv_lhs_1_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputStatementRule());
	        }
       		add(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=Comma
    {
    	newLeafNode(otherlv_2, grammarAccess.getInputStatementAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputStatementAccess().getLhsArgParserRuleCall_1_1_1_0()); 
	    }
		lv_lhs_3_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputStatementRule());
	        }
       		add(
       			$current, 
       			"lhs",
        		lv_lhs_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
	otherlv_4=Semicolon
    {
    	newLeafNode(otherlv_4, grammarAccess.getInputStatementAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleAssignStatement
entryRuleAssignStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAssignStatementRule()); }
	 iv_ruleAssignStatement=ruleAssignStatement 
	 { $current=$iv_ruleAssignStatement.current; } 
	 EOF 
;

// Rule AssignStatement
ruleAssignStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Assign
    {
    	newLeafNode(otherlv_0, grammarAccess.getAssignStatementAccess().getAssignKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssignStatementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssignStatementAccess().getIdNamedElementCrossReference_1_0()); 
	    }
		ruleQCPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_2=EqualsSign
    {
    	newLeafNode(otherlv_2, grammarAccess.getAssignStatementAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignStatementAccess().getExprExprParserRuleCall_3_0()); 
	    }
		lv_expr_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignStatementRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=Semicolon
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssignStatementAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleFnDef
entryRuleFnDef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFnDefRule()); }
	 iv_ruleFnDef=ruleFnDef 
	 { $current=$iv_ruleFnDef.current; } 
	 EOF 
;

// Rule FnDef
ruleFnDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Fun
    {
    	newLeafNode(otherlv_0, grammarAccess.getFnDefAccess().getFunKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFnDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFnDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=LeftParenthesis
    {
    	newLeafNode(otherlv_2, grammarAccess.getFnDefAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnDefAccess().getArgsArgParserRuleCall_3_0()); 
	    }
		lv_args_3_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getFnDefAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnDefAccess().getArgsArgParserRuleCall_4_1_0()); 
	    }
		lv_args_5_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getFnDefAccess().getRightParenthesisKeyword_5());
    }

	otherlv_7=Colon
    {
    	newLeafNode(otherlv_7, grammarAccess.getFnDefAccess().getColonKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnDefAccess().getTypeTypeParserRuleCall_7_0()); 
	    }
		lv_type_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Type");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=EqualsSign
    {
    	newLeafNode(otherlv_9, grammarAccess.getFnDefAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFnDefAccess().getExprExprParserRuleCall_9_0()); 
	    }
		lv_expr_10_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFnDefRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_11=Semicolon
    {
    	newLeafNode(otherlv_11, grammarAccess.getFnDefAccess().getSemicolonKeyword_10());
    }
)
;





// Entry rule entryRuleLibraryFnDef
entryRuleLibraryFnDef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLibraryFnDefRule()); }
	 iv_ruleLibraryFnDef=ruleLibraryFnDef 
	 { $current=$iv_ruleLibraryFnDef.current; } 
	 EOF 
;

// Rule LibraryFnDef
ruleLibraryFnDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=External
    {
    	newLeafNode(otherlv_0, grammarAccess.getLibraryFnDefAccess().getExternalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLibraryFnDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLibraryFnDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=LeftParenthesis
    {
    	newLeafNode(otherlv_2, grammarAccess.getLibraryFnDefAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLibraryFnDefAccess().getArgsArgParserRuleCall_3_0()); 
	    }
		lv_args_3_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLibraryFnDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getLibraryFnDefAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLibraryFnDefAccess().getArgsArgParserRuleCall_4_1_0()); 
	    }
		lv_args_5_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLibraryFnDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getLibraryFnDefAccess().getRightParenthesisKeyword_5());
    }

	otherlv_7=Colon
    {
    	newLeafNode(otherlv_7, grammarAccess.getLibraryFnDefAccess().getColonKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLibraryFnDefAccess().getTypeTypeParserRuleCall_7_0()); 
	    }
		lv_type_8_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLibraryFnDefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Type");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=Semicolon
    {
    	newLeafNode(otherlv_9, grammarAccess.getLibraryFnDefAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleLinearizationDef
entryRuleLinearizationDef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLinearizationDefRule()); }
	 iv_ruleLinearizationDef=ruleLinearizationDef 
	 { $current=$iv_ruleLinearizationDef.current; } 
	 EOF 
;

// Rule LinearizationDef
ruleLinearizationDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Linearization
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinearizationDefAccess().getLinearizationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLinearizationDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinearizationDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=LeftParenthesis
    {
    	newLeafNode(otherlv_2, grammarAccess.getLinearizationDefAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationDefAccess().getArgsArgParserRuleCall_3_0()); 
	    }
		lv_args_3_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getLinearizationDefAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationDefAccess().getArgsArgParserRuleCall_4_1_0()); 
	    }
		lv_args_5_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getLinearizationDefAccess().getRightParenthesisKeyword_5());
    }

	otherlv_7=Over
    {
    	newLeafNode(otherlv_7, grammarAccess.getLinearizationDefAccess().getOverKeyword_6());
    }

	otherlv_8=LeftSquareBracket
    {
    	newLeafNode(otherlv_8, grammarAccess.getLinearizationDefAccess().getLeftSquareBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationDefAccess().getIntervalsLinearizationIntervalParserRuleCall_8_0()); 
	    }
		lv_intervals_9_0=ruleLinearizationInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationDefRule());
	        }
       		add(
       			$current, 
       			"intervals",
        		lv_intervals_9_0, 
        		"com.rockwellcollins.atc.agree.Agree.LinearizationInterval");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_10=Comma
    {
    	newLeafNode(otherlv_10, grammarAccess.getLinearizationDefAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationDefAccess().getIntervalsLinearizationIntervalParserRuleCall_9_1_0()); 
	    }
		lv_intervals_11_0=ruleLinearizationInterval		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationDefRule());
	        }
       		add(
       			$current, 
       			"intervals",
        		lv_intervals_11_0, 
        		"com.rockwellcollins.atc.agree.Agree.LinearizationInterval");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_12=RightSquareBracket
    {
    	newLeafNode(otherlv_12, grammarAccess.getLinearizationDefAccess().getRightSquareBracketKeyword_10());
    }
(
	otherlv_13=Within
    {
    	newLeafNode(otherlv_13, grammarAccess.getLinearizationDefAccess().getWithinKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationDefAccess().getPrecisionExprParserRuleCall_11_1_0()); 
	    }
		lv_precision_14_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationDefRule());
	        }
       		set(
       			$current, 
       			"precision",
        		lv_precision_14_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_15=Colon
    {
    	newLeafNode(otherlv_15, grammarAccess.getLinearizationDefAccess().getColonKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationDefAccess().getExprBodyExprParserRuleCall_13_0()); 
	    }
		lv_exprBody_16_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationDefRule());
	        }
       		set(
       			$current, 
       			"exprBody",
        		lv_exprBody_16_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_17=Semicolon
    {
    	newLeafNode(otherlv_17, grammarAccess.getLinearizationDefAccess().getSemicolonKeyword_14());
    }
)
;





// Entry rule entryRuleLinearizationInterval
entryRuleLinearizationInterval returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLinearizationIntervalRule()); }
	 iv_ruleLinearizationInterval=ruleLinearizationInterval 
	 { $current=$iv_ruleLinearizationInterval.current; } 
	 EOF 
;

// Rule LinearizationInterval
ruleLinearizationInterval returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationIntervalAccess().getStartExprParserRuleCall_0_0()); 
	    }
		lv_start_0_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationIntervalRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_0_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=FullStopFullStop
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinearizationIntervalAccess().getFullStopFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinearizationIntervalAccess().getEndExprParserRuleCall_2_0()); 
	    }
		lv_end_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinearizationIntervalRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNodeDef
entryRuleNodeDef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNodeDefRule()); }
	 iv_ruleNodeDef=ruleNodeDef 
	 { $current=$iv_ruleNodeDef.current; } 
	 EOF 
;

// Rule NodeDef
ruleNodeDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Node
    {
    	newLeafNode(otherlv_0, grammarAccess.getNodeDefAccess().getNodeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNodeDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=LeftParenthesis
    {
    	newLeafNode(otherlv_2, grammarAccess.getNodeDefAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getNodeDefAccess().getArgsArgParserRuleCall_3_0_0()); 
	    }
		lv_args_3_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getNodeDefAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodeDefAccess().getArgsArgParserRuleCall_3_1_1_0()); 
	    }
		lv_args_5_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getNodeDefAccess().getRightParenthesisKeyword_4());
    }

	otherlv_7=Returns
    {
    	newLeafNode(otherlv_7, grammarAccess.getNodeDefAccess().getReturnsKeyword_5());
    }

	otherlv_8=LeftParenthesis
    {
    	newLeafNode(otherlv_8, grammarAccess.getNodeDefAccess().getLeftParenthesisKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getNodeDefAccess().getRetsArgParserRuleCall_7_0_0()); 
	    }
		lv_rets_9_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeDefRule());
	        }
       		add(
       			$current, 
       			"rets",
        		lv_rets_9_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_10=Comma
    {
    	newLeafNode(otherlv_10, grammarAccess.getNodeDefAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodeDefAccess().getRetsArgParserRuleCall_7_1_1_0()); 
	    }
		lv_rets_11_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeDefRule());
	        }
       		add(
       			$current, 
       			"rets",
        		lv_rets_11_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_12=RightParenthesis
    {
    	newLeafNode(otherlv_12, grammarAccess.getNodeDefAccess().getRightParenthesisKeyword_8());
    }

	otherlv_13=Semicolon
    {
    	newLeafNode(otherlv_13, grammarAccess.getNodeDefAccess().getSemicolonKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodeDefAccess().getNodeBodyNodeBodyExprParserRuleCall_10_0()); 
	    }
		lv_nodeBody_14_0=ruleNodeBodyExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeDefRule());
	        }
       		set(
       			$current, 
       			"nodeBody",
        		lv_nodeBody_14_0, 
        		"com.rockwellcollins.atc.agree.Agree.NodeBodyExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNodeBodyExpr
entryRuleNodeBodyExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNodeBodyExprRule()); }
	 iv_ruleNodeBodyExpr=ruleNodeBodyExpr 
	 { $current=$iv_ruleNodeBodyExpr.current; } 
	 EOF 
;

// Rule NodeBodyExpr
ruleNodeBodyExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=Var
    {
    	newLeafNode(otherlv_0, grammarAccess.getNodeBodyExprAccess().getVarKeyword_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getNodeBodyExprAccess().getLocsArgParserRuleCall_0_1_0_0()); 
	    }
		lv_locs_1_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeBodyExprRule());
	        }
       		add(
       			$current, 
       			"locs",
        		lv_locs_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_2=Semicolon
    {
    	newLeafNode(otherlv_2, grammarAccess.getNodeBodyExprAccess().getSemicolonKeyword_0_1_1());
    }
)+)?
	otherlv_3=Let
    {
    	newLeafNode(otherlv_3, grammarAccess.getNodeBodyExprAccess().getLetKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodeBodyExprAccess().getStmtsNodeStmtParserRuleCall_2_0()); 
	    }
		lv_stmts_4_0=ruleNodeStmt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeBodyExprRule());
	        }
       		add(
       			$current, 
       			"stmts",
        		lv_stmts_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.NodeStmt");
	        afterParserOrEnumRuleCall();
	    }

)
)+
	otherlv_5=Tel
    {
    	newLeafNode(otherlv_5, grammarAccess.getNodeBodyExprAccess().getTelKeyword_3());
    }

	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getNodeBodyExprAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleNodeStmt
entryRuleNodeStmt returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNodeStmtRule()); }
	 iv_ruleNodeStmt=ruleNodeStmt 
	 { $current=$iv_ruleNodeStmt.current; } 
	 EOF 
;

// Rule NodeStmt
ruleNodeStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNodeStmtAccess().getNodeEqAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeStmtRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getNodeStmtAccess().getLhsArgCrossReference_0_1_0()); 
	}

)
)(
	otherlv_2=Comma
    {
    	newLeafNode(otherlv_2, grammarAccess.getNodeStmtAccess().getCommaKeyword_0_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeStmtRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getNodeStmtAccess().getLhsArgCrossReference_0_2_1_0()); 
	}

)
))*
	otherlv_4=EqualsSign
    {
    	newLeafNode(otherlv_4, grammarAccess.getNodeStmtAccess().getEqualsSignKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodeStmtAccess().getExprExprParserRuleCall_0_4_0()); 
	    }
		lv_expr_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeStmtRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getNodeStmtAccess().getSemicolonKeyword_0_5());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNodeStmtAccess().getNodeLemmaAction_1_0(),
            $current);
    }
)
	otherlv_8=Lemma
    {
    	newLeafNode(otherlv_8, grammarAccess.getNodeStmtAccess().getLemmaKeyword_1_1());
    }
(
(
		lv_str_9_0=RULE_STRING
		{
			newLeafNode(lv_str_9_0, grammarAccess.getNodeStmtAccess().getStrSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNodeStmtRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_9_0, 
        		"org.osate.xtext.aadl2.properties.Properties.STRING");
	    }

)
)
	otherlv_10=Colon
    {
    	newLeafNode(otherlv_10, grammarAccess.getNodeStmtAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNodeStmtAccess().getExprExprParserRuleCall_1_4_0()); 
	    }
		lv_expr_11_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNodeStmtRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_11_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_12=Semicolon
    {
    	newLeafNode(otherlv_12, grammarAccess.getNodeStmtAccess().getSemicolonKeyword_1_5());
    }
))
;





// Entry rule entryRuleArg
entryRuleArg returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getArgRule()); }
	 iv_ruleArg=ruleArg 
	 { $current=$iv_ruleArg.current; } 
	 EOF 
;

// Rule Arg
ruleArg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
RULE_ID

)
)
Colon
(
(
ruleType
)
)))=>((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getArgAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_1=Colon
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgAccess().getTypeTypeParserRuleCall_0_2_0()); 
	    }
		lv_type_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.Type");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getBaseTypeParserRuleCall_0()); 
    }
    this_BaseType_0=ruleBaseType
    {
        $current = $this_BaseType_0.current;
        afterParserOrEnumRuleCall();
    }
((((
)
LeftSquareBracket
(
(
RULE_INTEGER_LIT

)
)
RightSquareBracket
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTypeAccess().getArrayTypeStemAction_1_0_0(),
            $current);
    }
)
	otherlv_2=LeftSquareBracket
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_1_0_1());
    }
(
(
		lv_size_3_0=RULE_INTEGER_LIT
		{
			newLeafNode(lv_size_3_0, grammarAccess.getTypeAccess().getSizeINTEGER_LITTerminalRuleCall_1_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

)
)
	otherlv_4=RightSquareBracket
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getRightSquareBracketKeyword_1_0_3());
    }
))*)
;





// Entry rule entryRuleBaseType
entryRuleBaseType returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getBaseTypeRule()); }
	 iv_ruleBaseType=ruleBaseType 
	 { $current=$iv_ruleBaseType.current; } 
	 EOF 
;

// Rule BaseType
ruleBaseType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBaseTypeAccess().getPrimTypeAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseTypeAccess().getNamePrimTypesParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleprimTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.primTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_2=LeftSquareBracket
    {
    	newLeafNode(otherlv_2, grammarAccess.getBaseTypeAccess().getLeftSquareBracketKeyword_0_2_0());
    }
(
(
		lv_lowNeg_3_0=
	HyphenMinus
    {
        newLeafNode(lv_lowNeg_3_0, grammarAccess.getBaseTypeAccess().getLowNegHyphenMinusKeyword_0_2_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseTypeRule());
	        }
       		setWithLastConsumed($current, "lowNeg", lv_lowNeg_3_0, "-");
	    }

)
)?(
(
(
		lv_rangeLow_4_1=RULE_INTEGER_LIT
		{
			newLeafNode(lv_rangeLow_4_1, grammarAccess.getBaseTypeAccess().getRangeLowINTEGER_LITTerminalRuleCall_0_2_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rangeLow",
        		lv_rangeLow_4_1, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

    |		lv_rangeLow_4_2=RULE_REAL_LIT
		{
			newLeafNode(lv_rangeLow_4_2, grammarAccess.getBaseTypeAccess().getRangeLowREAL_LITTerminalRuleCall_0_2_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rangeLow",
        		lv_rangeLow_4_2, 
        		"org.osate.xtext.aadl2.properties.Properties.REAL_LIT");
	    }

)

)
)
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getBaseTypeAccess().getCommaKeyword_0_2_3());
    }
(
(
		lv_highNeg_6_0=
	HyphenMinus
    {
        newLeafNode(lv_highNeg_6_0, grammarAccess.getBaseTypeAccess().getHighNegHyphenMinusKeyword_0_2_4_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseTypeRule());
	        }
       		setWithLastConsumed($current, "highNeg", lv_highNeg_6_0, "-");
	    }

)
)?(
(
(
		lv_rangeHigh_7_1=RULE_INTEGER_LIT
		{
			newLeafNode(lv_rangeHigh_7_1, grammarAccess.getBaseTypeAccess().getRangeHighINTEGER_LITTerminalRuleCall_0_2_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rangeHigh",
        		lv_rangeHigh_7_1, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

    |		lv_rangeHigh_7_2=RULE_REAL_LIT
		{
			newLeafNode(lv_rangeHigh_7_2, grammarAccess.getBaseTypeAccess().getRangeHighREAL_LITTerminalRuleCall_0_2_5_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBaseTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rangeHigh",
        		lv_rangeHigh_7_2, 
        		"org.osate.xtext.aadl2.properties.Properties.REAL_LIT");
	    }

)

)
)
	otherlv_8=RightSquareBracket
    {
    	newLeafNode(otherlv_8, grammarAccess.getBaseTypeAccess().getRightSquareBracketKeyword_0_2_6());
    }
)?)
    |
    { 
        newCompositeNode(grammarAccess.getBaseTypeAccess().getDoubleDotRefParserRuleCall_1()); 
    }
    this_DoubleDotRef_9=ruleDoubleDotRef
    {
        $current = $this_DoubleDotRef_9.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleprimTypes
entryRuleprimTypes returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getPrimTypesRule()); } 
	 iv_ruleprimTypes=ruleprimTypes 
	 { $current=$iv_ruleprimTypes.current.getText(); }  
	 EOF 
;

// Rule primTypes
ruleprimTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=Real 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimTypesAccess().getRealKeyword_0()); 
    }

    |
	kw=Bool 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimTypesAccess().getBoolKeyword_1()); 
    }

    |
	kw=Int 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrimTypesAccess().getIntKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleRecordDef
entryRuleRecordDef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRecordDefRule()); }
	 iv_ruleRecordDef=ruleRecordDef 
	 { $current=$iv_ruleRecordDef.current; } 
	 EOF 
;

// Rule RecordDef
ruleRecordDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Type
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordDefAccess().getTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRecordDefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordDefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=EqualsSign
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordDefAccess().getEqualsSignKeyword_2());
    }

	otherlv_3=Struct
    {
    	newLeafNode(otherlv_3, grammarAccess.getRecordDefAccess().getStructKeyword_3());
    }

	otherlv_4=LeftCurlyBracket
    {
    	newLeafNode(otherlv_4, grammarAccess.getRecordDefAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRecordDefAccess().getArgsArgParserRuleCall_5_0_0()); 
	    }
		lv_args_5_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_6=Comma
    {
    	newLeafNode(otherlv_6, grammarAccess.getRecordDefAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordDefAccess().getArgsArgParserRuleCall_5_1_1_0()); 
	    }
		lv_args_7_0=ruleArg		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordDefRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_7_0, 
        		"com.rockwellcollins.atc.agree.Agree.Arg");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
	otherlv_8=RightCurlyBracket
    {
    	newLeafNode(otherlv_8, grammarAccess.getRecordDefAccess().getRightCurlyBracketKeyword_6());
    }

	otherlv_9=Semicolon
    {
    	newLeafNode(otherlv_9, grammarAccess.getRecordDefAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleEnumStatement
entryRuleEnumStatement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getEnumStatementRule()); }
	 iv_ruleEnumStatement=ruleEnumStatement 
	 { $current=$iv_ruleEnumStatement.current; } 
	 EOF 
;

// Rule EnumStatement
ruleEnumStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Enum
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumStatementAccess().getEnumKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumStatementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_2=EqualsSign
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumStatementAccess().getEqualsSignKeyword_2());
    }

	otherlv_3=LeftCurlyBracket
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumStatementAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumStatementAccess().getEnumsNamedIDParserRuleCall_4_0()); 
	    }
		lv_enums_4_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumStatementRule());
	        }
       		add(
       			$current, 
       			"enums",
        		lv_enums_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumStatementAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumStatementAccess().getEnumsNamedIDParserRuleCall_5_1_0()); 
	    }
		lv_enums_6_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumStatementRule());
	        }
       		add(
       			$current, 
       			"enums",
        		lv_enums_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_7=RightCurlyBracket
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumStatementAccess().getRightCurlyBracketKeyword_6());
    }

	otherlv_8=Semicolon
    {
    	newLeafNode(otherlv_8, grammarAccess.getEnumStatementAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleExpr
entryRuleExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExprRule()); }
	 iv_ruleExpr=ruleExpr 
	 { $current=$iv_ruleExpr.current; } 
	 EOF 
;

// Rule Expr
ruleExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExprAccess().getForallExprParserRuleCall()); 
    }
    this_ForallExpr_0=ruleForallExpr
    {
        $current = $this_ForallExpr_0.current;
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleForallExpr
entryRuleForallExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getForallExprRule()); }
	 iv_ruleForallExpr=ruleForallExpr 
	 { $current=$iv_ruleForallExpr.current; } 
	 EOF 
;

// Rule ForallExpr
ruleForallExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getForallExprAccess().getForallExprAction_0_0(),
            $current);
    }
)
	otherlv_1=Forall
    {
    	newLeafNode(otherlv_1, grammarAccess.getForallExprAccess().getForallKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForallExprAccess().getBindingNamedIDParserRuleCall_0_2_0()); 
	    }
		lv_binding_2_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForallExprRule());
	        }
       		set(
       			$current, 
       			"binding",
        		lv_binding_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=In
    {
    	newLeafNode(otherlv_3, grammarAccess.getForallExprAccess().getInKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForallExprAccess().getArrayExprParserRuleCall_0_4_0()); 
	    }
		lv_array_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForallExprRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getForallExprAccess().getCommaKeyword_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForallExprAccess().getExprExprParserRuleCall_0_6_0()); 
	    }
		lv_expr_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForallExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getForallExprAccess().getExistsExprParserRuleCall_1()); 
    }
    this_ExistsExpr_7=ruleExistsExpr
    {
        $current = $this_ExistsExpr_7.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExistsExpr
entryRuleExistsExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExistsExprRule()); }
	 iv_ruleExistsExpr=ruleExistsExpr 
	 { $current=$iv_ruleExistsExpr.current; } 
	 EOF 
;

// Rule ExistsExpr
ruleExistsExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExistsExprAccess().getExistsExprAction_0_0(),
            $current);
    }
)
	otherlv_1=Exists
    {
    	newLeafNode(otherlv_1, grammarAccess.getExistsExprAccess().getExistsKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistsExprAccess().getBindingNamedIDParserRuleCall_0_2_0()); 
	    }
		lv_binding_2_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistsExprRule());
	        }
       		set(
       			$current, 
       			"binding",
        		lv_binding_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=In
    {
    	newLeafNode(otherlv_3, grammarAccess.getExistsExprAccess().getInKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistsExprAccess().getArrayExprParserRuleCall_0_4_0()); 
	    }
		lv_array_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistsExprRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getExistsExprAccess().getCommaKeyword_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExistsExprAccess().getExprExprParserRuleCall_0_6_0()); 
	    }
		lv_expr_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExistsExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getExistsExprAccess().getForeachExprParserRuleCall_1()); 
    }
    this_ForeachExpr_7=ruleForeachExpr
    {
        $current = $this_ForeachExpr_7.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleForeachExpr
entryRuleForeachExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getForeachExprRule()); }
	 iv_ruleForeachExpr=ruleForeachExpr 
	 { $current=$iv_ruleForeachExpr.current; } 
	 EOF 
;

// Rule ForeachExpr
ruleForeachExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getForeachExprAccess().getForeachExprAction_0_0(),
            $current);
    }
)
	otherlv_1=Foreach
    {
    	newLeafNode(otherlv_1, grammarAccess.getForeachExprAccess().getForeachKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeachExprAccess().getBindingNamedIDParserRuleCall_0_2_0()); 
	    }
		lv_binding_2_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeachExprRule());
	        }
       		set(
       			$current, 
       			"binding",
        		lv_binding_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=In
    {
    	newLeafNode(otherlv_3, grammarAccess.getForeachExprAccess().getInKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeachExprAccess().getArrayExprParserRuleCall_0_4_0()); 
	    }
		lv_array_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeachExprRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getForeachExprAccess().getCommaKeyword_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForeachExprAccess().getExprExprParserRuleCall_0_6_0()); 
	    }
		lv_expr_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForeachExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getForeachExprAccess().getFoldLeftExprParserRuleCall_1()); 
    }
    this_FoldLeftExpr_7=ruleFoldLeftExpr
    {
        $current = $this_FoldLeftExpr_7.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFoldLeftExpr
entryRuleFoldLeftExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFoldLeftExprRule()); }
	 iv_ruleFoldLeftExpr=ruleFoldLeftExpr 
	 { $current=$iv_ruleFoldLeftExpr.current; } 
	 EOF 
;

// Rule FoldLeftExpr
ruleFoldLeftExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFoldLeftExprAccess().getFoldLeftExprAction_0_0(),
            $current);
    }
)
	otherlv_1=Foldl
    {
    	newLeafNode(otherlv_1, grammarAccess.getFoldLeftExprAccess().getFoldlKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldLeftExprAccess().getBindingNamedIDParserRuleCall_0_2_0()); 
	    }
		lv_binding_2_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldLeftExprRule());
	        }
       		set(
       			$current, 
       			"binding",
        		lv_binding_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=In
    {
    	newLeafNode(otherlv_3, grammarAccess.getFoldLeftExprAccess().getInKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldLeftExprAccess().getArrayExprParserRuleCall_0_4_0()); 
	    }
		lv_array_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldLeftExprRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Into
    {
    	newLeafNode(otherlv_5, grammarAccess.getFoldLeftExprAccess().getIntoKeyword_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldLeftExprAccess().getAccumulatorNamedIDParserRuleCall_0_6_0()); 
	    }
		lv_accumulator_6_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldLeftExprRule());
	        }
       		set(
       			$current, 
       			"accumulator",
        		lv_accumulator_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_7=EqualsSign
    {
    	newLeafNode(otherlv_7, grammarAccess.getFoldLeftExprAccess().getEqualsSignKeyword_0_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldLeftExprAccess().getInitialExprParserRuleCall_0_8_0()); 
	    }
		lv_initial_8_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldLeftExprRule());
	        }
       		set(
       			$current, 
       			"initial",
        		lv_initial_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=Comma
    {
    	newLeafNode(otherlv_9, grammarAccess.getFoldLeftExprAccess().getCommaKeyword_0_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldLeftExprAccess().getExprExprParserRuleCall_0_10_0()); 
	    }
		lv_expr_10_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldLeftExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getFoldLeftExprAccess().getFoldRightExprParserRuleCall_1()); 
    }
    this_FoldRightExpr_11=ruleFoldRightExpr
    {
        $current = $this_FoldRightExpr_11.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFoldRightExpr
entryRuleFoldRightExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFoldRightExprRule()); }
	 iv_ruleFoldRightExpr=ruleFoldRightExpr 
	 { $current=$iv_ruleFoldRightExpr.current; } 
	 EOF 
;

// Rule FoldRightExpr
ruleFoldRightExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFoldRightExprAccess().getFoldRightExprAction_0_0(),
            $current);
    }
)
	otherlv_1=Foldr
    {
    	newLeafNode(otherlv_1, grammarAccess.getFoldRightExprAccess().getFoldrKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldRightExprAccess().getBindingNamedIDParserRuleCall_0_2_0()); 
	    }
		lv_binding_2_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldRightExprRule());
	        }
       		set(
       			$current, 
       			"binding",
        		lv_binding_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=In
    {
    	newLeafNode(otherlv_3, grammarAccess.getFoldRightExprAccess().getInKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldRightExprAccess().getArrayExprParserRuleCall_0_4_0()); 
	    }
		lv_array_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldRightExprRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Into
    {
    	newLeafNode(otherlv_5, grammarAccess.getFoldRightExprAccess().getIntoKeyword_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldRightExprAccess().getAccumulatorNamedIDParserRuleCall_0_6_0()); 
	    }
		lv_accumulator_6_0=ruleNamedID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldRightExprRule());
	        }
       		set(
       			$current, 
       			"accumulator",
        		lv_accumulator_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.NamedID");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_7=EqualsSign
    {
    	newLeafNode(otherlv_7, grammarAccess.getFoldRightExprAccess().getEqualsSignKeyword_0_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldRightExprAccess().getInitialExprParserRuleCall_0_8_0()); 
	    }
		lv_initial_8_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldRightExprRule());
	        }
       		set(
       			$current, 
       			"initial",
        		lv_initial_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_9=Comma
    {
    	newLeafNode(otherlv_9, grammarAccess.getFoldRightExprAccess().getCommaKeyword_0_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFoldRightExprAccess().getExprExprParserRuleCall_0_10_0()); 
	    }
		lv_expr_10_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFoldRightExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getFoldRightExprAccess().getArrowExprParserRuleCall_1()); 
    }
    this_ArrowExpr_11=ruleArrowExpr
    {
        $current = $this_ArrowExpr_11.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrowExpr
entryRuleArrowExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getArrowExprRule()); }
	 iv_ruleArrowExpr=ruleArrowExpr 
	 { $current=$iv_ruleArrowExpr.current; } 
	 EOF 
;

// Rule ArrowExpr
ruleArrowExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getArrowExprAccess().getImpliesExprParserRuleCall_0()); 
    }
    this_ImpliesExpr_0=ruleImpliesExpr
    {
        $current = $this_ImpliesExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(

HyphenMinusGreaterThanSign


)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getArrowExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=
	HyphenMinusGreaterThanSign
    {
        newLeafNode(lv_op_2_0, grammarAccess.getArrowExprAccess().getOpHyphenMinusGreaterThanSignKeyword_1_0_0_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrowExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "->");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getArrowExprAccess().getRightArrowExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleArrowExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrowExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.ArrowExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleImpliesExpr
entryRuleImpliesExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getImpliesExprRule()); }
	 iv_ruleImpliesExpr=ruleImpliesExpr 
	 { $current=$iv_ruleImpliesExpr.current; } 
	 EOF 
;

// Rule ImpliesExpr
ruleImpliesExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getImpliesExprAccess().getEquivExprParserRuleCall_0()); 
    }
    this_EquivExpr_0=ruleEquivExpr
    {
        $current = $this_EquivExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(

EqualsSignGreaterThanSign


)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=
	EqualsSignGreaterThanSign
    {
        newLeafNode(lv_op_2_0, grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImpliesExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "=>");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleImpliesExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImpliesExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.ImpliesExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleEquivExpr
entryRuleEquivExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getEquivExprRule()); }
	 iv_ruleEquivExpr=ruleEquivExpr 
	 { $current=$iv_ruleEquivExpr.current; } 
	 EOF 
;

// Rule EquivExpr
ruleEquivExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEquivExprAccess().getOrExprParserRuleCall_0()); 
    }
    this_OrExpr_0=ruleOrExpr
    {
        $current = $this_OrExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(

LessThanSignEqualsSignGreaterThanSign


)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getEquivExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=
	LessThanSignEqualsSignGreaterThanSign
    {
        newLeafNode(lv_op_2_0, grammarAccess.getEquivExprAccess().getOpLessThanSignEqualsSignGreaterThanSignKeyword_1_0_0_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEquivExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "<=>");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getEquivExprAccess().getRightOrExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleOrExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEquivExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.OrExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleOrExpr
entryRuleOrExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getOrExprRule()); }
	 iv_ruleOrExpr=ruleOrExpr 
	 { $current=$iv_ruleOrExpr.current; } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); 
    }
    this_AndExpr_0=ruleAndExpr
    {
        $current = $this_AndExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(

Or


)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=
	Or
    {
        newLeafNode(lv_op_2_0, grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "or");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAndExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.AndExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndExpr
entryRuleAndExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAndExprRule()); }
	 iv_ruleAndExpr=ruleAndExpr 
	 { $current=$iv_ruleAndExpr.current; } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndExprAccess().getRelateExprParserRuleCall_0()); 
    }
    this_RelateExpr_0=ruleRelateExpr
    {
        $current = $this_RelateExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(

And


)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=
	And
    {
        newLeafNode(lv_op_2_0, grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "and");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExprAccess().getRightRelateExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleRelateExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.RelateExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRelateOp
entryRuleRelateOp returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getRelateOpRule()); } 
	 iv_ruleRelateOp=ruleRelateOp 
	 { $current=$iv_ruleRelateOp.current.getText(); }  
	 EOF 
;

// Rule RelateOp
ruleRelateOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=LessThanSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelateOpAccess().getLessThanSignKeyword_0()); 
    }

    |
	kw=LessThanSignEqualsSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelateOpAccess().getLessThanSignEqualsSignKeyword_1()); 
    }

    |
	kw=GreaterThanSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelateOpAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw=GreaterThanSignEqualsSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelateOpAccess().getGreaterThanSignEqualsSignKeyword_3()); 
    }

    |
	kw=EqualsSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelateOpAccess().getEqualsSignKeyword_4()); 
    }

    |
	kw=LessThanSignGreaterThanSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelateOpAccess().getLessThanSignGreaterThanSignKeyword_5()); 
    }

    |
	kw=ExclamationMarkEqualsSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelateOpAccess().getExclamationMarkEqualsSignKeyword_6()); 
    }
)
    ;





// Entry rule entryRuleRelateExpr
entryRuleRelateExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRelateExprRule()); }
	 iv_ruleRelateExpr=ruleRelateExpr 
	 { $current=$iv_ruleRelateExpr.current; } 
	 EOF 
;

// Rule RelateExpr
ruleRelateExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRelateExprAccess().getAddSubExprParserRuleCall_0()); 
    }
    this_AddSubExpr_0=ruleAddSubExpr
    {
        $current = $this_AddSubExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleRelateOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRelateExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelateExprAccess().getOpRelateOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_op_2_0=ruleRelateOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelateExprRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.RelateOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getRelateExprAccess().getRightAddSubExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAddSubExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelateExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.AddSubExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAddSubExpr
entryRuleAddSubExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAddSubExprRule()); }
	 iv_ruleAddSubExpr=ruleAddSubExpr 
	 { $current=$iv_ruleAddSubExpr.current; } 
	 EOF 
;

// Rule AddSubExpr
ruleAddSubExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAddSubExprAccess().getMultDivExprParserRuleCall_0()); 
    }
    this_MultDivExpr_0=ruleMultDivExpr
    {
        $current = $this_MultDivExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
(

PlusSign


    |		
HyphenMinus


)

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAddSubExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=
	PlusSign
    {
        newLeafNode(lv_op_2_1, grammarAccess.getAddSubExprAccess().getOpPlusSignKeyword_1_0_0_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddSubExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=
	HyphenMinus
    {
        newLeafNode(lv_op_2_2, grammarAccess.getAddSubExprAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddSubExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAddSubExprAccess().getRightMultDivExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleMultDivExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddSubExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.MultDivExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultDivExpr
entryRuleMultDivExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMultDivExprRule()); }
	 iv_ruleMultDivExpr=ruleMultDivExpr 
	 { $current=$iv_ruleMultDivExpr.current; } 
	 EOF 
;

// Rule MultDivExpr
ruleMultDivExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultDivExprAccess().getPowerExprParserRuleCall_0()); 
    }
    this_PowerExpr_0=rulePowerExpr
    {
        $current = $this_PowerExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
(

Asterisk


    |		
Solidus


    |		
Div


    |		
Mod


)

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultDivExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=
	Asterisk
    {
        newLeafNode(lv_op_2_1, grammarAccess.getMultDivExprAccess().getOpAsteriskKeyword_1_0_0_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultDivExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=
	Solidus
    {
        newLeafNode(lv_op_2_2, grammarAccess.getMultDivExprAccess().getOpSolidusKeyword_1_0_0_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultDivExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=
	Div
    {
        newLeafNode(lv_op_2_3, grammarAccess.getMultDivExprAccess().getOpDivKeyword_1_0_0_1_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultDivExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=
	Mod
    {
        newLeafNode(lv_op_2_4, grammarAccess.getMultDivExprAccess().getOpModKeyword_1_0_0_1_0_3());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultDivExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

)

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getMultDivExprAccess().getRightPowerExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=rulePowerExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultDivExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.PowerExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePowerExpr
entryRulePowerExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPowerExprRule()); }
	 iv_rulePowerExpr=rulePowerExpr 
	 { $current=$iv_rulePowerExpr.current; } 
	 EOF 
;

// Rule PowerExpr
rulePowerExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPowerExprAccess().getUnaryExprParserRuleCall_0()); 
    }
    this_UnaryExpr_0=ruleUnaryExpr
    {
        $current = $this_UnaryExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)(
(

CircumflexAccent


)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPowerExprAccess().getBinaryExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=
	CircumflexAccent
    {
        newLeafNode(lv_op_2_0, grammarAccess.getPowerExprAccess().getOpCircumflexAccentKeyword_1_0_0_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPowerExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "^");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getPowerExprAccess().getRightUnaryExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUnaryExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPowerExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.UnaryExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	 iv_ruleUnaryExpr=ruleUnaryExpr 
	 { $current=$iv_ruleUnaryExpr.current; } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnaryExprAccess().getUnaryExprAction_0_0(),
            $current);
    }
)(
(
(
		lv_op_1_1=
	HyphenMinus
    {
        newLeafNode(lv_op_1_1, grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_0_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_1, null);
	    }

    |		lv_op_1_2=
	Not
    {
        newLeafNode(lv_op_1_2, grammarAccess.getUnaryExprAccess().getOpNotKeyword_0_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExprAccess().getExprUnaryExprParserRuleCall_0_2_0()); 
	    }
		lv_expr_2_0=ruleUnaryExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.UnaryExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getUnaryExprAccess().getIfThenElseExprParserRuleCall_1()); 
    }
    this_IfThenElseExpr_3=ruleIfThenElseExpr
    {
        $current = $this_IfThenElseExpr_3.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIfThenElseExpr
entryRuleIfThenElseExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIfThenElseExprRule()); }
	 iv_ruleIfThenElseExpr=ruleIfThenElseExpr 
	 { $current=$iv_ruleIfThenElseExpr.current; } 
	 EOF 
;

// Rule IfThenElseExpr
ruleIfThenElseExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIfThenElseExprAccess().getIfThenElseExprAction_0_0(),
            $current);
    }
)
	otherlv_1=If
    {
    	newLeafNode(otherlv_1, grammarAccess.getIfThenElseExprAccess().getIfKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseExprAccess().getAExprParserRuleCall_0_2_0()); 
	    }
		lv_a_2_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseExprRule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_2_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Then
    {
    	newLeafNode(otherlv_3, grammarAccess.getIfThenElseExprAccess().getThenKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseExprAccess().getBExprParserRuleCall_0_4_0()); 
	    }
		lv_b_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseExprRule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Else
    {
    	newLeafNode(otherlv_5, grammarAccess.getIfThenElseExprAccess().getElseKeyword_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfThenElseExprAccess().getCExprParserRuleCall_0_6_0()); 
	    }
		lv_c_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfThenElseExprRule());
	        }
       		set(
       			$current, 
       			"c",
        		lv_c_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getIfThenElseExprAccess().getPreDefFnExprParserRuleCall_1()); 
    }
    this_PreDefFnExpr_7=rulePreDefFnExpr
    {
        $current = $this_PreDefFnExpr_7.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleComponentRef
entryRuleComponentRef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getComponentRefRule()); }
	 iv_ruleComponentRef=ruleComponentRef 
	 { $current=$iv_ruleComponentRef.current; } 
	 EOF 
;

// Rule ComponentRef
ruleComponentRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComponentRefAccess().getThisRefAction_0_0(),
            $current);
    }
)
	otherlv_1=This
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentRefAccess().getThisKeyword_0_1());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getComponentRefAccess().getDoubleDotRefParserRuleCall_1()); 
    }
    this_DoubleDotRef_2=ruleDoubleDotRef
    {
        $current = $this_DoubleDotRef_2.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePreDefFnExpr
entryRulePreDefFnExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPreDefFnExprRule()); }
	 iv_rulePreDefFnExpr=rulePreDefFnExpr 
	 { $current=$iv_rulePreDefFnExpr.current; } 
	 EOF 
;

// Rule PreDefFnExpr
rulePreDefFnExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPreDefFnExprAccess().getPrevExprAction_0_0(),
            $current);
    }
)
	otherlv_1=Prev
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreDefFnExprAccess().getPrevKeyword_0_1());
    }

	otherlv_2=LeftParenthesis
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreDefFnExprAccess().getLeftParenthesisKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPreDefFnExprAccess().getDelayExprParserRuleCall_0_3_0()); 
	    }
		lv_delay_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreDefFnExprRule());
	        }
       		set(
       			$current, 
       			"delay",
        		lv_delay_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getPreDefFnExprAccess().getCommaKeyword_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPreDefFnExprAccess().getInitExprParserRuleCall_0_5_0()); 
	    }
		lv_init_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreDefFnExprRule());
	        }
       		set(
       			$current, 
       			"init",
        		lv_init_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getPreDefFnExprAccess().getRightParenthesisKeyword_0_6());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPreDefFnExprAccess().getGetPropertyExprAction_1_0(),
            $current);
    }
)
	otherlv_8=Get_Property
    {
    	newLeafNode(otherlv_8, grammarAccess.getPreDefFnExprAccess().getGet_PropertyKeyword_1_1());
    }

	otherlv_9=LeftParenthesis
    {
    	newLeafNode(otherlv_9, grammarAccess.getPreDefFnExprAccess().getLeftParenthesisKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPreDefFnExprAccess().getComponentRefComponentRefParserRuleCall_1_3_0()); 
	    }
		lv_componentRef_10_0=ruleComponentRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreDefFnExprRule());
	        }
       		set(
       			$current, 
       			"componentRef",
        		lv_componentRef_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.ComponentRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_11=Comma
    {
    	newLeafNode(otherlv_11, grammarAccess.getPreDefFnExprAccess().getCommaKeyword_1_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreDefFnExprRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPreDefFnExprAccess().getPropNamedElementCrossReference_1_5_0()); 
	    }
		ruleQCLREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_13=RightParenthesis
    {
    	newLeafNode(otherlv_13, grammarAccess.getPreDefFnExprAccess().getRightParenthesisKeyword_1_6());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPreDefFnExprAccess().getArrayUpdateExprParserRuleCall_2()); 
    }
    this_ArrayUpdateExpr_14=ruleArrayUpdateExpr
    {
        $current = $this_ArrayUpdateExpr_14.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArrayUpdateExpr
entryRuleArrayUpdateExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getArrayUpdateExprRule()); }
	 iv_ruleArrayUpdateExpr=ruleArrayUpdateExpr 
	 { $current=$iv_ruleArrayUpdateExpr.current; } 
	 EOF 
;

// Rule ArrayUpdateExpr
ruleArrayUpdateExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getArrayUpdateExprAccess().getRecordUpdateExprParserRuleCall_0()); 
    }
    this_RecordUpdateExpr_0=ruleRecordUpdateExpr
    {
        $current = $this_RecordUpdateExpr_0.current;
        afterParserOrEnumRuleCall();
    }
(((((
)
LeftSquareBracketVerticalLine
(
(
ruleExpr
)
)
ColonEqualsSign
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getArrayUpdateExprAccess().getArrayUpdateExprArrayAction_1_0_0_0(),
            $current);
    }
)
	otherlv_2=LeftSquareBracketVerticalLine
    {
    	newLeafNode(otherlv_2, grammarAccess.getArrayUpdateExprAccess().getLeftSquareBracketVerticalLineKeyword_1_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayUpdateExprAccess().getIndicesExprParserRuleCall_1_0_0_2_0()); 
	    }
		lv_indices_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayUpdateExprRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=ColonEqualsSign
    {
    	newLeafNode(otherlv_4, grammarAccess.getArrayUpdateExprAccess().getColonEqualsSignKeyword_1_0_0_3());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayUpdateExprAccess().getValueExprsExprParserRuleCall_1_1_0()); 
	    }
		lv_valueExprs_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayUpdateExprRule());
	        }
       		add(
       			$current, 
       			"valueExprs",
        		lv_valueExprs_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getArrayUpdateExprAccess().getSemicolonKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayUpdateExprAccess().getIndicesExprParserRuleCall_1_2_1_0()); 
	    }
		lv_indices_7_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayUpdateExprRule());
	        }
       		add(
       			$current, 
       			"indices",
        		lv_indices_7_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_8=ColonEqualsSign
    {
    	newLeafNode(otherlv_8, grammarAccess.getArrayUpdateExprAccess().getColonEqualsSignKeyword_1_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayUpdateExprAccess().getValueExprsExprParserRuleCall_1_2_3_0()); 
	    }
		lv_valueExprs_9_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayUpdateExprRule());
	        }
       		add(
       			$current, 
       			"valueExprs",
        		lv_valueExprs_9_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_10=VerticalLineRightSquareBracket
    {
    	newLeafNode(otherlv_10, grammarAccess.getArrayUpdateExprAccess().getVerticalLineRightSquareBracketKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleRecordUpdateExpr
entryRuleRecordUpdateExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRecordUpdateExprRule()); }
	 iv_ruleRecordUpdateExpr=ruleRecordUpdateExpr 
	 { $current=$iv_ruleRecordUpdateExpr.current; } 
	 EOF 
;

// Rule RecordUpdateExpr
ruleRecordUpdateExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRecordUpdateExprAccess().getArraySubExprParserRuleCall_0()); 
    }
    this_ArraySubExpr_0=ruleArraySubExpr
    {
        $current = $this_ArraySubExpr_0.current;
        afterParserOrEnumRuleCall();
    }
((((
)
LeftCurlyBracket
(
(
	RULE_ID

)
)
ColonEqualsSign
(
(
ruleExpr
)
)
RightCurlyBracket
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRecordUpdateExprAccess().getRecordUpdateExprRecordAction_1_0_0(),
            $current);
    }
)
	otherlv_2=LeftCurlyBracket
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordUpdateExprAccess().getLeftCurlyBracketKeyword_1_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRecordUpdateExprRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRecordUpdateExprAccess().getKeyNamedElementCrossReference_1_0_2_0()); 
	}

)
)
	otherlv_4=ColonEqualsSign
    {
    	newLeafNode(otherlv_4, grammarAccess.getRecordUpdateExprAccess().getColonEqualsSignKeyword_1_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordUpdateExprAccess().getExprExprParserRuleCall_1_0_4_0()); 
	    }
		lv_expr_5_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordUpdateExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_5_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=RightCurlyBracket
    {
    	newLeafNode(otherlv_6, grammarAccess.getRecordUpdateExprAccess().getRightCurlyBracketKeyword_1_0_5());
    }
))*)
;





// Entry rule entryRuleArraySubExpr
entryRuleArraySubExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getArraySubExprRule()); }
	 iv_ruleArraySubExpr=ruleArraySubExpr 
	 { $current=$iv_ruleArraySubExpr.current; } 
	 EOF 
;

// Rule ArraySubExpr
ruleArraySubExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getArraySubExprAccess().getTagExprParserRuleCall_0()); 
    }
    this_TagExpr_0=ruleTagExpr
    {
        $current = $this_TagExpr_0.current;
        afterParserOrEnumRuleCall();
    }
((((
)
LeftSquareBracket
(
(
ruleExpr
)
)
RightSquareBracket
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getArraySubExprAccess().getArraySubExprExprAction_1_0_0(),
            $current);
    }
)
	otherlv_2=LeftSquareBracket
    {
    	newLeafNode(otherlv_2, grammarAccess.getArraySubExprAccess().getLeftSquareBracketKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArraySubExprAccess().getIndexExprParserRuleCall_1_0_2_0()); 
	    }
		lv_index_3_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArraySubExprRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=RightSquareBracket
    {
    	newLeafNode(otherlv_4, grammarAccess.getArraySubExprAccess().getRightSquareBracketKeyword_1_0_3());
    }
))*)
;





// Entry rule entryRuleTagExpr
entryRuleTagExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTagExprRule()); }
	 iv_ruleTagExpr=ruleTagExpr 
	 { $current=$iv_ruleTagExpr.current; } 
	 EOF 
;

// Rule TagExpr
ruleTagExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTagExprAccess().getSelectionExprParserRuleCall_0()); 
    }
    this_SelectionExpr_0=ruleSelectionExpr
    {
        $current = $this_SelectionExpr_0.current;
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTagExprAccess().getTagExprStemAction_1_0(),
            $current);
    }
)
	otherlv_2=FullStop
    {
    	newLeafNode(otherlv_2, grammarAccess.getTagExprAccess().getFullStopKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagExprAccess().getTagReservedVarTagParserRuleCall_1_2_0()); 
	    }
		lv_tag_3_0=ruleReservedVarTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagExprRule());
	        }
       		set(
       			$current, 
       			"tag",
        		lv_tag_3_0, 
        		"com.rockwellcollins.atc.agree.Agree.ReservedVarTag");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleSelectionExpr
entryRuleSelectionExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSelectionExprRule()); }
	 iv_ruleSelectionExpr=ruleSelectionExpr 
	 { $current=$iv_ruleSelectionExpr.current; } 
	 EOF 
;

// Rule SelectionExpr
ruleSelectionExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSelectionExprAccess().getTermExprParserRuleCall_0()); 
    }
    this_TermExpr_0=ruleTermExpr
    {
        $current = $this_TermExpr_0.current;
        afterParserOrEnumRuleCall();
    }
((((
)
FullStop
(
(
	RULE_ID

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSelectionExprAccess().getSelectionExprTargetAction_1_0_0(),
            $current);
    }
)
	otherlv_2=FullStop
    {
    	newLeafNode(otherlv_2, grammarAccess.getSelectionExprAccess().getFullStopKeyword_1_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSelectionExprRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getSelectionExprAccess().getFieldNamedElementCrossReference_1_0_2_0()); 
	}

)
)))*)
;





// Entry rule entryRuleTermExpr
entryRuleTermExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTermExprRule()); }
	 iv_ruleTermExpr=ruleTermExpr 
	 { $current=$iv_ruleTermExpr.current; } 
	 EOF 
;

// Rule TermExpr
ruleTermExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)(
(
		ruleDCID

)
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getNamedElmExprAction_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getElmNamedElementCrossReference_0_0_1_0()); 
	    }
		ruleDCID
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getTimeExprAction_1_0(),
            $current);
    }
)
	otherlv_3=Time
    {
    	newLeafNode(otherlv_3, grammarAccess.getTermExprAccess().getTimeKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getIndicesExprAction_2_0(),
            $current);
    }
)
	otherlv_5=Indices
    {
    	newLeafNode(otherlv_5, grammarAccess.getTermExprAccess().getIndicesKeyword_2_1());
    }

	otherlv_6=LeftParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getArrayExprParserRuleCall_2_3_0()); 
	    }
		lv_array_7_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_7_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_8=RightParenthesis
    {
    	newLeafNode(otherlv_8, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_2_4());
    }
)
    |(((((
)(
(
ruleDoubleDotRef
)
)
LeftParenthesis
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getCallExprAction_3_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getRefDoubleDotRefParserRuleCall_3_0_0_1_0()); 
	    }
		lv_ref_10_0=ruleDoubleDotRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"ref",
        		lv_ref_10_0, 
        		"com.rockwellcollins.atc.agree.Agree.DoubleDotRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_11=LeftParenthesis
    {
    	newLeafNode(otherlv_11, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_3_0_0_2());
    }
))((
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getArgsExprParserRuleCall_3_1_0_0()); 
	    }
		lv_args_12_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_12_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_13=Comma
    {
    	newLeafNode(otherlv_13, grammarAccess.getTermExprAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getArgsExprParserRuleCall_3_1_1_1_0()); 
	    }
		lv_args_14_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_14_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_15=RightParenthesis
    {
    	newLeafNode(otherlv_15, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_3_2());
    }
)
    |(((((
)(
(
ruleDoubleDotRef
)
)
LeftCurlyBracket
(
(
	RULE_ID

)
)
EqualsSign
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getRecordLitExprAction_4_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getRecordTypeDoubleDotRefParserRuleCall_4_0_0_1_0()); 
	    }
		lv_recordType_17_0=ruleDoubleDotRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"recordType",
        		lv_recordType_17_0, 
        		"com.rockwellcollins.atc.agree.Agree.DoubleDotRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_18=LeftCurlyBracket
    {
    	newLeafNode(otherlv_18, grammarAccess.getTermExprAccess().getLeftCurlyBracketKeyword_4_0_0_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
        }
	otherlv_19=RULE_ID
	{
		newLeafNode(otherlv_19, grammarAccess.getTermExprAccess().getArgsNamedElementCrossReference_4_0_0_3_0()); 
	}

)
)
	otherlv_20=EqualsSign
    {
    	newLeafNode(otherlv_20, grammarAccess.getTermExprAccess().getEqualsSignKeyword_4_0_0_4());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getArgExprExprParserRuleCall_4_1_0()); 
	    }
		lv_argExpr_21_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		add(
       			$current, 
       			"argExpr",
        		lv_argExpr_21_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_22=Semicolon
    {
    	newLeafNode(otherlv_22, grammarAccess.getTermExprAccess().getSemicolonKeyword_4_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
        }
	otherlv_23=RULE_ID
	{
		newLeafNode(otherlv_23, grammarAccess.getTermExprAccess().getArgsNamedElementCrossReference_4_2_1_0()); 
	}

)
)
	otherlv_24=EqualsSign
    {
    	newLeafNode(otherlv_24, grammarAccess.getTermExprAccess().getEqualsSignKeyword_4_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getArgExprExprParserRuleCall_4_2_3_0()); 
	    }
		lv_argExpr_25_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		add(
       			$current, 
       			"argExpr",
        		lv_argExpr_25_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_26=RightCurlyBracket
    {
    	newLeafNode(otherlv_26, grammarAccess.getTermExprAccess().getRightCurlyBracketKeyword_4_3());
    }
)
    |(((((
)
Enum

LeftParenthesis
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getEnumLitExprAction_5_0_0_0(),
            $current);
    }
)
	otherlv_28=Enum
    {
    	newLeafNode(otherlv_28, grammarAccess.getTermExprAccess().getEnumKeyword_5_0_0_1());
    }

	otherlv_29=LeftParenthesis
    {
    	newLeafNode(otherlv_29, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_5_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getEnumTypeDoubleDotRefParserRuleCall_5_1_0()); 
	    }
		lv_enumType_30_0=ruleDoubleDotRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"enumType",
        		lv_enumType_30_0, 
        		"com.rockwellcollins.atc.agree.Agree.DoubleDotRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_31=Comma
    {
    	newLeafNode(otherlv_31, grammarAccess.getTermExprAccess().getCommaKeyword_5_2());
    }
(
(
		lv_value_32_0=RULE_ID
		{
			newLeafNode(lv_value_32_0, grammarAccess.getTermExprAccess().getValueIDTerminalRuleCall_5_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_32_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_33=RightParenthesis
    {
    	newLeafNode(otherlv_33, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_5_4());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getTermExprAccess().getArrayLiteralExprParserRuleCall_6()); 
    }
    this_ArrayLiteralExpr_34=ruleArrayLiteralExpr
    {
        $current = $this_ArrayLiteralExpr_34.current;
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getIntLitExprAction_7_0(),
            $current);
    }
)(
(
		lv_val_36_0=RULE_INTEGER_LIT
		{
			newLeafNode(lv_val_36_0, grammarAccess.getTermExprAccess().getValINTEGER_LITTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_36_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTEGER_LIT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getPreExprAction_8_0(),
            $current);
    }
)
	otherlv_38=Pre
    {
    	newLeafNode(otherlv_38, grammarAccess.getTermExprAccess().getPreKeyword_8_1());
    }

	otherlv_39=LeftParenthesis
    {
    	newLeafNode(otherlv_39, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_8_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getExprExprParserRuleCall_8_3_0()); 
	    }
		lv_expr_40_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_40_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_41=RightParenthesis
    {
    	newLeafNode(otherlv_41, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_8_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getEventExprAction_9_0(),
            $current);
    }
)
	otherlv_43=Event
    {
    	newLeafNode(otherlv_43, grammarAccess.getTermExprAccess().getEventKeyword_9_1());
    }

	otherlv_44=LeftParenthesis
    {
    	newLeafNode(otherlv_44, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_9_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
        }
	otherlv_45=RULE_ID
	{
		newLeafNode(otherlv_45, grammarAccess.getTermExprAccess().getIdNamedElementCrossReference_9_3_0()); 
	}

)
)
	otherlv_46=RightParenthesis
    {
    	newLeafNode(otherlv_46, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_9_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getLatchedExprAction_10_0(),
            $current);
    }
)
	otherlv_48=Latched
    {
    	newLeafNode(otherlv_48, grammarAccess.getTermExprAccess().getLatchedKeyword_10_1());
    }

	otherlv_49=LeftParenthesis
    {
    	newLeafNode(otherlv_49, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_10_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getExprExprParserRuleCall_10_3_0()); 
	    }
		lv_expr_50_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_50_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_51=RightParenthesis
    {
    	newLeafNode(otherlv_51, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_10_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getTimeOfExprAction_11_0(),
            $current);
    }
)
	otherlv_53=Timeof
    {
    	newLeafNode(otherlv_53, grammarAccess.getTermExprAccess().getTimeofKeyword_11_1());
    }

	otherlv_54=LeftParenthesis
    {
    	newLeafNode(otherlv_54, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_11_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
        }
	otherlv_55=RULE_ID
	{
		newLeafNode(otherlv_55, grammarAccess.getTermExprAccess().getIdNamedElementCrossReference_11_3_0()); 
	}

)
)
	otherlv_56=RightParenthesis
    {
    	newLeafNode(otherlv_56, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_11_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getTimeRiseExprAction_12_0(),
            $current);
    }
)
	otherlv_58=Timerise
    {
    	newLeafNode(otherlv_58, grammarAccess.getTermExprAccess().getTimeriseKeyword_12_1());
    }

	otherlv_59=LeftParenthesis
    {
    	newLeafNode(otherlv_59, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_12_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
        }
	otherlv_60=RULE_ID
	{
		newLeafNode(otherlv_60, grammarAccess.getTermExprAccess().getIdNamedElementCrossReference_12_3_0()); 
	}

)
)
	otherlv_61=RightParenthesis
    {
    	newLeafNode(otherlv_61, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_12_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getTimeFallExprAction_13_0(),
            $current);
    }
)
	otherlv_63=Timefall
    {
    	newLeafNode(otherlv_63, grammarAccess.getTermExprAccess().getTimefallKeyword_13_1());
    }

	otherlv_64=LeftParenthesis
    {
    	newLeafNode(otherlv_64, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_13_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
        }
	otherlv_65=RULE_ID
	{
		newLeafNode(otherlv_65, grammarAccess.getTermExprAccess().getIdNamedElementCrossReference_13_3_0()); 
	}

)
)
	otherlv_66=RightParenthesis
    {
    	newLeafNode(otherlv_66, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_13_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getRealLitExprAction_14_0(),
            $current);
    }
)(
(
		lv_val_68_0=RULE_REAL_LIT
		{
			newLeafNode(lv_val_68_0, grammarAccess.getTermExprAccess().getValREAL_LITTerminalRuleCall_14_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermExprRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_68_0, 
        		"org.osate.xtext.aadl2.properties.Properties.REAL_LIT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getBoolLitExprAction_15_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getValBooleanLiteralParserRuleCall_15_1_0()); 
	    }
		lv_val_70_0=ruleBooleanLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_70_0, 
        		"org.osate.xtext.aadl2.properties.Properties.BooleanLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getFloorCastAction_16_0(),
            $current);
    }
)
	otherlv_72=Floor
    {
    	newLeafNode(otherlv_72, grammarAccess.getTermExprAccess().getFloorKeyword_16_1());
    }

	otherlv_73=LeftParenthesis
    {
    	newLeafNode(otherlv_73, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_16_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getExprExprParserRuleCall_16_3_0()); 
	    }
		lv_expr_74_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_74_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_75=RightParenthesis
    {
    	newLeafNode(otherlv_75, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_16_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermExprAccess().getRealCastAction_17_0(),
            $current);
    }
)
	otherlv_77=Real
    {
    	newLeafNode(otherlv_77, grammarAccess.getTermExprAccess().getRealKeyword_17_1());
    }

	otherlv_78=LeftParenthesis
    {
    	newLeafNode(otherlv_78, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_17_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermExprAccess().getExprExprParserRuleCall_17_3_0()); 
	    }
		lv_expr_79_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_79_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_80=RightParenthesis
    {
    	newLeafNode(otherlv_80, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_17_4());
    }
)
    |(
	otherlv_81=LeftParenthesis
    {
    	newLeafNode(otherlv_81, grammarAccess.getTermExprAccess().getLeftParenthesisKeyword_18_0());
    }

    { 
        newCompositeNode(grammarAccess.getTermExprAccess().getExprParserRuleCall_18_1()); 
    }
    this_Expr_82=ruleExpr
    {
        $current = $this_Expr_82.current;
        afterParserOrEnumRuleCall();
    }

	otherlv_83=RightParenthesis
    {
    	newLeafNode(otherlv_83, grammarAccess.getTermExprAccess().getRightParenthesisKeyword_18_2());
    }
))
;





// Entry rule entryRuleArrayLiteralExpr
entryRuleArrayLiteralExpr returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getArrayLiteralExprRule()); }
	 iv_ruleArrayLiteralExpr=ruleArrayLiteralExpr 
	 { $current=$iv_ruleArrayLiteralExpr.current; } 
	 EOF 
;

// Rule ArrayLiteralExpr
ruleArrayLiteralExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
LeftSquareBracketVerticalLine
(
(
ruleExpr
)
)
VerticalLineRightSquareBracket
))=>(
	otherlv_0=LeftSquareBracketVerticalLine
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayLiteralExprAccess().getLeftSquareBracketVerticalLineKeyword_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayLiteralExprAccess().getElemsExprParserRuleCall_0_0_1_0()); 
	    }
		lv_elems_1_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayLiteralExprRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_1_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_2=VerticalLineRightSquareBracket
    {
    	newLeafNode(otherlv_2, grammarAccess.getArrayLiteralExprAccess().getVerticalLineRightSquareBracketKeyword_0_0_2());
    }
))
    |((((
LeftSquareBracketVerticalLine
(
(
ruleExpr
)
)
Comma
))=>(
	otherlv_3=LeftSquareBracketVerticalLine
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayLiteralExprAccess().getLeftSquareBracketVerticalLineKeyword_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayLiteralExprAccess().getElemsExprParserRuleCall_1_0_0_1_0()); 
	    }
		lv_elems_4_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayLiteralExprRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_4_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayLiteralExprAccess().getCommaKeyword_1_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayLiteralExprAccess().getElemsExprParserRuleCall_1_1_0()); 
	    }
		lv_elems_6_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayLiteralExprRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_6_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_7=Comma
    {
    	newLeafNode(otherlv_7, grammarAccess.getArrayLiteralExprAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayLiteralExprAccess().getElemsExprParserRuleCall_1_2_1_0()); 
	    }
		lv_elems_8_0=ruleExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayLiteralExprRule());
	        }
       		add(
       			$current, 
       			"elems",
        		lv_elems_8_0, 
        		"com.rockwellcollins.atc.agree.Agree.Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_9=VerticalLineRightSquareBracket
    {
    	newLeafNode(otherlv_9, grammarAccess.getArrayLiteralExprAccess().getVerticalLineRightSquareBracketKeyword_1_3());
    }
))
;





// Entry rule entryRuleDoubleDotRef
entryRuleDoubleDotRef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDoubleDotRefRule()); }
	 iv_ruleDoubleDotRef=ruleDoubleDotRef 
	 { $current=$iv_ruleDoubleDotRef.current; } 
	 EOF 
;

// Rule DoubleDotRef
ruleDoubleDotRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleDotRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDoubleDotRefAccess().getElmNamedElementCrossReference_0()); 
	    }
		ruleQCPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleQCPREF
entryRuleQCPREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQCPREFRule()); } 
	 iv_ruleQCPREF=ruleQCPREF 
	 { $current=$iv_ruleQCPREF.current.getText(); }  
	 EOF 
;

// Rule QCPREF
ruleQCPREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQCPREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCPREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQCPREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCPREFAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getQCPREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleDCID
entryRuleDCID returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getDCIDRule()); } 
	 iv_ruleDCID=ruleDCID 
	 { $current=$iv_ruleDCID.current.getText(); }  
	 EOF 
;

// Rule DCID
ruleDCID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getDCIDAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDCIDAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getDCIDAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleReservedVarTag
entryRuleReservedVarTag returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getReservedVarTagRule()); } 
	 iv_ruleReservedVarTag=ruleReservedVarTag 
	 { $current=$iv_ruleReservedVarTag.current.getText(); }  
	 EOF 
;

// Rule ReservedVarTag
ruleReservedVarTag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KW__REMOVE 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReservedVarTagAccess().get_REMOVEKeyword_0()); 
    }

    |
	kw=KW__INSERT 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReservedVarTagAccess().get_INSERTKeyword_1()); 
    }

    |
	kw=KW__COUNT 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReservedVarTagAccess().get_COUNTKeyword_2()); 
    }

    |
	kw=KW__CLK 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReservedVarTagAccess().get_CLKKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleNamedID
entryRuleNamedID returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNamedIDRule()); }
	 iv_ruleNamedID=ruleNamedID 
	 { $current=$iv_ruleNamedID.current; } 
	 EOF 
;

// Rule NamedID
ruleNamedID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getNamedIDAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
;









// Entry rule entryRuleContainedPropertyAssociation
entryRuleContainedPropertyAssociation returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContainedPropertyAssociationRule()); }
	 iv_ruleContainedPropertyAssociation=ruleContainedPropertyAssociation 
	 { $current=$iv_ruleContainedPropertyAssociation.current; } 
	 EOF 
;

// Rule ContainedPropertyAssociation
ruleContainedPropertyAssociation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); 
	    }
		ruleQPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=EqualsSignGreaterThanSign
    {
    	newLeafNode(otherlv_1, grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0());
    }

    |(
(
		lv_append_2_0=
	PlusSignEqualsSignGreaterThanSign
    {
        newLeafNode(lv_append_2_0, grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		setWithLastConsumed($current, "append", true, "+=>");
	    }

)
))(
(
		lv_constant_3_0=
	Constant
    {
        newLeafNode(lv_constant_3_0, grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		setWithLastConsumed($current, "constant", true, "constant");
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); 
	    }
		lv_ownedValue_4_0=ruleOptionalModalPropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.OptionalModalPropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); 
	    }
		lv_ownedValue_6_0=ruleOptionalModalPropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_6_0, 
        		"org.osate.xtext.aadl2.properties.Properties.OptionalModalPropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)(
    { 
        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToKeywordsParserRuleCall_4_0()); 
    }
ruleAppliesToKeywords
    {
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_1_0()); 
	    }
		lv_appliesTo_8_0=ruleContainmentPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"appliesTo",
        		lv_appliesTo_8_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPath");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_9=Comma
    {
    	newLeafNode(otherlv_9, grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_1_0()); 
	    }
		lv_appliesTo_10_0=ruleContainmentPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"appliesTo",
        		lv_appliesTo_10_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPath");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
    { 
        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getInBindingKeywordsParserRuleCall_5_0()); 
    }
ruleInBindingKeywords
    {
        afterParserOrEnumRuleCall();
    }

	otherlv_12=LeftParenthesis
    {
    	newLeafNode(otherlv_12, grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_2_0()); 
	    }
		ruleQCREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=RightParenthesis
    {
    	newLeafNode(otherlv_14, grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_3());
    }
)?
	otherlv_15=Semicolon
    {
    	newLeafNode(otherlv_15, grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6());
    }
)
;









// Entry rule entryRuleContainmentPath
entryRuleContainmentPath returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContainmentPathRule()); }
	 iv_ruleContainmentPath=ruleContainmentPath 
	 { $current=$iv_ruleContainmentPath.current; } 
	 EOF 
;

// Rule ContainmentPath
ruleContainmentPath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainmentPathAccess().getPathContainmentPathElementParserRuleCall_0()); 
	    }
		lv_path_0_0=ruleContainmentPathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainmentPathRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPathElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
;







// Entry rule entryRuleOptionalModalPropertyValue
entryRuleOptionalModalPropertyValue returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getOptionalModalPropertyValueRule()); }
	 iv_ruleOptionalModalPropertyValue=ruleOptionalModalPropertyValue 
	 { $current=$iv_ruleOptionalModalPropertyValue.current; } 
	 EOF 
;

// Rule OptionalModalPropertyValue
ruleOptionalModalPropertyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); 
	    }
		lv_ownedValue_0_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionalModalPropertyValueRule());
	        }
       		set(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getOptionalModalPropertyValueAccess().getInModesKeywordsParserRuleCall_1_0()); 
    }
ruleInModesKeywords
    {
        afterParserOrEnumRuleCall();
    }

	otherlv_2=LeftParenthesis
    {
    	newLeafNode(otherlv_2, grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalModalPropertyValueRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_2_0()); 
	}

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalModalPropertyValueRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_1_0()); 
	}

)
))*
	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_4());
    }
)?)
;





// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyValueRule()); }
	 iv_rulePropertyValue=rulePropertyValue 
	 { $current=$iv_rulePropertyValue.current; } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); 
	    }
		lv_ownedValue_0_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyValueRule());
	        }
       		set(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePropertyExpression
entryRulePropertyExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyExpressionRule()); }
	 iv_rulePropertyExpression=rulePropertyExpression 
	 { $current=$iv_rulePropertyExpression.current; } 
	 EOF 
;

// Rule PropertyExpression
rulePropertyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); 
    }
    this_RecordTerm_0=ruleRecordTerm
    {
        $current = $this_RecordTerm_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); 
    }
    this_ReferenceTerm_1=ruleReferenceTerm
    {
        $current = $this_ReferenceTerm_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); 
    }
    this_ComponentClassifierTerm_2=ruleComponentClassifierTerm
    {
        $current = $this_ComponentClassifierTerm_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); 
    }
    this_ComputedTerm_3=ruleComputedTerm
    {
        $current = $this_ComputedTerm_3.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); 
    }
    this_StringTerm_4=ruleStringTerm
    {
        $current = $this_StringTerm_4.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); 
    }
    this_NumericRangeTerm_5=ruleNumericRangeTerm
    {
        $current = $this_NumericRangeTerm_5.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); 
    }
    this_RealTerm_6=ruleRealTerm
    {
        $current = $this_RealTerm_6.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); 
    }
    this_IntegerTerm_7=ruleIntegerTerm
    {
        $current = $this_IntegerTerm_7.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); 
    }
    this_ListTerm_8=ruleListTerm
    {
        $current = $this_ListTerm_8.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); 
    }
    this_BooleanLiteral_9=ruleBooleanLiteral
    {
        $current = $this_BooleanLiteral_9.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); 
    }
    this_LiteralorReferenceTerm_10=ruleLiteralorReferenceTerm
    {
        $current = $this_LiteralorReferenceTerm_10.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLiteralorReferenceTerm
entryRuleLiteralorReferenceTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLiteralorReferenceTermRule()); }
	 iv_ruleLiteralorReferenceTerm=ruleLiteralorReferenceTerm 
	 { $current=$iv_ruleLiteralorReferenceTerm.current; } 
	 EOF 
;

// Rule LiteralorReferenceTerm
ruleLiteralorReferenceTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralorReferenceTermRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); 
	    }
		ruleQPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
            $current);
    }
)((
(
		lv_value_1_0=
	True
    {
        newLeafNode(lv_value_1_0, grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "value", true, "true");
	    }

)
)
    |
	otherlv_2=False
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1());
    }
))
;





// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConstantValueRule()); }
	 iv_ruleConstantValue=ruleConstantValue 
	 { $current=$iv_ruleConstantValue.current; } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); 
	    }
		ruleQPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleReferenceTerm
entryRuleReferenceTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getReferenceTermRule()); }
	 iv_ruleReferenceTerm=ruleReferenceTerm 
	 { $current=$iv_ruleReferenceTerm.current; } 
	 EOF 
;

// Rule ReferenceTerm
ruleReferenceTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Reference
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceTermAccess().getReferenceKeyword_0());
    }

	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceTermAccess().getPathContainmentPathElementParserRuleCall_2_0()); 
	    }
		lv_path_2_0=ruleContainmentPathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceTermRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPathElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=RightParenthesis
    {
    	newLeafNode(otherlv_3, grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleRecordTerm
entryRuleRecordTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRecordTermRule()); }
	 iv_ruleRecordTerm=ruleRecordTerm 
	 { $current=$iv_ruleRecordTerm.current; } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=LeftSquareBracket
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); 
	    }
		lv_ownedFieldValue_1_0=ruleFieldPropertyAssociation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordTermRule());
	        }
       		add(
       			$current, 
       			"ownedFieldValue",
        		lv_ownedFieldValue_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.FieldPropertyAssociation");
	        afterParserOrEnumRuleCall();
	    }

)
)+
	otherlv_2=RightSquareBracket
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2());
    }
)
;







// Entry rule entryRuleComputedTerm
entryRuleComputedTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getComputedTermRule()); }
	 iv_ruleComputedTerm=ruleComputedTerm 
	 { $current=$iv_ruleComputedTerm.current; } 
	 EOF 
;

// Rule ComputedTerm
ruleComputedTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Compute
    {
    	newLeafNode(otherlv_0, grammarAccess.getComputedTermAccess().getComputeKeyword_0());
    }

	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_function_2_0=RULE_ID
		{
			newLeafNode(lv_function_2_0, grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComputedTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"function",
        		lv_function_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_3=RightParenthesis
    {
    	newLeafNode(otherlv_3, grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleComponentClassifierTerm
entryRuleComponentClassifierTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getComponentClassifierTermRule()); }
	 iv_ruleComponentClassifierTerm=ruleComponentClassifierTerm 
	 { $current=$iv_ruleComponentClassifierTerm.current; } 
	 EOF 
;

// Rule ComponentClassifierTerm
ruleComponentClassifierTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Classifier
    {
    	newLeafNode(otherlv_0, grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0());
    }

	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentClassifierTermRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); 
	    }
		ruleQCREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=RightParenthesis
    {
    	newLeafNode(otherlv_3, grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleListTerm
entryRuleListTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getListTermRule()); }
	 iv_ruleListTerm=ruleListTerm 
	 { $current=$iv_ruleListTerm.current; } 
	 EOF 
;

// Rule ListTerm
ruleListTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListTermAccess().getListValueAction_0(),
            $current);
    }
)
	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); 
	    }
		lv_ownedListElement_2_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTermRule());
	        }
       		add(
       			$current, 
       			"ownedListElement",
        		lv_ownedListElement_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=Comma
    {
    	newLeafNode(otherlv_3, grammarAccess.getListTermAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_ownedListElement_4_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTermRule());
	        }
       		add(
       			$current, 
       			"ownedListElement",
        		lv_ownedListElement_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_5=RightParenthesis
    {
    	newLeafNode(otherlv_5, grammarAccess.getListTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleFieldPropertyAssociation
entryRuleFieldPropertyAssociation returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFieldPropertyAssociationRule()); }
	 iv_ruleFieldPropertyAssociation=ruleFieldPropertyAssociation 
	 { $current=$iv_ruleFieldPropertyAssociation.current; } 
	 EOF 
;

// Rule FieldPropertyAssociation
ruleFieldPropertyAssociation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldPropertyAssociationRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); 
	}

)
)
	otherlv_1=EqualsSignGreaterThanSign
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); 
	    }
		lv_ownedValue_2_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldPropertyAssociationRule());
	        }
       		set(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Semicolon
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleContainmentPathElement
entryRuleContainmentPathElement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContainmentPathElementRule()); }
	 iv_ruleContainmentPathElement=ruleContainmentPathElement 
	 { $current=$iv_ruleContainmentPathElement.current; } 
	 EOF 
;

// Rule ContainmentPathElement
ruleContainmentPathElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainmentPathElementRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); 
	    }
		lv_arrayRange_1_0=ruleArrayRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainmentPathElementRule());
	        }
       		add(
       			$current, 
       			"arrayRange",
        		lv_arrayRange_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ArrayRange");
	        afterParserOrEnumRuleCall();
	    }

)
)*)(
	otherlv_2=FullStop
    {
    	newLeafNode(otherlv_2, grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); 
	    }
		lv_path_3_0=ruleContainmentPathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainmentPathElementRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_3_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPathElement");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;







// Entry rule entryRulePlusMinus
entryRulePlusMinus returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getPlusMinusRule()); } 
	 iv_rulePlusMinus=rulePlusMinus 
	 { $current=$iv_rulePlusMinus.current.getText(); }  
	 EOF 
;

// Rule PlusMinus
rulePlusMinus returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=PlusSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); 
    }

    |
	kw=HyphenMinus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleStringTerm
entryRuleStringTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getStringTermRule()); }
	 iv_ruleStringTerm=ruleStringTerm 
	 { $current=$iv_ruleStringTerm.current; } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleNoQuoteString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NoQuoteString");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleNoQuoteString
entryRuleNoQuoteString returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getNoQuoteStringRule()); } 
	 iv_ruleNoQuoteString=ruleNoQuoteString 
	 { $current=$iv_ruleNoQuoteString.current.getText(); }  
	 EOF 
;

// Rule NoQuoteString
ruleNoQuoteString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleArrayRange
entryRuleArrayRange returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getArrayRangeRule()); }
	 iv_ruleArrayRange=ruleArrayRange 
	 { $current=$iv_ruleArrayRange.current; } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrayRangeAccess().getArrayRangeAction_0(),
            $current);
    }
)
	otherlv_1=LeftSquareBracket
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); 
	    }
		lv_lowerBound_2_0=ruleINTVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRangeRule());
	        }
       		set(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTVALUE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=FullStopFullStop
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); 
	    }
		lv_upperBound_4_0=ruleINTVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRangeRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTVALUE");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_5=RightSquareBracket
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSignedConstant
entryRuleSignedConstant returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSignedConstantRule()); }
	 iv_ruleSignedConstant=ruleSignedConstant 
	 { $current=$iv_ruleSignedConstant.current; } 
	 EOF 
;

// Rule SignedConstant
ruleSignedConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); 
	    }
		lv_op_0_0=rulePlusMinus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignedConstantRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PlusMinus");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); 
	    }
		lv_ownedPropertyExpression_1_0=ruleConstantValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignedConstantRule());
	        }
       		add(
       			$current, 
       			"ownedPropertyExpression",
        		lv_ownedPropertyExpression_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ConstantValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntegerTermRule()); }
	 iv_ruleIntegerTerm=ruleIntegerTerm 
	 { $current=$iv_ruleIntegerTerm.current; } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSignedInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.SignedInt");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerTermRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); 
	}

)
)?)
;





// Entry rule entryRuleSignedInt
entryRuleSignedInt returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSignedIntRule()); } 
	 iv_ruleSignedInt=ruleSignedInt 
	 { $current=$iv_ruleSignedInt.current.getText(); }  
	 EOF 
;

// Rule SignedInt
ruleSignedInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((
	kw=PlusSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw=HyphenMinus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INTEGER_LIT_2=RULE_INTEGER_LIT    {
		$current.merge(this_INTEGER_LIT_2);
    }

    { 
    newLeafNode(this_INTEGER_LIT_2, grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleRealTerm
entryRuleRealTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRealTermRule()); }
	 iv_ruleRealTerm=ruleRealTerm 
	 { $current=$iv_ruleRealTerm.current; } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSignedReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.SignedReal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealTermRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); 
	}

)
)?)
;





// Entry rule entryRuleSignedReal
entryRuleSignedReal returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSignedRealRule()); } 
	 iv_ruleSignedReal=ruleSignedReal 
	 { $current=$iv_ruleSignedReal.current.getText(); }  
	 EOF 
;

// Rule SignedReal
ruleSignedReal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((
	kw=PlusSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw=HyphenMinus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_REAL_LIT_2=RULE_REAL_LIT    {
		$current.merge(this_REAL_LIT_2);
    }

    { 
    newLeafNode(this_REAL_LIT_2, grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleNumericRangeTerm
entryRuleNumericRangeTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNumericRangeTermRule()); }
	 iv_ruleNumericRangeTerm=ruleNumericRangeTerm 
	 { $current=$iv_ruleNumericRangeTerm.current; } 
	 EOF 
;

// Rule NumericRangeTerm
ruleNumericRangeTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); 
	    }
		lv_minimum_0_0=ruleNumAlt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericRangeTermRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NumAlt");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=FullStopFullStop
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); 
	    }
		lv_maximum_2_0=ruleNumAlt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericRangeTermRule());
	        }
       		set(
       			$current, 
       			"maximum",
        		lv_maximum_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NumAlt");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=Delta
    {
    	newLeafNode(otherlv_3, grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); 
	    }
		lv_delta_4_0=ruleNumAlt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericRangeTermRule());
	        }
       		set(
       			$current, 
       			"delta",
        		lv_delta_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NumAlt");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleNumAlt
entryRuleNumAlt returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNumAltRule()); }
	 iv_ruleNumAlt=ruleNumAlt 
	 { $current=$iv_ruleNumAlt.current; } 
	 EOF 
;

// Rule NumAlt
ruleNumAlt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); 
    }
    this_RealTerm_0=ruleRealTerm
    {
        $current = $this_RealTerm_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); 
    }
    this_IntegerTerm_1=ruleIntegerTerm
    {
        $current = $this_IntegerTerm_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); 
    }
    this_SignedConstant_2=ruleSignedConstant
    {
        $current = $this_SignedConstant_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); 
    }
    this_ConstantValue_3=ruleConstantValue
    {
        $current = $this_ConstantValue_3.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAppliesToKeywords
entryRuleAppliesToKeywords returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getAppliesToKeywordsRule()); } 
	 iv_ruleAppliesToKeywords=ruleAppliesToKeywords 
	 { $current=$iv_ruleAppliesToKeywords.current.getText(); }  
	 EOF 
;

// Rule AppliesToKeywords
ruleAppliesToKeywords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=Applies 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAppliesToKeywordsAccess().getAppliesKeyword_0()); 
    }

	kw=To 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAppliesToKeywordsAccess().getToKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleInBindingKeywords
entryRuleInBindingKeywords returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getInBindingKeywordsRule()); } 
	 iv_ruleInBindingKeywords=ruleInBindingKeywords 
	 { $current=$iv_ruleInBindingKeywords.current.getText(); }  
	 EOF 
;

// Rule InBindingKeywords
ruleInBindingKeywords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=In 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInBindingKeywordsAccess().getInKeyword_0()); 
    }

	kw=Binding 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInBindingKeywordsAccess().getBindingKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleInModesKeywords
entryRuleInModesKeywords returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getInModesKeywordsRule()); } 
	 iv_ruleInModesKeywords=ruleInModesKeywords 
	 { $current=$iv_ruleInModesKeywords.current.getText(); }  
	 EOF 
;

// Rule InModesKeywords
ruleInModesKeywords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=In 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInModesKeywordsAccess().getInKeyword_0()); 
    }

	kw=Modes 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInModesKeywordsAccess().getModesKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleINTVALUE
entryRuleINTVALUE returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getINTVALUERule()); } 
	 iv_ruleINTVALUE=ruleINTVALUE 
	 { $current=$iv_ruleINTVALUE.current.getText(); }  
	 EOF 
;

// Rule INTVALUE
ruleINTVALUE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_INTEGER_LIT_0=RULE_INTEGER_LIT    {
		$current.merge(this_INTEGER_LIT_0);
    }

    { 
    newLeafNode(this_INTEGER_LIT_0, grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleQCLREF
entryRuleQCLREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQCLREFRule()); } 
	 iv_ruleQCLREF=ruleQCLREF 
	 { $current=$iv_ruleQCLREF.current.getText(); }  
	 EOF 
;

// Rule QCLREF
ruleQCLREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCLREFAccess().getColonColonKeyword_1()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleQPREF
entryRuleQPREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQPREFRule()); } 
	 iv_ruleQPREF=ruleQPREF 
	 { $current=$iv_ruleQPREF.current.getText(); }  
	 EOF 
;

// Rule QPREF
ruleQPREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleQCREF
entryRuleQCREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQCREFRule()); } 
	 iv_ruleQCREF=ruleQCREF 
	 { $current=$iv_ruleQCREF.current.getText(); }  
	 EOF 
;

// Rule QCREF
ruleQCREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleSTAR
entryRuleSTAR returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSTARRule()); } 
	 iv_ruleSTAR=ruleSTAR 
	 { $current=$iv_ruleSTAR.current.getText(); }  
	 EOF 
;

// Rule STAR
ruleSTAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

	kw=Asterisk 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSTARAccess().getAsteriskKeyword()); 
    }

    ;





