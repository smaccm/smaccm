/*
 * generated by Xtext
 */
parser grammar InternalResoluteParser;

options {
	tokenVocab=InternalResoluteLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@header {
package com.rockwellcollins.atc.resolute.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.rockwellcollins.atc.resolute.services.ResoluteGrammarAccess;

}

@members {
 
 	private ResoluteGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("PercentSign", "'\%'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("CircumflexAccent", "'^'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("VerticalLine", "'|'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("AsteriskAsterisk", "'**'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("ColonColon", "'::'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Or", "'or'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("PlusSignEqualsSignGreaterThanSign", "'+=>'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("Bus", "'bus'");
		tokenNameToValue.put("For", "'for'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("Let", "'let'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Sum", "'sum'");
		tokenNameToValue.put("Aadl", "'aadl'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Data", "'data'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("Fail", "'fail'");
		tokenNameToValue.put("Head", "'head'");
		tokenNameToValue.put("Name", "'name'");
		tokenNameToValue.put("Port", "'port'");
		tokenNameToValue.put("Real", "'real'");
		tokenNameToValue.put("Size", "'size'");
		tokenNameToValue.put("Tail", "'tail'");
		tokenNameToValue.put("Then", "'then'");
		tokenNameToValue.put("This", "'this'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("Debug", "'debug'");
		tokenNameToValue.put("Delta", "'delta'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Modes", "'modes'");
		tokenNameToValue.put("Prove", "'prove'");
		tokenNameToValue.put("Range", "'range'");
		tokenNameToValue.put("Union", "'union'");
		tokenNameToValue.put("Access", "'access'");
		tokenNameToValue.put("Append", "'append'");
		tokenNameToValue.put("As_set", "'as_set'");
		tokenNameToValue.put("Device", "'device'");
		tokenNameToValue.put("Exists", "'exists'");
		tokenNameToValue.put("Forall", "'forall'");
		tokenNameToValue.put("Is_bus", "'is_bus'");
		tokenNameToValue.put("Length", "'length'");
		tokenNameToValue.put("Member", "'member'");
		tokenNameToValue.put("Memory", "'memory'");
		tokenNameToValue.put("Orelse", "'orelse'");
		tokenNameToValue.put("Parent", "'parent'");
		tokenNameToValue.put("Source", "'source'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("KW_System", "'system'");
		tokenNameToValue.put("Thread", "'thread'");
		tokenNameToValue.put("Andthen", "'andthen'");
		tokenNameToValue.put("Applies", "'applies'");
		tokenNameToValue.put("As_list", "'as_list'");
		tokenNameToValue.put("Binding", "'binding'");
		tokenNameToValue.put("Compute", "'compute'");
		tokenNameToValue.put("Feature", "'feature'");
		tokenNameToValue.put("Is_data", "'is_data'");
		tokenNameToValue.put("Is_port", "'is_port'");
		tokenNameToValue.put("Process", "'process'");
		tokenNameToValue.put("Abstract", "'abstract'");
		tokenNameToValue.put("Analysis", "'analysis'");
		tokenNameToValue.put("Constant", "'constant'");
		tokenNameToValue.put("Features", "'features'");
		tokenNameToValue.put("Has_type", "'has_type'");
		tokenNameToValue.put("Instance", "'instance'");
		tokenNameToValue.put("Property", "'property'");
		tokenNameToValue.put("Component", "'component'");
		tokenNameToValue.put("Data_port", "'data_port'");
		tokenNameToValue.put("Direction", "'direction'");
		tokenNameToValue.put("Has_modes", "'has_modes'");
		tokenNameToValue.put("Instances", "'instances'");
		tokenNameToValue.put("Intersect", "'intersect'");
		tokenNameToValue.put("Is_device", "'is_device'");
		tokenNameToValue.put("Is_memory", "'is_memory'");
		tokenNameToValue.put("Is_system", "'is_system'");
		tokenNameToValue.put("Is_thread", "'is_thread'");
		tokenNameToValue.put("Processor", "'processor'");
		tokenNameToValue.put("Reference", "'reference'");
		tokenNameToValue.put("Bus_access", "'bus_access'");
		tokenNameToValue.put("Classifier", "'classifier'");
		tokenNameToValue.put("Connection", "'connection'");
		tokenNameToValue.put("Event_port", "'event_port'");
		tokenNameToValue.put("Has_member", "'has_member'");
		tokenNameToValue.put("Has_parent", "'has_parent'");
		tokenNameToValue.put("Instanceof", "'instanceof'");
		tokenNameToValue.put("Is_of_type", "'is_of_type'");
		tokenNameToValue.put("Is_process", "'is_process'");
		tokenNameToValue.put("Subprogram", "'subprogram'");
		tokenNameToValue.put("Connections", "'connections'");
		tokenNameToValue.put("Data_access", "'data_access'");
		tokenNameToValue.put("Destination", "'destination'");
		tokenNameToValue.put("Flow_source", "'flow_source'");
		tokenNameToValue.put("Is_bound_to", "'is_bound_to'");
		tokenNameToValue.put("Is_in_array", "'is_in_array'");
		tokenNameToValue.put("Lower_bound", "'lower_bound'");
		tokenNameToValue.put("Upper_bound", "'upper_bound'");
		tokenNameToValue.put("Virtual_bus", "'virtual_bus'");
		tokenNameToValue.put("Has_property", "'has_property'");
		tokenNameToValue.put("Is_data_port", "'is_data_port'");
		tokenNameToValue.put("Is_processor", "'is_processor'");
		tokenNameToValue.put("Thread_group", "'thread_group'");
		tokenNameToValue.put("Contain_error", "'contain_error'");
		tokenNameToValue.put("Feature_group", "'feature_group'");
		tokenNameToValue.put("Flow_elements", "'flow_elements'");
		tokenNameToValue.put("Is_event_port", "'is_event_port'");
		tokenNameToValue.put("Is_subprogram", "'is_subprogram'");
		tokenNameToValue.put("Receive_error", "'receive_error'");
		tokenNameToValue.put("Subcomponents", "'subcomponents'");
		tokenNameToValue.put("Has_prototypes", "'has_prototypes'");
		tokenNameToValue.put("Is_data_access", "'is_data_access'");
		tokenNameToValue.put("Is_virtual_bus", "'is_virtual_bus'");
		tokenNameToValue.put("End_to_end_flow", "'end_to_end_flow'");
		tokenNameToValue.put("Event_data_port", "'event_data_port'");
		tokenNameToValue.put("Propagate_error", "'propagate_error'");
		tokenNameToValue.put("Property_member", "'property_member'");
		tokenNameToValue.put("End_to_end_flows", "'end_to_end_flows'");
		tokenNameToValue.put("Flow_destination", "'flow_destination'");
		tokenNameToValue.put("Subprogram_group", "'subprogram_group'");
		tokenNameToValue.put("Enumerated_values", "'enumerated_values'");
		tokenNameToValue.put("Subprogram_access", "'subprogram_access'");
		tokenNameToValue.put("Virtual_processor", "'virtual_processor'");
		tokenNameToValue.put("Flow_specification", "'flow_specification'");
		tokenNameToValue.put("Flow_specifications", "'flow_specifications'");
		tokenNameToValue.put("Is_abstract_feature", "'is_abstract_feature'");
		tokenNameToValue.put("Provides_bus_access", "'provides_bus_access'");
		tokenNameToValue.put("Requires_bus_access", "'requires_bus_access'");
		tokenNameToValue.put("Is_virtual_processor", "'is_virtual_processor'");
		tokenNameToValue.put("Provides_data_access", "'provides_data_access'");
		tokenNameToValue.put("Requires_data_access", "'requires_data_access'");
		tokenNameToValue.put("Error_state_reachable", "'error_state_reachable'");
		tokenNameToValue.put("Subprogram_group_access", "'subprogram_group_access'");
		tokenNameToValue.put("Provides_subprogram_access", "'provides_subprogram_access'");
		tokenNameToValue.put("Requires_subprogram_access", "'requires_subprogram_access'");
		tokenNameToValue.put("Provides_subprogram_group_access", "'provides_subprogram_group_access'");
		tokenNameToValue.put("Requires_subprogram_group_access", "'requires_subprogram_group_access'");
 	}
 	
    public void setGrammarAccess(ResoluteGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleAnnexLibrary
entryRuleAnnexLibrary 
:
{ before(grammarAccess.getAnnexLibraryRule()); }
	 ruleAnnexLibrary
{ after(grammarAccess.getAnnexLibraryRule()); } 
	 EOF 
;

// Rule AnnexLibrary
ruleAnnexLibrary 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAnnexLibraryAccess().getResoluteLibraryParserRuleCall()); }
	ruleResoluteLibrary
{ after(grammarAccess.getAnnexLibraryAccess().getResoluteLibraryParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}











// Entry rule entryRuleResoluteLibrary
entryRuleResoluteLibrary 
:
{ before(grammarAccess.getResoluteLibraryRule()); }
	 ruleResoluteLibrary
{ after(grammarAccess.getResoluteLibraryRule()); } 
	 EOF 
;

// Rule ResoluteLibrary
ruleResoluteLibrary 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getResoluteLibraryAccess().getGroup()); }
(rule__ResoluteLibrary__Group__0)
{ after(grammarAccess.getResoluteLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
(rule__Definition__Alternatives)
{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseType
entryRuleBaseType 
:
{ before(grammarAccess.getBaseTypeRule()); }
	 ruleBaseType
{ after(grammarAccess.getBaseTypeRule()); } 
	 EOF 
;

// Rule BaseType
ruleBaseType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBaseTypeAccess().getTypeAssignment()); }
(rule__BaseType__TypeAssignment)
{ after(grammarAccess.getBaseTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArg
entryRuleArg 
:
{ before(grammarAccess.getArgRule()); }
	 ruleArg
{ after(grammarAccess.getArgRule()); } 
	 EOF 
;

// Rule Arg
ruleArg 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArgAccess().getAlternatives()); }
(rule__Arg__Alternatives)
{ after(grammarAccess.getArgAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDefinition
entryRuleConstantDefinition 
:
{ before(grammarAccess.getConstantDefinitionRule()); }
	 ruleConstantDefinition
{ after(grammarAccess.getConstantDefinitionRule()); } 
	 EOF 
;

// Rule ConstantDefinition
ruleConstantDefinition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup()); }
(rule__ConstantDefinition__Group__0)
{ after(grammarAccess.getConstantDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition 
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionBody
entryRuleDefinitionBody 
:
{ before(grammarAccess.getDefinitionBodyRule()); }
	 ruleDefinitionBody
{ after(grammarAccess.getDefinitionBodyRule()); } 
	 EOF 
;

// Rule DefinitionBody
ruleDefinitionBody 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDefinitionBodyAccess().getAlternatives()); }
(rule__DefinitionBody__Alternatives)
{ after(grammarAccess.getDefinitionBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClaimText
entryRuleClaimText 
:
{ before(grammarAccess.getClaimTextRule()); }
	 ruleClaimText
{ after(grammarAccess.getClaimTextRule()); } 
	 EOF 
;

// Rule ClaimText
ruleClaimText 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClaimTextAccess().getAlternatives()); }
(rule__ClaimText__Alternatives)
{ after(grammarAccess.getClaimTextAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getExprAccess().getImpliesExprParserRuleCall()); }
	ruleImpliesExpr
{ after(grammarAccess.getExprAccess().getImpliesExprParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImpliesExpr
entryRuleImpliesExpr 
:
{ before(grammarAccess.getImpliesExprRule()); }
	 ruleImpliesExpr
{ after(grammarAccess.getImpliesExprRule()); } 
	 EOF 
;

// Rule ImpliesExpr
ruleImpliesExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getImpliesExprAccess().getGroup()); }
(rule__ImpliesExpr__Group__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpr
entryRuleOrExpr 
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOrExprAccess().getGroup()); }
(rule__OrExpr__Group__0)
{ after(grammarAccess.getOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpr
entryRuleAndExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceOfExpr
entryRuleInstanceOfExpr 
:
{ before(grammarAccess.getInstanceOfExprRule()); }
	 ruleInstanceOfExpr
{ after(grammarAccess.getInstanceOfExprRule()); } 
	 EOF 
;

// Rule InstanceOfExpr
ruleInstanceOfExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup()); }
(rule__InstanceOfExpr__Group__0)
{ after(grammarAccess.getInstanceOfExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalOp
entryRuleRelationalOp 
:
{ before(grammarAccess.getRelationalOpRule()); }
	 ruleRelationalOp
{ after(grammarAccess.getRelationalOpRule()); } 
	 EOF 
;

// Rule RelationalOp
ruleRelationalOp 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRelationalOpAccess().getAlternatives()); }
(rule__RelationalOp__Alternatives)
{ after(grammarAccess.getRelationalOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpr
entryRuleRelationalExpr 
:
{ before(grammarAccess.getRelationalExprRule()); }
	 ruleRelationalExpr
{ after(grammarAccess.getRelationalExprRule()); } 
	 EOF 
;

// Rule RelationalExpr
ruleRelationalExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRelationalExprAccess().getGroup()); }
(rule__RelationalExpr__Group__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusExpr
entryRulePlusExpr 
:
{ before(grammarAccess.getPlusExprRule()); }
	 rulePlusExpr
{ after(grammarAccess.getPlusExprRule()); } 
	 EOF 
;

// Rule PlusExpr
rulePlusExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlusExprAccess().getGroup()); }
(rule__PlusExpr__Group__0)
{ after(grammarAccess.getPlusExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimesExpr
entryRuleTimesExpr 
:
{ before(grammarAccess.getTimesExprRule()); }
	 ruleTimesExpr
{ after(grammarAccess.getTimesExprRule()); } 
	 EOF 
;

// Rule TimesExpr
ruleTimesExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTimesExprAccess().getGroup()); }
(rule__TimesExpr__Group__0)
{ after(grammarAccess.getTimesExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpExpr
entryRuleExpExpr 
:
{ before(grammarAccess.getExpExprRule()); }
	 ruleExpExpr
{ after(grammarAccess.getExpExprRule()); } 
	 EOF 
;

// Rule ExpExpr
ruleExpExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getExpExprAccess().getGroup()); }
(rule__ExpExpr__Group__0)
{ after(grammarAccess.getExpExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixExpr
entryRulePrefixExpr 
:
{ before(grammarAccess.getPrefixExprRule()); }
	 rulePrefixExpr
{ after(grammarAccess.getPrefixExprRule()); } 
	 EOF 
;

// Rule PrefixExpr
rulePrefixExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPrefixExprAccess().getAlternatives()); }
(rule__PrefixExpr__Alternatives)
{ after(grammarAccess.getPrefixExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpr
entryRuleAtomicExpr 
:
{ before(grammarAccess.getAtomicExprRule()); }
	 ruleAtomicExpr
{ after(grammarAccess.getAtomicExprRule()); } 
	 EOF 
;

// Rule AtomicExpr
ruleAtomicExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAtomicExprAccess().getAlternatives()); }
(rule__AtomicExpr__Alternatives)
{ after(grammarAccess.getAtomicExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetBinding
entryRuleLetBinding 
:
{ before(grammarAccess.getLetBindingRule()); }
	 ruleLetBinding
{ after(grammarAccess.getLetBindingRule()); } 
	 EOF 
;

// Rule LetBinding
ruleLetBinding 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLetBindingAccess().getGroup()); }
(rule__LetBinding__Group__0)
{ after(grammarAccess.getLetBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInFn
entryRuleBuiltInFn 
:
{ before(grammarAccess.getBuiltInFnRule()); }
	 ruleBuiltInFn
{ after(grammarAccess.getBuiltInFnRule()); } 
	 EOF 
;

// Rule BuiltInFn
ruleBuiltInFn 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBuiltInFnAccess().getAlternatives()); }
(rule__BuiltInFn__Alternatives)
{ after(grammarAccess.getBuiltInFnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealTerm
entryRuleRealTerm 
:
{ before(grammarAccess.getRealTermRule()); }
	 ruleRealTerm
{ after(grammarAccess.getRealTermRule()); } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealTermAccess().getGroup()); }
(rule__RealTerm__Group__0)
{ after(grammarAccess.getRealTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnsignedReal
entryRuleUnsignedReal 
:
{ before(grammarAccess.getUnsignedRealRule()); }
	 ruleUnsignedReal
{ after(grammarAccess.getUnsignedRealRule()); } 
	 EOF 
;

// Rule UnsignedReal
ruleUnsignedReal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnsignedRealAccess().getREAL_LITTerminalRuleCall()); }
	RULE_REAL_LIT
{ after(grammarAccess.getUnsignedRealAccess().getREAL_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm 
:
{ before(grammarAccess.getIntegerTermRule()); }
	 ruleIntegerTerm
{ after(grammarAccess.getIntegerTermRule()); } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerTermAccess().getGroup()); }
(rule__IntegerTerm__Group__0)
{ after(grammarAccess.getIntegerTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnsignedInt
entryRuleUnsignedInt 
:
{ before(grammarAccess.getUnsignedIntRule()); }
	 ruleUnsignedInt
{ after(grammarAccess.getUnsignedIntRule()); } 
	 EOF 
;

// Rule UnsignedInt
ruleUnsignedInt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnsignedIntAccess().getINTEGER_LITTerminalRuleCall()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getUnsignedIntAccess().getINTEGER_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResoluteSubclause
entryRuleResoluteSubclause 
:
{ before(grammarAccess.getResoluteSubclauseRule()); }
	 ruleResoluteSubclause
{ after(grammarAccess.getResoluteSubclauseRule()); } 
	 EOF 
;

// Rule ResoluteSubclause
ruleResoluteSubclause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getResoluteSubclauseAccess().getGroup()); }
(rule__ResoluteSubclause__Group__0)
{ after(grammarAccess.getResoluteSubclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedDotID
entryRuleNestedDotID 
:
{ before(grammarAccess.getNestedDotIDRule()); }
	 ruleNestedDotID
{ after(grammarAccess.getNestedDotIDRule()); } 
	 EOF 
;

// Rule NestedDotID
ruleNestedDotID 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNestedDotIDAccess().getGroup()); }
(rule__NestedDotID__Group__0)
{ after(grammarAccess.getNestedDotIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProveStatement
entryRuleProveStatement 
:
{ before(grammarAccess.getProveStatementRule()); }
	 ruleProveStatement
{ after(grammarAccess.getProveStatementRule()); } 
	 EOF 
;

// Rule ProveStatement
ruleProveStatement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getProveStatementAccess().getGroup()); }
(rule__ProveStatement__Group__0)
{ after(grammarAccess.getProveStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleContainedPropertyAssociation
entryRuleContainedPropertyAssociation 
:
{ before(grammarAccess.getContainedPropertyAssociationRule()); }
	 ruleContainedPropertyAssociation
{ after(grammarAccess.getContainedPropertyAssociationRule()); } 
	 EOF 
;

// Rule ContainedPropertyAssociation
ruleContainedPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
(rule__ContainedPropertyAssociation__Group__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleContainmentPath
entryRuleContainmentPath 
:
{ before(grammarAccess.getContainmentPathRule()); }
	 ruleContainmentPath
{ after(grammarAccess.getContainmentPathRule()); } 
	 EOF 
;

// Rule ContainmentPath
ruleContainmentPath 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathAccess().getPathAssignment()); }
(rule__ContainmentPath__PathAssignment)
{ after(grammarAccess.getContainmentPathAccess().getPathAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleOptionalModalPropertyValue
entryRuleOptionalModalPropertyValue 
:
{ before(grammarAccess.getOptionalModalPropertyValueRule()); }
	 ruleOptionalModalPropertyValue
{ after(grammarAccess.getOptionalModalPropertyValueRule()); } 
	 EOF 
;

// Rule OptionalModalPropertyValue
ruleOptionalModalPropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
(rule__OptionalModalPropertyValue__Group__0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValue
entryRulePropertyValue 
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
(rule__PropertyValue__OwnedValueAssignment)
{ after(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyExpression
entryRulePropertyExpression 
:
{ before(grammarAccess.getPropertyExpressionRule()); }
	 rulePropertyExpression
{ after(grammarAccess.getPropertyExpressionRule()); } 
	 EOF 
;

// Rule PropertyExpression
rulePropertyExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
(rule__PropertyExpression__Alternatives)
{ after(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralorReferenceTerm
entryRuleLiteralorReferenceTerm 
:
{ before(grammarAccess.getLiteralorReferenceTermRule()); }
	 ruleLiteralorReferenceTerm
{ after(grammarAccess.getLiteralorReferenceTermRule()); } 
	 EOF 
;

// Rule LiteralorReferenceTerm
ruleLiteralorReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
(rule__LiteralorReferenceTerm__NamedValueAssignment)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
(rule__ConstantValue__NamedValueAssignment)
{ after(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceTerm
entryRuleReferenceTerm 
:
{ before(grammarAccess.getReferenceTermRule()); }
	 ruleReferenceTerm
{ after(grammarAccess.getReferenceTermRule()); } 
	 EOF 
;

// Rule ReferenceTerm
ruleReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getReferenceTermAccess().getGroup()); }
(rule__ReferenceTerm__Group__0)
{ after(grammarAccess.getReferenceTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordTerm
entryRuleRecordTerm 
:
{ before(grammarAccess.getRecordTermRule()); }
	 ruleRecordTerm
{ after(grammarAccess.getRecordTermRule()); } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecordTermAccess().getGroup()); }
(rule__RecordTerm__Group__0)
{ after(grammarAccess.getRecordTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleComputedTerm
entryRuleComputedTerm 
:
{ before(grammarAccess.getComputedTermRule()); }
	 ruleComputedTerm
{ after(grammarAccess.getComputedTermRule()); } 
	 EOF 
;

// Rule ComputedTerm
ruleComputedTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComputedTermAccess().getGroup()); }
(rule__ComputedTerm__Group__0)
{ after(grammarAccess.getComputedTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentClassifierTerm
entryRuleComponentClassifierTerm 
:
{ before(grammarAccess.getComponentClassifierTermRule()); }
	 ruleComponentClassifierTerm
{ after(grammarAccess.getComponentClassifierTermRule()); } 
	 EOF 
;

// Rule ComponentClassifierTerm
ruleComponentClassifierTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
(rule__ComponentClassifierTerm__Group__0)
{ after(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListTerm
entryRuleListTerm 
:
{ before(grammarAccess.getListTermRule()); }
	 ruleListTerm
{ after(grammarAccess.getListTermRule()); } 
	 EOF 
;

// Rule ListTerm
ruleListTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getListTermAccess().getGroup()); }
(rule__ListTerm__Group__0)
{ after(grammarAccess.getListTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldPropertyAssociation
entryRuleFieldPropertyAssociation 
:
{ before(grammarAccess.getFieldPropertyAssociationRule()); }
	 ruleFieldPropertyAssociation
{ after(grammarAccess.getFieldPropertyAssociationRule()); } 
	 EOF 
;

// Rule FieldPropertyAssociation
ruleFieldPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
(rule__FieldPropertyAssociation__Group__0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainmentPathElement
entryRuleContainmentPathElement 
:
{ before(grammarAccess.getContainmentPathElementRule()); }
	 ruleContainmentPathElement
{ after(grammarAccess.getContainmentPathElementRule()); } 
	 EOF 
;

// Rule ContainmentPathElement
ruleContainmentPathElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup()); }
(rule__ContainmentPathElement__Group__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePlusMinus
entryRulePlusMinus 
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlusMinusAccess().getAlternatives()); }
(rule__PlusMinus__Alternatives)
{ after(grammarAccess.getPlusMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringTerm
entryRuleStringTerm 
:
{ before(grammarAccess.getStringTermRule()); }
	 ruleStringTerm
{ after(grammarAccess.getStringTermRule()); } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStringTermAccess().getValueAssignment()); }
(rule__StringTerm__ValueAssignment)
{ after(grammarAccess.getStringTermAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoQuoteString
entryRuleNoQuoteString 
:
{ before(grammarAccess.getNoQuoteStringRule()); }
	 ruleNoQuoteString
{ after(grammarAccess.getNoQuoteStringRule()); } 
	 EOF 
;

// Rule NoQuoteString
ruleNoQuoteString 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayRange
entryRuleArrayRange 
:
{ before(grammarAccess.getArrayRangeRule()); }
	 ruleArrayRange
{ after(grammarAccess.getArrayRangeRule()); } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrayRangeAccess().getGroup()); }
(rule__ArrayRange__Group__0)
{ after(grammarAccess.getArrayRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedConstant
entryRuleSignedConstant 
:
{ before(grammarAccess.getSignedConstantRule()); }
	 ruleSignedConstant
{ after(grammarAccess.getSignedConstantRule()); } 
	 EOF 
;

// Rule SignedConstant
ruleSignedConstant 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedConstantAccess().getGroup()); }
(rule__SignedConstant__Group__0)
{ after(grammarAccess.getSignedConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleNumericRangeTerm
entryRuleNumericRangeTerm 
:
{ before(grammarAccess.getNumericRangeTermRule()); }
	 ruleNumericRangeTerm
{ after(grammarAccess.getNumericRangeTermRule()); } 
	 EOF 
;

// Rule NumericRangeTerm
ruleNumericRangeTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup()); }
(rule__NumericRangeTerm__Group__0)
{ after(grammarAccess.getNumericRangeTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumAlt
entryRuleNumAlt 
:
{ before(grammarAccess.getNumAltRule()); }
	 ruleNumAlt
{ after(grammarAccess.getNumAltRule()); } 
	 EOF 
;

// Rule NumAlt
ruleNumAlt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumAltAccess().getAlternatives()); }
(rule__NumAlt__Alternatives)
{ after(grammarAccess.getNumAltAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAppliesToKeywords
entryRuleAppliesToKeywords 
:
{ before(grammarAccess.getAppliesToKeywordsRule()); }
	 ruleAppliesToKeywords
{ after(grammarAccess.getAppliesToKeywordsRule()); } 
	 EOF 
;

// Rule AppliesToKeywords
ruleAppliesToKeywords 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAppliesToKeywordsAccess().getGroup()); }
(rule__AppliesToKeywords__Group__0)
{ after(grammarAccess.getAppliesToKeywordsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInBindingKeywords
entryRuleInBindingKeywords 
:
{ before(grammarAccess.getInBindingKeywordsRule()); }
	 ruleInBindingKeywords
{ after(grammarAccess.getInBindingKeywordsRule()); } 
	 EOF 
;

// Rule InBindingKeywords
ruleInBindingKeywords 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInBindingKeywordsAccess().getGroup()); }
(rule__InBindingKeywords__Group__0)
{ after(grammarAccess.getInBindingKeywordsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInModesKeywords
entryRuleInModesKeywords 
:
{ before(grammarAccess.getInModesKeywordsRule()); }
	 ruleInModesKeywords
{ after(grammarAccess.getInModesKeywordsRule()); } 
	 EOF 
;

// Rule InModesKeywords
ruleInModesKeywords 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInModesKeywordsAccess().getGroup()); }
(rule__InModesKeywords__Group__0)
{ after(grammarAccess.getInModesKeywordsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTVALUE
entryRuleINTVALUE 
:
{ before(grammarAccess.getINTVALUERule()); }
	 ruleINTVALUE
{ after(grammarAccess.getINTVALUERule()); } 
	 EOF 
;

// Rule INTVALUE
ruleINTVALUE 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQPREF
entryRuleQPREF 
:
{ before(grammarAccess.getQPREFRule()); }
	 ruleQPREF
{ after(grammarAccess.getQPREFRule()); } 
	 EOF 
;

// Rule QPREF
ruleQPREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQPREFAccess().getGroup()); }
(rule__QPREF__Group__0)
{ after(grammarAccess.getQPREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQCREF
entryRuleQCREF 
:
{ before(grammarAccess.getQCREFRule()); }
	 ruleQCREF
{ after(grammarAccess.getQCREFRule()); } 
	 EOF 
;

// Rule QCREF
ruleQCREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQCREFAccess().getGroup()); }
(rule__QCREF__Group__0)
{ after(grammarAccess.getQCREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTAR
entryRuleSTAR 
:
{ before(grammarAccess.getSTARRule()); }
	 ruleSTAR
{ after(grammarAccess.getSTARRule()); } 
	 EOF 
;

// Rule STAR
ruleSTAR 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSTARAccess().getAsteriskKeyword()); }

	Asterisk 

{ after(grammarAccess.getSTARAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Definition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getConstantDefinitionParserRuleCall_0()); }
	ruleConstantDefinition
{ after(grammarAccess.getDefinitionAccess().getConstantDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getFunctionDefinitionParserRuleCall_1()); }
	ruleFunctionDefinition
{ after(grammarAccess.getDefinitionAccess().getFunctionDefinitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_0()); }
(rule__Type__Group_0__0)
{ after(grammarAccess.getTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_1()); }
(rule__Type__Group_1__0)
{ after(grammarAccess.getTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_2()); }
(rule__Type__Group_2__0)
{ after(grammarAccess.getTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_3()); }
(rule__Type__Group_3__0)
{ after(grammarAccess.getTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseType__TypeAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseTypeAccess().getTypeIntKeyword_0_0()); }

	Int 

{ after(grammarAccess.getBaseTypeAccess().getTypeIntKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeRealKeyword_0_1()); }

	Real 

{ after(grammarAccess.getBaseTypeAccess().getTypeRealKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeStringKeyword_0_2()); }

	String 

{ after(grammarAccess.getBaseTypeAccess().getTypeStringKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeBoolKeyword_0_3()); }

	Bool 

{ after(grammarAccess.getBaseTypeAccess().getTypeBoolKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeRangeKeyword_0_4()); }

	Range 

{ after(grammarAccess.getBaseTypeAccess().getTypeRangeKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeAadlKeyword_0_5()); }

	Aadl 

{ after(grammarAccess.getBaseTypeAccess().getTypeAadlKeyword_0_5()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeComponentKeyword_0_6()); }

	Component 

{ after(grammarAccess.getBaseTypeAccess().getTypeComponentKeyword_0_6()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeAbstractKeyword_0_7()); }

	Abstract 

{ after(grammarAccess.getBaseTypeAccess().getTypeAbstractKeyword_0_7()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeBusKeyword_0_8()); }

	Bus 

{ after(grammarAccess.getBaseTypeAccess().getTypeBusKeyword_0_8()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeDataKeyword_0_9()); }

	Data 

{ after(grammarAccess.getBaseTypeAccess().getTypeDataKeyword_0_9()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeDeviceKeyword_0_10()); }

	Device 

{ after(grammarAccess.getBaseTypeAccess().getTypeDeviceKeyword_0_10()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeMemoryKeyword_0_11()); }

	Memory 

{ after(grammarAccess.getBaseTypeAccess().getTypeMemoryKeyword_0_11()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeProcessorKeyword_0_12()); }

	Processor 

{ after(grammarAccess.getBaseTypeAccess().getTypeProcessorKeyword_0_12()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeProcessKeyword_0_13()); }

	Process 

{ after(grammarAccess.getBaseTypeAccess().getTypeProcessKeyword_0_13()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeSubprogram_groupKeyword_0_14()); }

	Subprogram_group 

{ after(grammarAccess.getBaseTypeAccess().getTypeSubprogram_groupKeyword_0_14()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeSubprogramKeyword_0_15()); }

	Subprogram 

{ after(grammarAccess.getBaseTypeAccess().getTypeSubprogramKeyword_0_15()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeSystemKeyword_0_16()); }

	KW_System 

{ after(grammarAccess.getBaseTypeAccess().getTypeSystemKeyword_0_16()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeThread_groupKeyword_0_17()); }

	Thread_group 

{ after(grammarAccess.getBaseTypeAccess().getTypeThread_groupKeyword_0_17()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeThreadKeyword_0_18()); }

	Thread 

{ after(grammarAccess.getBaseTypeAccess().getTypeThreadKeyword_0_18()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeVirtual_busKeyword_0_19()); }

	Virtual_bus 

{ after(grammarAccess.getBaseTypeAccess().getTypeVirtual_busKeyword_0_19()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeVirtual_processorKeyword_0_20()); }

	Virtual_processor 

{ after(grammarAccess.getBaseTypeAccess().getTypeVirtual_processorKeyword_0_20()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeConnectionKeyword_0_21()); }

	Connection 

{ after(grammarAccess.getBaseTypeAccess().getTypeConnectionKeyword_0_21()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypePropertyKeyword_0_22()); }

	Property 

{ after(grammarAccess.getBaseTypeAccess().getTypePropertyKeyword_0_22()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeFeatureKeyword_0_23()); }

	Feature 

{ after(grammarAccess.getBaseTypeAccess().getTypeFeatureKeyword_0_23()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypePortKeyword_0_24()); }

	Port 

{ after(grammarAccess.getBaseTypeAccess().getTypePortKeyword_0_24()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeData_portKeyword_0_25()); }

	Data_port 

{ after(grammarAccess.getBaseTypeAccess().getTypeData_portKeyword_0_25()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeEvent_portKeyword_0_26()); }

	Event_port 

{ after(grammarAccess.getBaseTypeAccess().getTypeEvent_portKeyword_0_26()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeEvent_data_portKeyword_0_27()); }

	Event_data_port 

{ after(grammarAccess.getBaseTypeAccess().getTypeEvent_data_portKeyword_0_27()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeFeature_groupKeyword_0_28()); }

	Feature_group 

{ after(grammarAccess.getBaseTypeAccess().getTypeFeature_groupKeyword_0_28()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeAccessKeyword_0_29()); }

	Access 

{ after(grammarAccess.getBaseTypeAccess().getTypeAccessKeyword_0_29()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeBus_accessKeyword_0_30()); }

	Bus_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeBus_accessKeyword_0_30()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeProvides_bus_accessKeyword_0_31()); }

	Provides_bus_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeProvides_bus_accessKeyword_0_31()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeRequires_bus_accessKeyword_0_32()); }

	Requires_bus_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeRequires_bus_accessKeyword_0_32()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeData_accessKeyword_0_33()); }

	Data_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeData_accessKeyword_0_33()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeProvides_data_accessKeyword_0_34()); }

	Provides_data_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeProvides_data_accessKeyword_0_34()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeRequires_data_accessKeyword_0_35()); }

	Requires_data_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeRequires_data_accessKeyword_0_35()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeSubprogram_accessKeyword_0_36()); }

	Subprogram_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeSubprogram_accessKeyword_0_36()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeProvides_subprogram_accessKeyword_0_37()); }

	Provides_subprogram_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeProvides_subprogram_accessKeyword_0_37()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeRequires_subprogram_accessKeyword_0_38()); }

	Requires_subprogram_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeRequires_subprogram_accessKeyword_0_38()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeSubprogram_group_accessKeyword_0_39()); }

	Subprogram_group_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeSubprogram_group_accessKeyword_0_39()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeProvides_subprogram_group_accessKeyword_0_40()); }

	Provides_subprogram_group_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeProvides_subprogram_group_accessKeyword_0_40()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeRequires_subprogram_group_accessKeyword_0_41()); }

	Requires_subprogram_group_access 

{ after(grammarAccess.getBaseTypeAccess().getTypeRequires_subprogram_group_accessKeyword_0_41()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeFlow_specificationKeyword_0_42()); }

	Flow_specification 

{ after(grammarAccess.getBaseTypeAccess().getTypeFlow_specificationKeyword_0_42()); }
)

    |(
{ before(grammarAccess.getBaseTypeAccess().getTypeEnd_to_end_flowKeyword_0_43()); }

	End_to_end_flow 

{ after(grammarAccess.getBaseTypeAccess().getTypeEnd_to_end_flowKeyword_0_43()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getGroup_0()); }
(rule__Arg__Group_0__0)
{ after(grammarAccess.getArgAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getArgAccess().getGroup_1()); }
(rule__Arg__Group_1__0)
{ after(grammarAccess.getArgAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getGroup_0()); }
(rule__DefinitionBody__Group_0__0)
{ after(grammarAccess.getDefinitionBodyAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDefinitionBodyAccess().getGroup_1()); }
(rule__DefinitionBody__Group_1__0)
{ after(grammarAccess.getDefinitionBodyAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getGroup_0()); }
(rule__ClaimText__Group_0__0)
{ after(grammarAccess.getClaimTextAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getClaimTextAccess().getGroup_1()); }
(rule__ClaimText__Group_1__0)
{ after(grammarAccess.getClaimTextAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Alternatives_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1_0()); }
(rule__OrExpr__OpAssignment_1_0_0_1_0)
{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1_1()); }
(rule__OrExpr__OpAssignment_1_0_0_1_1)
{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Alternatives_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_0()); }
(rule__AndExpr__OpAssignment_1_0_0_1_0)
{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_1()); }
(rule__AndExpr__OpAssignment_1_0_0_1_1)
{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_0()); }

	LessThanSign 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_1()); }

	LessThanSignEqualsSign 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2()); }

	GreaterThanSign 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }

	GreaterThanSignEqualsSign 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getEqualsSignKeyword_4()); }

	EqualsSign 

{ after(grammarAccess.getRelationalOpAccess().getEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }

	LessThanSignGreaterThanSign 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__OpAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }

	PlusSign 

{ after(grammarAccess.getPlusExprAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getPlusExprAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }

	HyphenMinus 

{ after(grammarAccess.getPlusExprAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__OpAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }

	Asterisk 

{ after(grammarAccess.getTimesExprAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getTimesExprAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }

	Solidus 

{ after(grammarAccess.getTimesExprAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getTimesExprAccess().getOpPercentSignKeyword_1_0_0_1_0_2()); }

	PercentSign 

{ after(grammarAccess.getTimesExprAccess().getOpPercentSignKeyword_1_0_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getGroup_0()); }
(rule__PrefixExpr__Group_0__0)
{ after(grammarAccess.getPrefixExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrefixExprAccess().getGroup_1()); }
(rule__PrefixExpr__Group_1__0)
{ after(grammarAccess.getPrefixExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrefixExprAccess().getAtomicExprParserRuleCall_2()); }
	ruleAtomicExpr
{ after(grammarAccess.getPrefixExprAccess().getAtomicExprParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__OpAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getOpHyphenMinusKeyword_0_1_0_0()); }

	HyphenMinus 

{ after(grammarAccess.getPrefixExprAccess().getOpHyphenMinusKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixExprAccess().getOpNotKeyword_0_1_0_1()); }

	Not 

{ after(grammarAccess.getPrefixExprAccess().getOpNotKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_0()); }
(rule__AtomicExpr__Group_0__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_1()); }
(rule__AtomicExpr__Group_1__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_2()); }
(rule__AtomicExpr__Group_2__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_3()); }
(rule__AtomicExpr__Group_3__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_4()); }
(rule__AtomicExpr__Group_4__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_5()); }
(rule__AtomicExpr__Group_5__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_6()); }
(rule__AtomicExpr__Group_6__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_7()); }
(rule__AtomicExpr__Group_7__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_8()); }
(rule__AtomicExpr__Group_8__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_9()); }
(rule__AtomicExpr__Group_9__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_10()); }
(rule__AtomicExpr__Group_10__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_11()); }
(rule__AtomicExpr__Group_11__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_12()); }
(rule__AtomicExpr__Group_12__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_13()); }
(rule__AtomicExpr__Group_13__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_14()); }
(rule__AtomicExpr__Group_14__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_15()); }
(rule__AtomicExpr__Group_15__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_15()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_16()); }
(rule__AtomicExpr__Group_16__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_16()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_17()); }
(rule__AtomicExpr__Group_17__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Alternatives_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValAssignment_2_2_0()); }
(rule__AtomicExpr__ValAssignment_2_2_0)
{ after(grammarAccess.getAtomicExprAccess().getValAssignment_2_2_0()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_2_2_1()); }
(rule__AtomicExpr__Group_2_2_1__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__QuantAlternatives_8_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getQuantForallKeyword_8_1_0_0()); }

	Forall 

{ after(grammarAccess.getAtomicExprAccess().getQuantForallKeyword_8_1_0_0()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getQuantExistsKeyword_8_1_0_1()); }

	Exists 

{ after(grammarAccess.getAtomicExprAccess().getQuantExistsKeyword_8_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Alternatives_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_12_2_0()); }
(rule__AtomicExpr__Group_12_2_0__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_12_2_0()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_12_2_1()); }
(rule__AtomicExpr__Group_12_2_1__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_12_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Alternatives_13_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_13_2_0()); }
(rule__AtomicExpr__Group_13_2_0__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_13_2_0()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_13_2_1()); }
(rule__AtomicExpr__Group_13_2_1__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_13_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFn__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnAccess().getHas_propertyKeyword_0()); }

	Has_property 

{ after(grammarAccess.getBuiltInFnAccess().getHas_propertyKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getPropertyKeyword_1()); }

	Property 

{ after(grammarAccess.getBuiltInFnAccess().getPropertyKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getProperty_memberKeyword_2()); }

	Property_member 

{ after(grammarAccess.getBuiltInFnAccess().getProperty_memberKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_parentKeyword_3()); }

	Has_parent 

{ after(grammarAccess.getBuiltInFnAccess().getHas_parentKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getParentKeyword_4()); }

	Parent 

{ after(grammarAccess.getBuiltInFnAccess().getParentKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getNameKeyword_5()); }

	Name 

{ after(grammarAccess.getBuiltInFnAccess().getNameKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getTypeKeyword_6()); }

	Type 

{ after(grammarAccess.getBuiltInFnAccess().getTypeKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_typeKeyword_7()); }

	Has_type 

{ after(grammarAccess.getBuiltInFnAccess().getHas_typeKeyword_7()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_in_arrayKeyword_8()); }

	Is_in_array 

{ after(grammarAccess.getBuiltInFnAccess().getIs_in_arrayKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_prototypesKeyword_9()); }

	Has_prototypes 

{ after(grammarAccess.getBuiltInFnAccess().getHas_prototypesKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_modesKeyword_10()); }

	Has_modes 

{ after(grammarAccess.getBuiltInFnAccess().getHas_modesKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_processorKeyword_11()); }

	Is_processor 

{ after(grammarAccess.getBuiltInFnAccess().getIs_processorKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_virtual_processorKeyword_12()); }

	Is_virtual_processor 

{ after(grammarAccess.getBuiltInFnAccess().getIs_virtual_processorKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_systemKeyword_13()); }

	Is_system 

{ after(grammarAccess.getBuiltInFnAccess().getIs_systemKeyword_13()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_busKeyword_14()); }

	Is_bus 

{ after(grammarAccess.getBuiltInFnAccess().getIs_busKeyword_14()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_virtual_busKeyword_15()); }

	Is_virtual_bus 

{ after(grammarAccess.getBuiltInFnAccess().getIs_virtual_busKeyword_15()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_deviceKeyword_16()); }

	Is_device 

{ after(grammarAccess.getBuiltInFnAccess().getIs_deviceKeyword_16()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_memoryKeyword_17()); }

	Is_memory 

{ after(grammarAccess.getBuiltInFnAccess().getIs_memoryKeyword_17()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_threadKeyword_18()); }

	Is_thread 

{ after(grammarAccess.getBuiltInFnAccess().getIs_threadKeyword_18()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_processKeyword_19()); }

	Is_process 

{ after(grammarAccess.getBuiltInFnAccess().getIs_processKeyword_19()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_dataKeyword_20()); }

	Is_data 

{ after(grammarAccess.getBuiltInFnAccess().getIs_dataKeyword_20()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_subprogramKeyword_21()); }

	Is_subprogram 

{ after(grammarAccess.getBuiltInFnAccess().getIs_subprogramKeyword_21()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_of_typeKeyword_22()); }

	Is_of_type 

{ after(grammarAccess.getBuiltInFnAccess().getIs_of_typeKeyword_22()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_bound_toKeyword_23()); }

	Is_bound_to 

{ after(grammarAccess.getBuiltInFnAccess().getIs_bound_toKeyword_23()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_memberKeyword_24()); }

	Has_member 

{ after(grammarAccess.getBuiltInFnAccess().getHas_memberKeyword_24()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFeaturesKeyword_25()); }

	Features 

{ after(grammarAccess.getBuiltInFnAccess().getFeaturesKeyword_25()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getConnectionsKeyword_26()); }

	Connections 

{ after(grammarAccess.getBuiltInFnAccess().getConnectionsKeyword_26()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getEnumerated_valuesKeyword_27()); }

	Enumerated_values 

{ after(grammarAccess.getBuiltInFnAccess().getEnumerated_valuesKeyword_27()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSubcomponentsKeyword_28()); }

	Subcomponents 

{ after(grammarAccess.getBuiltInFnAccess().getSubcomponentsKeyword_28()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSourceKeyword_29()); }

	Source 

{ after(grammarAccess.getBuiltInFnAccess().getSourceKeyword_29()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getDestinationKeyword_30()); }

	Destination 

{ after(grammarAccess.getBuiltInFnAccess().getDestinationKeyword_30()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getDirectionKeyword_31()); }

	Direction 

{ after(grammarAccess.getBuiltInFnAccess().getDirectionKeyword_31()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_event_portKeyword_32()); }

	Is_event_port 

{ after(grammarAccess.getBuiltInFnAccess().getIs_event_portKeyword_32()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_abstract_featureKeyword_33()); }

	Is_abstract_feature 

{ after(grammarAccess.getBuiltInFnAccess().getIs_abstract_featureKeyword_33()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_data_portKeyword_34()); }

	Is_data_port 

{ after(grammarAccess.getBuiltInFnAccess().getIs_data_portKeyword_34()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_portKeyword_35()); }

	Is_port 

{ after(grammarAccess.getBuiltInFnAccess().getIs_portKeyword_35()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_data_accessKeyword_36()); }

	Is_data_access 

{ after(grammarAccess.getBuiltInFnAccess().getIs_data_accessKeyword_36()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getLower_boundKeyword_37()); }

	Lower_bound 

{ after(grammarAccess.getBuiltInFnAccess().getLower_boundKeyword_37()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getUpper_boundKeyword_38()); }

	Upper_bound 

{ after(grammarAccess.getBuiltInFnAccess().getUpper_boundKeyword_38()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getMemberKeyword_39()); }

	Member 

{ after(grammarAccess.getBuiltInFnAccess().getMemberKeyword_39()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getLengthKeyword_40()); }

	Length 

{ after(grammarAccess.getBuiltInFnAccess().getLengthKeyword_40()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSizeKeyword_41()); }

	Size 

{ after(grammarAccess.getBuiltInFnAccess().getSizeKeyword_41()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSumKeyword_42()); }

	Sum 

{ after(grammarAccess.getBuiltInFnAccess().getSumKeyword_42()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getAppendKeyword_43()); }

	Append 

{ after(grammarAccess.getBuiltInFnAccess().getAppendKeyword_43()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHeadKeyword_44()); }

	Head 

{ after(grammarAccess.getBuiltInFnAccess().getHeadKeyword_44()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getTailKeyword_45()); }

	Tail 

{ after(grammarAccess.getBuiltInFnAccess().getTailKeyword_45()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getAs_setKeyword_46()); }

	As_set 

{ after(grammarAccess.getBuiltInFnAccess().getAs_setKeyword_46()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getUnionKeyword_47()); }

	Union 

{ after(grammarAccess.getBuiltInFnAccess().getUnionKeyword_47()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIntersectKeyword_48()); }

	Intersect 

{ after(grammarAccess.getBuiltInFnAccess().getIntersectKeyword_48()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getAs_listKeyword_49()); }

	As_list 

{ after(grammarAccess.getBuiltInFnAccess().getAs_listKeyword_49()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getInstanceKeyword_50()); }

	Instance 

{ after(grammarAccess.getBuiltInFnAccess().getInstanceKeyword_50()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getInstancesKeyword_51()); }

	Instances 

{ after(grammarAccess.getBuiltInFnAccess().getInstancesKeyword_51()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getDebugKeyword_52()); }

	Debug 

{ after(grammarAccess.getBuiltInFnAccess().getDebugKeyword_52()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getAnalysisKeyword_53()); }

	Analysis 

{ after(grammarAccess.getBuiltInFnAccess().getAnalysisKeyword_53()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getReceive_errorKeyword_54()); }

	Receive_error 

{ after(grammarAccess.getBuiltInFnAccess().getReceive_errorKeyword_54()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getContain_errorKeyword_55()); }

	Contain_error 

{ after(grammarAccess.getBuiltInFnAccess().getContain_errorKeyword_55()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getPropagate_errorKeyword_56()); }

	Propagate_error 

{ after(grammarAccess.getBuiltInFnAccess().getPropagate_errorKeyword_56()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getError_state_reachableKeyword_57()); }

	Error_state_reachable 

{ after(grammarAccess.getBuiltInFnAccess().getError_state_reachableKeyword_57()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFlow_sourceKeyword_58()); }

	Flow_source 

{ after(grammarAccess.getBuiltInFnAccess().getFlow_sourceKeyword_58()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFlow_destinationKeyword_59()); }

	Flow_destination 

{ after(grammarAccess.getBuiltInFnAccess().getFlow_destinationKeyword_59()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFlow_elementsKeyword_60()); }

	Flow_elements 

{ after(grammarAccess.getBuiltInFnAccess().getFlow_elementsKeyword_60()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFlow_specificationsKeyword_61()); }

	Flow_specifications 

{ after(grammarAccess.getBuiltInFnAccess().getFlow_specificationsKeyword_61()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getEnd_to_end_flowsKeyword_62()); }

	End_to_end_flows 

{ after(grammarAccess.getBuiltInFnAccess().getEnd_to_end_flowsKeyword_62()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
(rule__ContainedPropertyAssociation__AppendAssignment_1_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
	ruleRecordTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); }
	ruleReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); }
	ruleComponentClassifierTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
	ruleComputedTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
	ruleStringTerm
{ after(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); }
	ruleNumericRangeTerm
{ after(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); }
	ruleRealTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); }
	ruleIntegerTerm
{ after(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
	ruleListTerm
{ after(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); }
	ruleBooleanLiteral
{ after(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
	ruleLiteralorReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
(rule__BooleanLiteral__ValueAssignment_1_0)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }

	False 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }

	PlusSign 

{ after(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }

	HyphenMinus 

{ after(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__NumAlt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); }
	ruleRealTerm
{ after(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); }
	ruleIntegerTerm
{ after(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); }
	ruleSignedConstant
{ after(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); }
	ruleConstantValue
{ after(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ResoluteLibrary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResoluteLibrary__Group__0__Impl
	rule__ResoluteLibrary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResoluteLibrary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResoluteLibraryAccess().getResoluteLibraryAction_0()); }
(

)
{ after(grammarAccess.getResoluteLibraryAccess().getResoluteLibraryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResoluteLibrary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResoluteLibrary__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResoluteLibrary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResoluteLibraryAccess().getDefinitionsAssignment_1()); }
(rule__ResoluteLibrary__DefinitionsAssignment_1)*
{ after(grammarAccess.getResoluteLibraryAccess().getDefinitionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getListTypeAction_0_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getListTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__1__Impl
	rule__Type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_0_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__2__Impl
	rule__Type__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_0_2()); }
(rule__Type__TypeAssignment_0_2)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_0_3()); }

	RightSquareBracket 

{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSetTypeAction_1_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getSetTypeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__1__Impl
	rule__Type__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_1_1()); }

	LeftCurlyBracket 

{ after(grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__2__Impl
	rule__Type__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_1_2()); }
(rule__Type__TypeAssignment_1_2)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_1_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBaseTypeParserRuleCall_2_0()); }
	ruleBaseType
{ after(grammarAccess.getTypeAccess().getBaseTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_2_1()); }
(rule__Type__Group_2_1__0)?
{ after(grammarAccess.getTypeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_1__0__Impl
	rule__Type__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLessThanSignKeyword_2_1_0()); }

	LessThanSign 

{ after(grammarAccess.getTypeAccess().getLessThanSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_1__1__Impl
	rule__Type__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getParamTypeAssignment_2_1_1()); }
(rule__Type__ParamTypeAssignment_2_1_1)
{ after(grammarAccess.getTypeAccess().getParamTypeAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_1_2()); }

	GreaterThanSign 

{ after(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__0__Impl
	rule__Type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLibraryFnTypeAction_3_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getLibraryFnTypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__1__Impl
	rule__Type__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLibNameAssignment_3_1()); }
(rule__Type__LibNameAssignment_3_1)
{ after(grammarAccess.getTypeAccess().getLibNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__2__Impl
	rule__Type__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFullStopKeyword_3_2()); }

	FullStop 

{ after(grammarAccess.getTypeAccess().getFullStopKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFnTypeAssignment_3_3()); }
(rule__Type__FnTypeAssignment_3_3)
{ after(grammarAccess.getTypeAccess().getFnTypeAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Arg__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getGroup_0_0()); }
(rule__Arg__Group_0_0__0)
{ after(grammarAccess.getArgAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Arg__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_0_0__0__Impl
	rule__Arg__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getNameAssignment_0_0_0()); }
(rule__Arg__NameAssignment_0_0_0)
{ after(grammarAccess.getArgAccess().getNameAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_0_0__1__Impl
	rule__Arg__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getColonKeyword_0_0_1()); }

	Colon 

{ after(grammarAccess.getArgAccess().getColonKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getTypeAssignment_0_0_2()); }
(rule__Arg__TypeAssignment_0_0_2)
{ after(grammarAccess.getArgAccess().getTypeAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Arg__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_1__0__Impl
	rule__Arg__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getQuantArgAction_1_0()); }
(

)
{ after(grammarAccess.getArgAccess().getQuantArgAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_1__1__Impl
	rule__Arg__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getNameAssignment_1_1()); }
(rule__Arg__NameAssignment_1_1)
{ after(grammarAccess.getArgAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_1__2__Impl
	rule__Arg__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getColonKeyword_1_2()); }

	Colon 

{ after(grammarAccess.getArgAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getExprAssignment_1_3()); }
(rule__Arg__ExprAssignment_1_3)
{ after(grammarAccess.getArgAccess().getExprAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__0__Impl
	rule__ConstantDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameAssignment_0()); }
(rule__ConstantDefinition__NameAssignment_0)
{ after(grammarAccess.getConstantDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__1__Impl
	rule__ConstantDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getConstantDefinitionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__2__Impl
	rule__ConstantDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getTypeAssignment_2()); }
(rule__ConstantDefinition__TypeAssignment_2)
{ after(grammarAccess.getConstantDefinitionAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__3__Impl
	rule__ConstantDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getEqualsSignKeyword_3()); }

	EqualsSign 

{ after(grammarAccess.getConstantDefinitionAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getExprAssignment_4()); }
(rule__ConstantDefinition__ExprAssignment_4)
{ after(grammarAccess.getConstantDefinitionAccess().getExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_0()); }
(rule__FunctionDefinition__NameAssignment_0)
{ after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); }
(rule__FunctionDefinition__Group_2__0)?
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_4()); }
(rule__FunctionDefinition__BodyAssignment_4)
{ after(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionDefinition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_2__0__Impl
	rule__FunctionDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getArgsAssignment_2_0()); }
(rule__FunctionDefinition__ArgsAssignment_2_0)
{ after(grammarAccess.getFunctionDefinitionAccess().getArgsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_2_1()); }
(rule__FunctionDefinition__Group_2_1__0)*
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinition__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_2_1__0__Impl
	rule__FunctionDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_2_1_0()); }

	Comma 

{ after(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getArgsAssignment_2_1_1()); }
(rule__FunctionDefinition__ArgsAssignment_2_1_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getArgsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefinitionBody__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_0__0__Impl
	rule__DefinitionBody__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getFunctionBodyAction_0_0()); }
(

)
{ after(grammarAccess.getDefinitionBodyAccess().getFunctionBodyAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_0__1__Impl
	rule__DefinitionBody__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getColonKeyword_0_1()); }

	Colon 

{ after(grammarAccess.getDefinitionBodyAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_0__2__Impl
	rule__DefinitionBody__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getTypeAssignment_0_2()); }
(rule__DefinitionBody__TypeAssignment_0_2)
{ after(grammarAccess.getDefinitionBodyAccess().getTypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_0__3__Impl
	rule__DefinitionBody__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getEqualsSignKeyword_0_3()); }

	EqualsSign 

{ after(grammarAccess.getDefinitionBodyAccess().getEqualsSignKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getExprAssignment_0_4()); }
(rule__DefinitionBody__ExprAssignment_0_4)
{ after(grammarAccess.getDefinitionBodyAccess().getExprAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefinitionBody__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_1__0__Impl
	rule__DefinitionBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getClaimBodyAction_1_0()); }
(

)
{ after(grammarAccess.getDefinitionBodyAccess().getClaimBodyAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_1__1__Impl
	rule__DefinitionBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getLessThanSignEqualsSignKeyword_1_1()); }

	LessThanSignEqualsSign 

{ after(grammarAccess.getDefinitionBodyAccess().getLessThanSignEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_1__2__Impl
	rule__DefinitionBody__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getGroup_1_2()); }
(rule__DefinitionBody__Group_1_2__0)
{ after(grammarAccess.getDefinitionBodyAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getExprAssignment_1_3()); }
(rule__DefinitionBody__ExprAssignment_1_3)
{ after(grammarAccess.getDefinitionBodyAccess().getExprAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DefinitionBody__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_1_2__0__Impl
	rule__DefinitionBody__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getAsteriskAsteriskKeyword_1_2_0()); }

	AsteriskAsterisk 

{ after(grammarAccess.getDefinitionBodyAccess().getAsteriskAsteriskKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_1_2__1__Impl
	rule__DefinitionBody__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDefinitionBodyAccess().getClaimAssignment_1_2_1()); }
(rule__DefinitionBody__ClaimAssignment_1_2_1)
{ after(grammarAccess.getDefinitionBodyAccess().getClaimAssignment_1_2_1()); }
)
(
{ before(grammarAccess.getDefinitionBodyAccess().getClaimAssignment_1_2_1()); }
(rule__DefinitionBody__ClaimAssignment_1_2_1)*
{ after(grammarAccess.getDefinitionBodyAccess().getClaimAssignment_1_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionBody__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionBody__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getAsteriskAsteriskKeyword_1_2_2()); }

	AsteriskAsterisk 

{ after(grammarAccess.getDefinitionBodyAccess().getAsteriskAsteriskKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClaimText__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClaimText__Group_0__0__Impl
	rule__ClaimText__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getClaimStringAction_0_0()); }
(

)
{ after(grammarAccess.getClaimTextAccess().getClaimStringAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClaimText__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClaimText__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getStrAssignment_0_1()); }
(rule__ClaimText__StrAssignment_0_1)
{ after(grammarAccess.getClaimTextAccess().getStrAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClaimText__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClaimText__Group_1__0__Impl
	rule__ClaimText__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getClaimArgAction_1_0()); }
(

)
{ after(grammarAccess.getClaimTextAccess().getClaimArgAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClaimText__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClaimText__Group_1__1__Impl
	rule__ClaimText__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getArgAssignment_1_1()); }
(rule__ClaimText__ArgAssignment_1_1)
{ after(grammarAccess.getClaimTextAccess().getArgAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClaimText__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClaimText__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getGroup_1_2()); }
(rule__ClaimText__Group_1_2__0)?
{ after(grammarAccess.getClaimTextAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClaimText__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClaimText__Group_1_2__0__Impl
	rule__ClaimText__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getPercentSignKeyword_1_2_0()); }

	PercentSign 

{ after(grammarAccess.getClaimTextAccess().getPercentSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClaimText__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClaimText__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getUnitAssignment_1_2_1()); }
(rule__ClaimText__UnitAssignment_1_2_1)
{ after(grammarAccess.getClaimTextAccess().getUnitAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__0__Impl
	rule__ImpliesExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
	ruleOrExpr
{ after(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1()); }
(rule__ImpliesExpr__Group_1__0)?
{ after(grammarAccess.getImpliesExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__0__Impl
	rule__ImpliesExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
(rule__ImpliesExpr__Group_1_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
(rule__ImpliesExpr__RightAssignment_1_1)
{ after(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
(rule__ImpliesExpr__Group_1_0_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ImpliesExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__0__Impl
	rule__ImpliesExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
(rule__ImpliesExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
(rule__OrExpr__Group_1__0)*
{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0()); }
(rule__OrExpr__Group_1_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
(rule__OrExpr__RightAssignment_1_1)
{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
(rule__OrExpr__Group_1_0_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__0__Impl
	rule__OrExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getAlternatives_1_0_0_1()); }
(rule__OrExpr__Alternatives_1_0_0_1)
{ after(grammarAccess.getOrExprAccess().getAlternatives_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getInstanceOfExprParserRuleCall_0()); }
	ruleInstanceOfExpr
{ after(grammarAccess.getAndExprAccess().getInstanceOfExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
(rule__AndExpr__Group_1__0)*
{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0()); }
(rule__AndExpr__Group_1_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
(rule__AndExpr__RightAssignment_1_1)
{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
(rule__AndExpr__Group_1_0_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__0__Impl
	rule__AndExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getAlternatives_1_0_0_1()); }
(rule__AndExpr__Alternatives_1_0_0_1)
{ after(grammarAccess.getAndExprAccess().getAlternatives_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOfExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group__0__Impl
	rule__InstanceOfExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getRelationalExprParserRuleCall_0()); }
	ruleRelationalExpr
{ after(grammarAccess.getInstanceOfExprAccess().getRelationalExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup_1()); }
(rule__InstanceOfExpr__Group_1__0)?
{ after(grammarAccess.getInstanceOfExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOfExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1__0__Impl
	rule__InstanceOfExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup_1_0()); }
(rule__InstanceOfExpr__Group_1_0__0)
{ after(grammarAccess.getInstanceOfExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getTypeAssignment_1_1()); }
(rule__InstanceOfExpr__TypeAssignment_1_1)
{ after(grammarAccess.getInstanceOfExprAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOfExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup_1_0_0()); }
(rule__InstanceOfExpr__Group_1_0_0__0)
{ after(grammarAccess.getInstanceOfExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__InstanceOfExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1_0_0__0__Impl
	rule__InstanceOfExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getInstanceOfExprExprAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getInstanceOfExprAccess().getInstanceOfExprExprAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getInstanceofKeyword_1_0_0_1()); }

	Instanceof 

{ after(grammarAccess.getInstanceOfExprAccess().getInstanceofKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__0__Impl
	rule__RelationalExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getPlusExprParserRuleCall_0()); }
	rulePlusExpr
{ after(grammarAccess.getRelationalExprAccess().getPlusExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1()); }
(rule__RelationalExpr__Group_1__0)?
{ after(grammarAccess.getRelationalExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__0__Impl
	rule__RelationalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1_0()); }
(rule__RelationalExpr__Group_1_0__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightAssignment_1_1()); }
(rule__RelationalExpr__RightAssignment_1_1)
{ after(grammarAccess.getRelationalExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1_0_0()); }
(rule__RelationalExpr__Group_1_0_0__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RelationalExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0_0__0__Impl
	rule__RelationalExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpAssignment_1_0_0_1()); }
(rule__RelationalExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getRelationalExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group__0__Impl
	rule__PlusExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getTimesExprParserRuleCall_0()); }
	ruleTimesExpr
{ after(grammarAccess.getPlusExprAccess().getTimesExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1()); }
(rule__PlusExpr__Group_1__0)*
{ after(grammarAccess.getPlusExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1__0__Impl
	rule__PlusExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1_0()); }
(rule__PlusExpr__Group_1_0__0)
{ after(grammarAccess.getPlusExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getRightAssignment_1_1()); }
(rule__PlusExpr__RightAssignment_1_1)
{ after(grammarAccess.getPlusExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1_0_0()); }
(rule__PlusExpr__Group_1_0_0__0)
{ after(grammarAccess.getPlusExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PlusExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0_0__0__Impl
	rule__PlusExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getPlusExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpAssignment_1_0_0_1()); }
(rule__PlusExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getPlusExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimesExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group__0__Impl
	rule__TimesExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getExpExprParserRuleCall_0()); }
	ruleExpExpr
{ after(grammarAccess.getTimesExprAccess().getExpExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimesExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getGroup_1()); }
(rule__TimesExpr__Group_1__0)*
{ after(grammarAccess.getTimesExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimesExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1__0__Impl
	rule__TimesExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getGroup_1_0()); }
(rule__TimesExpr__Group_1_0__0)
{ after(grammarAccess.getTimesExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimesExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getRightAssignment_1_1()); }
(rule__TimesExpr__RightAssignment_1_1)
{ after(grammarAccess.getTimesExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimesExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getGroup_1_0_0()); }
(rule__TimesExpr__Group_1_0_0__0)
{ after(grammarAccess.getTimesExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TimesExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1_0_0__0__Impl
	rule__TimesExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getTimesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimesExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getOpAssignment_1_0_0_1()); }
(rule__TimesExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getTimesExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpExpr__Group__0__Impl
	rule__ExpExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getPrefixExprParserRuleCall_0()); }
	rulePrefixExpr
{ after(grammarAccess.getExpExprAccess().getPrefixExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getGroup_1()); }
(rule__ExpExpr__Group_1__0)*
{ after(grammarAccess.getExpExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpExpr__Group_1__0__Impl
	rule__ExpExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getGroup_1_0()); }
(rule__ExpExpr__Group_1_0__0)
{ after(grammarAccess.getExpExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getRightAssignment_1_1()); }
(rule__ExpExpr__RightAssignment_1_1)
{ after(grammarAccess.getExpExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getGroup_1_0_0()); }
(rule__ExpExpr__Group_1_0_0__0)
{ after(grammarAccess.getExpExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpExpr__Group_1_0_0__0__Impl
	rule__ExpExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getOpAssignment_1_0_0_1()); }
(rule__ExpExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getExpExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_0__0__Impl
	rule__PrefixExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getUnaryExprAction_0_0()); }
(

)
{ after(grammarAccess.getPrefixExprAccess().getUnaryExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_0__1__Impl
	rule__PrefixExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getOpAssignment_0_1()); }
(rule__PrefixExpr__OpAssignment_0_1)
{ after(grammarAccess.getPrefixExprAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getExprAssignment_0_2()); }
(rule__PrefixExpr__ExprAssignment_0_2)
{ after(grammarAccess.getPrefixExprAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrefixExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_1__0__Impl
	rule__PrefixExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getCastExprAction_1_0()); }
(

)
{ after(grammarAccess.getPrefixExprAccess().getCastExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_1__1__Impl
	rule__PrefixExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getLeftParenthesisKeyword_1_1()); }

	LeftParenthesis 

{ after(grammarAccess.getPrefixExprAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_1__2__Impl
	rule__PrefixExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getTypeAssignment_1_2()); }
(rule__PrefixExpr__TypeAssignment_1_2)
{ after(grammarAccess.getPrefixExprAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_1__3__Impl
	rule__PrefixExpr__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getRightParenthesisKeyword_1_3()); }

	RightParenthesis 

{ after(grammarAccess.getPrefixExprAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getExprAssignment_1_4()); }
(rule__PrefixExpr__ExprAssignment_1_4)
{ after(grammarAccess.getPrefixExprAccess().getExprAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AtomicExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_0__0__Impl
	rule__AtomicExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIdExprAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getIdExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIdAssignment_0_1()); }
(rule__AtomicExpr__IdAssignment_0_1)
{ after(grammarAccess.getAtomicExprAccess().getIdAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1__0__Impl
	rule__AtomicExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getThisExprAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getThisExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1__1__Impl
	rule__AtomicExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getThisKeyword_1_1()); }

	This 

{ after(grammarAccess.getAtomicExprAccess().getThisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_1_2()); }
(rule__AtomicExpr__Group_1_2__0)?
{ after(grammarAccess.getAtomicExprAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1_2__0__Impl
	rule__AtomicExpr__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFullStopKeyword_1_2_0()); }

	FullStop 

{ after(grammarAccess.getAtomicExprAccess().getFullStopKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getSubAssignment_1_2_1()); }
(rule__AtomicExpr__SubAssignment_1_2_1)
{ after(grammarAccess.getAtomicExprAccess().getSubAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_2__0__Impl
	rule__AtomicExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFailExprAction_2_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getFailExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_2__1__Impl
	rule__AtomicExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFailKeyword_2_1()); }

	Fail 

{ after(grammarAccess.getAtomicExprAccess().getFailKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getAlternatives_2_2()); }
(rule__AtomicExpr__Alternatives_2_2)
{ after(grammarAccess.getAtomicExprAccess().getAlternatives_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_2_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_2_2_1__0__Impl
	rule__AtomicExpr__Group_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getAsteriskAsteriskKeyword_2_2_1_0()); }

	AsteriskAsterisk 

{ after(grammarAccess.getAtomicExprAccess().getAsteriskAsteriskKeyword_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_2_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_2_2_1__1__Impl
	rule__AtomicExpr__Group_2_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAtomicExprAccess().getFailmsgAssignment_2_2_1_1()); }
(rule__AtomicExpr__FailmsgAssignment_2_2_1_1)
{ after(grammarAccess.getAtomicExprAccess().getFailmsgAssignment_2_2_1_1()); }
)
(
{ before(grammarAccess.getAtomicExprAccess().getFailmsgAssignment_2_2_1_1()); }
(rule__AtomicExpr__FailmsgAssignment_2_2_1_1)*
{ after(grammarAccess.getAtomicExprAccess().getFailmsgAssignment_2_2_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_2_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_2_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getAsteriskAsteriskKeyword_2_2_1_2()); }

	AsteriskAsterisk 

{ after(grammarAccess.getAtomicExprAccess().getAsteriskAsteriskKeyword_2_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_3__0__Impl
	rule__AtomicExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIntExprAction_3_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getIntExprAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValAssignment_3_1()); }
(rule__AtomicExpr__ValAssignment_3_1)
{ after(grammarAccess.getAtomicExprAccess().getValAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_4__0__Impl
	rule__AtomicExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRealExprAction_4_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getRealExprAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValAssignment_4_1()); }
(rule__AtomicExpr__ValAssignment_4_1)
{ after(grammarAccess.getAtomicExprAccess().getValAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_5__0__Impl
	rule__AtomicExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getBoolExprAction_5_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getBoolExprAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValAssignment_5_1()); }
(rule__AtomicExpr__ValAssignment_5_1)
{ after(grammarAccess.getAtomicExprAccess().getValAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_6__0__Impl
	rule__AtomicExpr__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getStringExprAction_6_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getStringExprAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValAssignment_6_1()); }
(rule__AtomicExpr__ValAssignment_6_1)
{ after(grammarAccess.getAtomicExprAccess().getValAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_7__0__Impl
	rule__AtomicExpr__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIfThenElseExprAction_7_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getIfThenElseExprAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_7__1__Impl
	rule__AtomicExpr__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIfKeyword_7_1()); }

	If 

{ after(grammarAccess.getAtomicExprAccess().getIfKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_7__2__Impl
	rule__AtomicExpr__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getCondAssignment_7_2()); }
(rule__AtomicExpr__CondAssignment_7_2)
{ after(grammarAccess.getAtomicExprAccess().getCondAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_7__3__Impl
	rule__AtomicExpr__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getThenKeyword_7_3()); }

	Then 

{ after(grammarAccess.getAtomicExprAccess().getThenKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_7__4__Impl
	rule__AtomicExpr__Group_7__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getThenAssignment_7_4()); }
(rule__AtomicExpr__ThenAssignment_7_4)
{ after(grammarAccess.getAtomicExprAccess().getThenAssignment_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_7__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_7__5__Impl
	rule__AtomicExpr__Group_7__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_7__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getElseKeyword_7_5()); }

	Else 

{ after(grammarAccess.getAtomicExprAccess().getElseKeyword_7_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_7__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_7__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_7__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getElseAssignment_7_6()); }
(rule__AtomicExpr__ElseAssignment_7_6)
{ after(grammarAccess.getAtomicExprAccess().getElseAssignment_7_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AtomicExpr__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8__0__Impl
	rule__AtomicExpr__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getQuantifiedExprAction_8_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getQuantifiedExprAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8__1__Impl
	rule__AtomicExpr__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getQuantAssignment_8_1()); }
(rule__AtomicExpr__QuantAssignment_8_1)
{ after(grammarAccess.getAtomicExprAccess().getQuantAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8__2__Impl
	rule__AtomicExpr__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_8_2()); }
(rule__AtomicExpr__Group_8_2__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_8_2()); }
)
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_8_2()); }
(rule__AtomicExpr__Group_8_2__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_8_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8__3__Impl
	rule__AtomicExpr__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFullStopKeyword_8_3()); }

	FullStop 

{ after(grammarAccess.getAtomicExprAccess().getFullStopKeyword_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprAssignment_8_4()); }
(rule__AtomicExpr__ExprAssignment_8_4)
{ after(grammarAccess.getAtomicExprAccess().getExprAssignment_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AtomicExpr__Group_8_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8_2__0__Impl
	rule__AtomicExpr__Group_8_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_8_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_8_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8_2__1__Impl
	rule__AtomicExpr__Group_8_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_8_2_1()); }
(rule__AtomicExpr__ArgsAssignment_8_2_1)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_8_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_8_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_8_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_8_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_8_2_2()); }

	RightParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_8_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_9_0()); }
(rule__AtomicExpr__Group_9_0__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AtomicExpr__Group_9_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0__0__Impl
	rule__AtomicExpr__Group_9_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLibraryFnCallExprAction_9_0_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getLibraryFnCallExprAction_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0__1__Impl
	rule__AtomicExpr__Group_9_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLibNameAssignment_9_0_1()); }
(rule__AtomicExpr__LibNameAssignment_9_0_1)
{ after(grammarAccess.getAtomicExprAccess().getLibNameAssignment_9_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0__2__Impl
	rule__AtomicExpr__Group_9_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFullStopKeyword_9_0_2()); }

	FullStop 

{ after(grammarAccess.getAtomicExprAccess().getFullStopKeyword_9_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0__3__Impl
	rule__AtomicExpr__Group_9_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFnNameAssignment_9_0_3()); }
(rule__AtomicExpr__FnNameAssignment_9_0_3)
{ after(grammarAccess.getAtomicExprAccess().getFnNameAssignment_9_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0__4__Impl
	rule__AtomicExpr__Group_9_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_9_0_4()); }

	LeftParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_9_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0__5__Impl
	rule__AtomicExpr__Group_9_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_9_0_5()); }
(rule__AtomicExpr__Group_9_0_5__0)?
{ after(grammarAccess.getAtomicExprAccess().getGroup_9_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_9_0_6()); }

	RightParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_9_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AtomicExpr__Group_9_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0_5__0__Impl
	rule__AtomicExpr__Group_9_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_9_0_5_0()); }
(rule__AtomicExpr__ArgsAssignment_9_0_5_0)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_9_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_9_0_5_1()); }
(rule__AtomicExpr__Group_9_0_5_1__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_9_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_9_0_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0_5_1__0__Impl
	rule__AtomicExpr__Group_9_0_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getCommaKeyword_9_0_5_1_0()); }

	Comma 

{ after(grammarAccess.getAtomicExprAccess().getCommaKeyword_9_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_9_0_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_9_0_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_9_0_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_9_0_5_1_1()); }
(rule__AtomicExpr__ArgsAssignment_9_0_5_1_1)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_9_0_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10__0__Impl
	rule__AtomicExpr__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getBuiltInFnCallExprAction_10_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getBuiltInFnCallExprAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10__1__Impl
	rule__AtomicExpr__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFnAssignment_10_1()); }
(rule__AtomicExpr__FnAssignment_10_1)
{ after(grammarAccess.getAtomicExprAccess().getFnAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10__2__Impl
	rule__AtomicExpr__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_10_2()); }

	LeftParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10__3__Impl
	rule__AtomicExpr__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_10_3()); }
(rule__AtomicExpr__Group_10_3__0)?
{ after(grammarAccess.getAtomicExprAccess().getGroup_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_10__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_10_4()); }

	RightParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_10_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AtomicExpr__Group_10_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10_3__0__Impl
	rule__AtomicExpr__Group_10_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_10_3_0()); }
(rule__AtomicExpr__ArgsAssignment_10_3_0)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_10_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_10_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_10_3_1()); }
(rule__AtomicExpr__Group_10_3_1__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_10_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_10_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10_3_1__0__Impl
	rule__AtomicExpr__Group_10_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getCommaKeyword_10_3_1_0()); }

	Comma 

{ after(grammarAccess.getAtomicExprAccess().getCommaKeyword_10_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_10_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_10_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_10_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_10_3_1_1()); }
(rule__AtomicExpr__ArgsAssignment_10_3_1_1)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_10_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11__0__Impl
	rule__AtomicExpr__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFnCallExprAction_11_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getFnCallExprAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11__1__Impl
	rule__AtomicExpr__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFnAssignment_11_1()); }
(rule__AtomicExpr__FnAssignment_11_1)
{ after(grammarAccess.getAtomicExprAccess().getFnAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11__2__Impl
	rule__AtomicExpr__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_11_2()); }

	LeftParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11__3__Impl
	rule__AtomicExpr__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_11_3()); }
(rule__AtomicExpr__Group_11_3__0)?
{ after(grammarAccess.getAtomicExprAccess().getGroup_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_11__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_11_4()); }

	RightParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_11_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AtomicExpr__Group_11_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11_3__0__Impl
	rule__AtomicExpr__Group_11_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_11_3_0()); }
(rule__AtomicExpr__ArgsAssignment_11_3_0)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_11_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_11_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_11_3_1()); }
(rule__AtomicExpr__Group_11_3_1__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_11_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_11_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11_3_1__0__Impl
	rule__AtomicExpr__Group_11_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getCommaKeyword_11_3_1_0()); }

	Comma 

{ after(grammarAccess.getAtomicExprAccess().getCommaKeyword_11_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_11_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_11_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_11_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_11_3_1_1()); }
(rule__AtomicExpr__ArgsAssignment_11_3_1_1)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_11_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12__0__Impl
	rule__AtomicExpr__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftSquareBracketKeyword_12_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getAtomicExprAccess().getLeftSquareBracketKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12__1__Impl
	rule__AtomicExpr__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprParserRuleCall_12_1()); }
	ruleExpr
{ after(grammarAccess.getAtomicExprAccess().getExprParserRuleCall_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12__2__Impl
	rule__AtomicExpr__Group_12__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getAlternatives_12_2()); }
(rule__AtomicExpr__Alternatives_12_2)
{ after(grammarAccess.getAtomicExprAccess().getAlternatives_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightSquareBracketKeyword_12_3()); }

	RightSquareBracket 

{ after(grammarAccess.getAtomicExprAccess().getRightSquareBracketKeyword_12_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicExpr__Group_12_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0__0__Impl
	rule__AtomicExpr__Group_12_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getListFilterMapExprMapAction_12_2_0_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getListFilterMapExprMapAction_12_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0__1__Impl
	rule__AtomicExpr__Group_12_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getForKeyword_12_2_0_1()); }

	For 

{ after(grammarAccess.getAtomicExprAccess().getForKeyword_12_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0__2__Impl
	rule__AtomicExpr__Group_12_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_12_2_0_2()); }
(rule__AtomicExpr__Group_12_2_0_2__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_12_2_0_2()); }
)
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_12_2_0_2()); }
(rule__AtomicExpr__Group_12_2_0_2__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_12_2_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_12_2_0_3()); }
(rule__AtomicExpr__Group_12_2_0_3__0)?
{ after(grammarAccess.getAtomicExprAccess().getGroup_12_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicExpr__Group_12_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0_2__0__Impl
	rule__AtomicExpr__Group_12_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_12_2_0_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_12_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0_2__1__Impl
	rule__AtomicExpr__Group_12_2_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_12_2_0_2_1()); }
(rule__AtomicExpr__ArgsAssignment_12_2_0_2_1)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_12_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_12_2_0_2_2()); }

	RightParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_12_2_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_12_2_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0_3__0__Impl
	rule__AtomicExpr__Group_12_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getVerticalLineKeyword_12_2_0_3_0()); }

	VerticalLine 

{ after(grammarAccess.getAtomicExprAccess().getVerticalLineKeyword_12_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFilterAssignment_12_2_0_3_1()); }
(rule__AtomicExpr__FilterAssignment_12_2_0_3_1)
{ after(grammarAccess.getAtomicExprAccess().getFilterAssignment_12_2_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_12_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_1__0__Impl
	rule__AtomicExpr__Group_12_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getListExprExprsAction_12_2_1_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getListExprExprsAction_12_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_12_2_1_1()); }
(rule__AtomicExpr__Group_12_2_1_1__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_12_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_12_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_1_1__0__Impl
	rule__AtomicExpr__Group_12_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getCommaKeyword_12_2_1_1_0()); }

	Comma 

{ after(grammarAccess.getAtomicExprAccess().getCommaKeyword_12_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_12_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_12_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_12_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprsAssignment_12_2_1_1_1()); }
(rule__AtomicExpr__ExprsAssignment_12_2_1_1_1)
{ after(grammarAccess.getAtomicExprAccess().getExprsAssignment_12_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13__0__Impl
	rule__AtomicExpr__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftCurlyBracketKeyword_13_0()); }

	LeftCurlyBracket 

{ after(grammarAccess.getAtomicExprAccess().getLeftCurlyBracketKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13__1__Impl
	rule__AtomicExpr__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprParserRuleCall_13_1()); }
	ruleExpr
{ after(grammarAccess.getAtomicExprAccess().getExprParserRuleCall_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13__2__Impl
	rule__AtomicExpr__Group_13__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getAlternatives_13_2()); }
(rule__AtomicExpr__Alternatives_13_2)
{ after(grammarAccess.getAtomicExprAccess().getAlternatives_13_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightCurlyBracketKeyword_13_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getAtomicExprAccess().getRightCurlyBracketKeyword_13_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicExpr__Group_13_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0__0__Impl
	rule__AtomicExpr__Group_13_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getSetFilterMapExprMapAction_13_2_0_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getSetFilterMapExprMapAction_13_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0__1__Impl
	rule__AtomicExpr__Group_13_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getForKeyword_13_2_0_1()); }

	For 

{ after(grammarAccess.getAtomicExprAccess().getForKeyword_13_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0__2__Impl
	rule__AtomicExpr__Group_13_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_13_2_0_2()); }
(rule__AtomicExpr__Group_13_2_0_2__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_13_2_0_2()); }
)
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_13_2_0_2()); }
(rule__AtomicExpr__Group_13_2_0_2__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_13_2_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_13_2_0_3()); }
(rule__AtomicExpr__Group_13_2_0_3__0)?
{ after(grammarAccess.getAtomicExprAccess().getGroup_13_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicExpr__Group_13_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0_2__0__Impl
	rule__AtomicExpr__Group_13_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_13_2_0_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_13_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0_2__1__Impl
	rule__AtomicExpr__Group_13_2_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsAssignment_13_2_0_2_1()); }
(rule__AtomicExpr__ArgsAssignment_13_2_0_2_1)
{ after(grammarAccess.getAtomicExprAccess().getArgsAssignment_13_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_13_2_0_2_2()); }

	RightParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_13_2_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_13_2_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0_3__0__Impl
	rule__AtomicExpr__Group_13_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getVerticalLineKeyword_13_2_0_3_0()); }

	VerticalLine 

{ after(grammarAccess.getAtomicExprAccess().getVerticalLineKeyword_13_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFilterAssignment_13_2_0_3_1()); }
(rule__AtomicExpr__FilterAssignment_13_2_0_3_1)
{ after(grammarAccess.getAtomicExprAccess().getFilterAssignment_13_2_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_13_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_1__0__Impl
	rule__AtomicExpr__Group_13_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getSetExprExprsAction_13_2_1_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getSetExprExprsAction_13_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_13_2_1_1()); }
(rule__AtomicExpr__Group_13_2_1_1__0)*
{ after(grammarAccess.getAtomicExprAccess().getGroup_13_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_13_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_1_1__0__Impl
	rule__AtomicExpr__Group_13_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getCommaKeyword_13_2_1_1_0()); }

	Comma 

{ after(grammarAccess.getAtomicExprAccess().getCommaKeyword_13_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_13_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_13_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_13_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprsAssignment_13_2_1_1_1()); }
(rule__AtomicExpr__ExprsAssignment_13_2_1_1_1)
{ after(grammarAccess.getAtomicExprAccess().getExprsAssignment_13_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_14__0__Impl
	rule__AtomicExpr__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getListExprAction_14_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getListExprAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_14__1__Impl
	rule__AtomicExpr__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftSquareBracketKeyword_14_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getAtomicExprAccess().getLeftSquareBracketKeyword_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_14__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightSquareBracketKeyword_14_2()); }

	RightSquareBracket 

{ after(grammarAccess.getAtomicExprAccess().getRightSquareBracketKeyword_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_15__0__Impl
	rule__AtomicExpr__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getSetExprAction_15_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getSetExprAction_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_15__1__Impl
	rule__AtomicExpr__Group_15__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftCurlyBracketKeyword_15_1()); }

	LeftCurlyBracket 

{ after(grammarAccess.getAtomicExprAccess().getLeftCurlyBracketKeyword_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_15__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_15__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_15__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightCurlyBracketKeyword_15_2()); }

	RightCurlyBracket 

{ after(grammarAccess.getAtomicExprAccess().getRightCurlyBracketKeyword_15_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpr__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_16__0__Impl
	rule__AtomicExpr__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLetExprAction_16_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getLetExprAction_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_16__1__Impl
	rule__AtomicExpr__Group_16__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLetKeyword_16_1()); }

	Let 

{ after(grammarAccess.getAtomicExprAccess().getLetKeyword_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_16__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_16__2__Impl
	rule__AtomicExpr__Group_16__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_16__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getBindingAssignment_16_2()); }
(rule__AtomicExpr__BindingAssignment_16_2)
{ after(grammarAccess.getAtomicExprAccess().getBindingAssignment_16_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_16__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_16__3__Impl
	rule__AtomicExpr__Group_16__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_16__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getSemicolonKeyword_16_3()); }

	Semicolon 

{ after(grammarAccess.getAtomicExprAccess().getSemicolonKeyword_16_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_16__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_16__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_16__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprAssignment_16_4()); }
(rule__AtomicExpr__ExprAssignment_16_4)
{ after(grammarAccess.getAtomicExprAccess().getExprAssignment_16_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AtomicExpr__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_17__0__Impl
	rule__AtomicExpr__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_17_0()); }

	LeftParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_17__1__Impl
	rule__AtomicExpr__Group_17__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprParserRuleCall_17_1()); }
	ruleExpr
{ after(grammarAccess.getAtomicExprAccess().getExprParserRuleCall_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_17__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_17__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_17__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_17_2()); }

	RightParenthesis 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_17_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LetBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetBinding__Group__0__Impl
	rule__LetBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getNameAssignment_0()); }
(rule__LetBinding__NameAssignment_0)
{ after(grammarAccess.getLetBindingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetBinding__Group__1__Impl
	rule__LetBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getLetBindingAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetBinding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetBinding__Group__2__Impl
	rule__LetBinding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getTypeAssignment_2()); }
(rule__LetBinding__TypeAssignment_2)
{ after(grammarAccess.getLetBindingAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetBinding__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetBinding__Group__3__Impl
	rule__LetBinding__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getEqualsSignKeyword_3()); }

	EqualsSign 

{ after(grammarAccess.getLetBindingAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetBinding__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetBinding__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getExprAssignment_4()); }
(rule__LetBinding__ExprAssignment_4)
{ after(grammarAccess.getLetBindingAccess().getExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RealTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__0__Impl
	rule__RealTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
(rule__RealTerm__ValueAssignment_0)
{ after(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
(rule__RealTerm__UnitAssignment_1)?
{ after(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__0__Impl
	rule__IntegerTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
(rule__IntegerTerm__ValueAssignment_0)
{ after(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
(rule__IntegerTerm__UnitAssignment_1)?
{ after(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ResoluteSubclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResoluteSubclause__Group__0__Impl
	rule__ResoluteSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResoluteSubclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResoluteSubclauseAccess().getResoluteSubclauseAction_0()); }
(

)
{ after(grammarAccess.getResoluteSubclauseAccess().getResoluteSubclauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResoluteSubclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResoluteSubclause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResoluteSubclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResoluteSubclauseAccess().getProvesAssignment_1()); }
(rule__ResoluteSubclause__ProvesAssignment_1)*
{ after(grammarAccess.getResoluteSubclauseAccess().getProvesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedDotID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group__0__Impl
	rule__NestedDotID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getBaseAssignment_0()); }
(rule__NestedDotID__BaseAssignment_0)
{ after(grammarAccess.getNestedDotIDAccess().getBaseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedDotID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getGroup_1()); }
(rule__NestedDotID__Group_1__0)?
{ after(grammarAccess.getNestedDotIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedDotID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group_1__0__Impl
	rule__NestedDotID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getFullStopKeyword_1_0()); }

	FullStop 

{ after(grammarAccess.getNestedDotIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedDotID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getSubAssignment_1_1()); }
(rule__NestedDotID__SubAssignment_1_1)
{ after(grammarAccess.getNestedDotIDAccess().getSubAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProveStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProveStatement__Group__0__Impl
	rule__ProveStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProveStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProveStatementAccess().getProveKeyword_0()); }

	Prove 

{ after(grammarAccess.getProveStatementAccess().getProveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProveStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProveStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProveStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProveStatementAccess().getExprAssignment_1()); }
(rule__ProveStatement__ExprAssignment_1)
{ after(grammarAccess.getProveStatementAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__0__Impl
	rule__ContainedPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__ContainedPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__1__Impl
	rule__ContainedPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
(rule__ContainedPropertyAssociation__Alternatives_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__2__Impl
	rule__ContainedPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
(rule__ContainedPropertyAssociation__ConstantAssignment_2)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__3__Impl
	rule__ContainedPropertyAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3()); }
(rule__ContainedPropertyAssociation__Group_3__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__4__Impl
	rule__ContainedPropertyAssociation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
(rule__ContainedPropertyAssociation__Group_4__0)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__5__Impl
	rule__ContainedPropertyAssociation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_5()); }
(rule__ContainedPropertyAssociation__Group_5__0)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6()); }

	Semicolon 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ContainedPropertyAssociation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3__0__Impl
	rule__ContainedPropertyAssociation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_1()); }
(rule__ContainedPropertyAssociation__Group_3_1__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_1__0__Impl
	rule__ContainedPropertyAssociation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0()); }

	Comma 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1_1()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__0__Impl
	rule__ContainedPropertyAssociation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToKeywordsParserRuleCall_4_0()); }
	ruleAppliesToKeywords
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToKeywordsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__1__Impl
	rule__ContainedPropertyAssociation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_1()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_2()); }
(rule__ContainedPropertyAssociation__Group_4_2__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContainedPropertyAssociation__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_2__0__Impl
	rule__ContainedPropertyAssociation__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_2_0()); }

	Comma 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2_1()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_2_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__0__Impl
	rule__ContainedPropertyAssociation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingKeywordsParserRuleCall_5_0()); }
	ruleInBindingKeywords
{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingKeywordsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__1__Impl
	rule__ContainedPropertyAssociation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_1()); }

	LeftParenthesis 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__2__Impl
	rule__ContainedPropertyAssociation__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingAssignment_5_2()); }
(rule__ContainedPropertyAssociation__InBindingAssignment_5_2)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_3()); }

	RightParenthesis 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__OptionalModalPropertyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__0__Impl
	rule__OptionalModalPropertyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
(rule__OptionalModalPropertyValue__OwnedValueAssignment_0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
(rule__OptionalModalPropertyValue__Group_1__0)?
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalModalPropertyValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__0__Impl
	rule__OptionalModalPropertyValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModesKeywordsParserRuleCall_1_0()); }
	ruleInModesKeywords
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModesKeywordsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__1__Impl
	rule__OptionalModalPropertyValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_1()); }

	LeftParenthesis 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__2__Impl
	rule__OptionalModalPropertyValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_2()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_2)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__3__Impl
	rule__OptionalModalPropertyValue__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_3()); }
(rule__OptionalModalPropertyValue__Group_1_3__0)*
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_4()); }

	RightParenthesis 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OptionalModalPropertyValue__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_3__0__Impl
	rule__OptionalModalPropertyValue__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_3_0()); }

	Comma 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3_1()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_3_1)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__0__Impl
	rule__ReferenceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }

	Reference 

{ after(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__1__Impl
	rule__ReferenceTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__2__Impl
	rule__ReferenceTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getPathAssignment_2()); }
(rule__ReferenceTerm__PathAssignment_2)
{ after(grammarAccess.getReferenceTermAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RecordTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__0__Impl
	rule__RecordTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__1__Impl
	rule__RecordTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)*
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2()); }

	RightSquareBracket 

{ after(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ComputedTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__0__Impl
	rule__ComputedTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }

	Compute 

{ after(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__1__Impl
	rule__ComputedTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__2__Impl
	rule__ComputedTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
(rule__ComputedTerm__FunctionAssignment_2)
{ after(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComponentClassifierTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__0__Impl
	rule__ComponentClassifierTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }

	Classifier 

{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__1__Impl
	rule__ComponentClassifierTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__2__Impl
	rule__ComponentClassifierTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
(rule__ComponentClassifierTerm__ClassifierAssignment_2)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__0__Impl
	rule__ListTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getListValueAction_0()); }
(

)
{ after(grammarAccess.getListTermAccess().getListValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__1__Impl
	rule__ListTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__2__Impl
	rule__ListTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getGroup_2()); }
(rule__ListTerm__Group_2__0)?
{ after(grammarAccess.getListTermAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__0__Impl
	rule__ListTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_0()); }
(rule__ListTerm__OwnedListElementAssignment_2_0)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getGroup_2_1()); }
(rule__ListTerm__Group_2_1__0)*
{ after(grammarAccess.getListTermAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListTerm__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2_1__0__Impl
	rule__ListTerm__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getCommaKeyword_2_1_0()); }

	Comma 

{ after(grammarAccess.getListTermAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1_1()); }
(rule__ListTerm__OwnedListElementAssignment_2_1_1)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__0__Impl
	rule__FieldPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__FieldPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__1__Impl
	rule__FieldPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__2__Impl
	rule__FieldPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
(rule__FieldPropertyAssociation__OwnedValueAssignment_2)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }

	Semicolon 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainmentPathElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__0__Impl
	rule__ContainmentPathElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
(rule__ContainmentPathElement__Group_0__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
(rule__ContainmentPathElement__Group_1__0)?
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__0__Impl
	rule__ContainmentPathElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
(rule__ContainmentPathElement__NamedElementAssignment_0_0)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
(rule__ContainmentPathElement__ArrayRangeAssignment_0_1)*
{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__0__Impl
	rule__ContainmentPathElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0()); }

	FullStop 

{ after(grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getPathAssignment_1_1()); }
(rule__ContainmentPathElement__PathAssignment_1_1)
{ after(grammarAccess.getContainmentPathElementAccess().getPathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ArrayRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__0__Impl
	rule__ArrayRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
(

)
{ after(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__1__Impl
	rule__ArrayRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__2__Impl
	rule__ArrayRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
(rule__ArrayRange__LowerBoundAssignment_2)
{ after(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__3__Impl
	rule__ArrayRange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getGroup_3()); }
(rule__ArrayRange__Group_3__0)?
{ after(grammarAccess.getArrayRangeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }

	RightSquareBracket 

{ after(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayRange__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__0__Impl
	rule__ArrayRange__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }

	FullStopFullStop 

{ after(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
(rule__ArrayRange__UpperBoundAssignment_3_1)
{ after(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__0__Impl
	rule__SignedConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
(rule__SignedConstant__OpAssignment_0)
{ after(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
(rule__SignedConstant__OwnedPropertyExpressionAssignment_1)
{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NumericRangeTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__0__Impl
	rule__NumericRangeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
(rule__NumericRangeTerm__MinimumAssignment_0)
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__1__Impl
	rule__NumericRangeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__2__Impl
	rule__NumericRangeTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
(rule__NumericRangeTerm__MaximumAssignment_2)
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
(rule__NumericRangeTerm__Group_3__0)?
{ after(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NumericRangeTerm__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__0__Impl
	rule__NumericRangeTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }

	Delta 

{ after(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
(rule__NumericRangeTerm__DeltaAssignment_3_1)
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AppliesToKeywords__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToKeywords__Group__0__Impl
	rule__AppliesToKeywords__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToKeywords__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToKeywordsAccess().getAppliesKeyword_0()); }

	Applies 

{ after(grammarAccess.getAppliesToKeywordsAccess().getAppliesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AppliesToKeywords__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToKeywords__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToKeywords__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToKeywordsAccess().getToKeyword_1()); }

	To 

{ after(grammarAccess.getAppliesToKeywordsAccess().getToKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InBindingKeywords__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InBindingKeywords__Group__0__Impl
	rule__InBindingKeywords__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InBindingKeywords__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInBindingKeywordsAccess().getInKeyword_0()); }

	In 

{ after(grammarAccess.getInBindingKeywordsAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InBindingKeywords__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InBindingKeywords__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InBindingKeywords__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInBindingKeywordsAccess().getBindingKeyword_1()); }

	Binding 

{ after(grammarAccess.getInBindingKeywordsAccess().getBindingKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InModesKeywords__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InModesKeywords__Group__0__Impl
	rule__InModesKeywords__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InModesKeywords__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInModesKeywordsAccess().getInKeyword_0()); }

	In 

{ after(grammarAccess.getInModesKeywordsAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InModesKeywords__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InModesKeywords__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InModesKeywords__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInModesKeywordsAccess().getModesKeyword_1()); }

	Modes 

{ after(grammarAccess.getInModesKeywordsAccess().getModesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__QPREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__0__Impl
	rule__QPREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getGroup_1()); }
(rule__QPREF__Group_1__0)?
{ after(grammarAccess.getQPREFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QPREF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__0__Impl
	rule__QPREF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }

	ColonColon 

{ after(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__0__Impl
	rule__QCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_0()); }
(rule__QCREF__Group_0__0)*
{ after(grammarAccess.getQCREFAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__1__Impl
	rule__QCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_2()); }
(rule__QCREF__Group_2__0)?
{ after(grammarAccess.getQCREFAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QCREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__0__Impl
	rule__QCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }

	ColonColon 

{ after(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__0__Impl
	rule__QCREF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }

	FullStop 

{ after(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ResoluteLibrary__DefinitionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResoluteLibraryAccess().getDefinitionsDefinitionParserRuleCall_1_0()); }
	ruleDefinition{ after(grammarAccess.getResoluteLibraryAccess().getDefinitionsDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_0_2_0()); }
	ruleType{ after(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_1_2_0()); }
	ruleType{ after(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ParamTypeAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getParamTypeTypeParserRuleCall_2_1_1_0()); }
	ruleType{ after(grammarAccess.getTypeAccess().getParamTypeTypeParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__LibNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLibNameIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getLibNameIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__FnTypeAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFnTypeIDTerminalRuleCall_3_3_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getFnTypeIDTerminalRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseTypeAccess().getTypeAlternatives_0()); }
(rule__BaseType__TypeAlternatives_0)
{ after(grammarAccess.getBaseTypeAccess().getTypeAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__NameAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getNameIDTerminalRuleCall_0_0_0_0()); }
	RULE_ID{ after(grammarAccess.getArgAccess().getNameIDTerminalRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__TypeAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getTypeTypeParserRuleCall_0_0_2_0()); }
	ruleType{ after(grammarAccess.getArgAccess().getTypeTypeParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getArgAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__ExprAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getExprExprParserRuleCall_1_3_0()); }
	ruleExpr{ after(grammarAccess.getArgAccess().getExprExprParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getConstantDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getConstantDefinitionAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__ExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getExprExprParserRuleCall_4_0()); }
	ruleExpr{ after(grammarAccess.getConstantDefinitionAccess().getExprExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ArgsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getArgsArgParserRuleCall_2_0_0()); }
	ruleArg{ after(grammarAccess.getFunctionDefinitionAccess().getArgsArgParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ArgsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getArgsArgParserRuleCall_2_1_1_0()); }
	ruleArg{ after(grammarAccess.getFunctionDefinitionAccess().getArgsArgParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getBodyDefinitionBodyParserRuleCall_4_0()); }
	ruleDefinitionBody{ after(grammarAccess.getFunctionDefinitionAccess().getBodyDefinitionBodyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__TypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getTypeTypeParserRuleCall_0_2_0()); }
	ruleType{ after(grammarAccess.getDefinitionBodyAccess().getTypeTypeParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__ExprAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getExprExprParserRuleCall_0_4_0()); }
	ruleExpr{ after(grammarAccess.getDefinitionBodyAccess().getExprExprParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__ClaimAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getClaimClaimTextParserRuleCall_1_2_1_0()); }
	ruleClaimText{ after(grammarAccess.getDefinitionBodyAccess().getClaimClaimTextParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionBody__ExprAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionBodyAccess().getExprExprParserRuleCall_1_3_0()); }
	ruleExpr{ after(grammarAccess.getDefinitionBodyAccess().getExprExprParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__StrAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getStrSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getClaimTextAccess().getStrSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__ArgAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getArgClaimTextVarCrossReference_1_1_0()); }
(
{ before(grammarAccess.getClaimTextAccess().getArgClaimTextVarIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClaimTextAccess().getArgClaimTextVarIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getClaimTextAccess().getArgClaimTextVarCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClaimText__UnitAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClaimTextAccess().getUnitUnitLiteralCrossReference_1_2_1_0()); }
(
{ before(grammarAccess.getClaimTextAccess().getUnitUnitLiteralIDTerminalRuleCall_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClaimTextAccess().getUnitUnitLiteralIDTerminalRuleCall_1_2_1_0_1()); }
)
{ after(grammarAccess.getClaimTextAccess().getUnitUnitLiteralCrossReference_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
	ruleImpliesExpr{ after(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0_0()); }
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0_0()); }

	Or 

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0_0()); }
)

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpOrelseKeyword_1_0_0_1_1_0()); }
(
{ before(grammarAccess.getOrExprAccess().getOpOrelseKeyword_1_0_0_1_1_0()); }

	Orelse 

{ after(grammarAccess.getOrExprAccess().getOpOrelseKeyword_1_0_0_1_1_0()); }
)

{ after(grammarAccess.getOrExprAccess().getOpOrelseKeyword_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
	ruleAndExpr{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }

	And 

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }
)

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }
(
{ before(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }

	Andthen 

{ after(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }
)

{ after(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightInstanceOfExprParserRuleCall_1_1_0()); }
	ruleInstanceOfExpr{ after(grammarAccess.getAndExprAccess().getRightInstanceOfExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getTypeBaseTypeParserRuleCall_1_1_0()); }
	ruleBaseType{ after(grammarAccess.getInstanceOfExprAccess().getTypeBaseTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_0_0_1_0()); }
	ruleRelationalOp{ after(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightPlusExprParserRuleCall_1_1_0()); }
	rulePlusExpr{ after(grammarAccess.getRelationalExprAccess().getRightPlusExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpAlternatives_1_0_0_1_0()); }
(rule__PlusExpr__OpAlternatives_1_0_0_1_0)
{ after(grammarAccess.getPlusExprAccess().getOpAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getRightTimesExprParserRuleCall_1_1_0()); }
	ruleTimesExpr{ after(grammarAccess.getPlusExprAccess().getRightTimesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getOpAlternatives_1_0_0_1_0()); }
(rule__TimesExpr__OpAlternatives_1_0_0_1_0)
{ after(grammarAccess.getTimesExprAccess().getOpAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getRightExpExprParserRuleCall_1_1_0()); }
	ruleExpExpr{ after(grammarAccess.getTimesExprAccess().getRightExpExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getExpExprAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }

	CircumflexAccent 

{ after(grammarAccess.getExpExprAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getExpExprAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpExprAccess().getRightPrefixExprParserRuleCall_1_1_0()); }
	rulePrefixExpr{ after(grammarAccess.getExpExprAccess().getRightPrefixExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getOpAlternatives_0_1_0()); }
(rule__PrefixExpr__OpAlternatives_0_1_0)
{ after(grammarAccess.getPrefixExprAccess().getOpAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getExprPrefixExprParserRuleCall_0_2_0()); }
	rulePrefixExpr{ after(grammarAccess.getPrefixExprAccess().getExprPrefixExprParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getTypeBaseTypeParserRuleCall_1_2_0()); }
	ruleBaseType{ after(grammarAccess.getPrefixExprAccess().getTypeBaseTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__ExprAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getExprPrefixExprParserRuleCall_1_4_0()); }
	rulePrefixExpr{ after(grammarAccess.getPrefixExprAccess().getExprPrefixExprParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__IdAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIdNamedElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getAtomicExprAccess().getIdNamedElementQCREFParserRuleCall_0_1_0_1()); }
	ruleQCREF{ after(grammarAccess.getAtomicExprAccess().getIdNamedElementQCREFParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getAtomicExprAccess().getIdNamedElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__SubAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getSubNestedDotIDParserRuleCall_1_2_1_0()); }
	ruleNestedDotID{ after(grammarAccess.getAtomicExprAccess().getSubNestedDotIDParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValExprParserRuleCall_2_2_0_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getValExprParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__FailmsgAssignment_2_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFailmsgClaimTextParserRuleCall_2_2_1_1_0()); }
	ruleClaimText{ after(grammarAccess.getAtomicExprAccess().getFailmsgClaimTextParserRuleCall_2_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValIntegerTermParserRuleCall_3_1_0()); }
	ruleIntegerTerm{ after(grammarAccess.getAtomicExprAccess().getValIntegerTermParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValRealTermParserRuleCall_4_1_0()); }
	ruleRealTerm{ after(grammarAccess.getAtomicExprAccess().getValRealTermParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValBooleanLiteralParserRuleCall_5_1_0()); }
	ruleBooleanLiteral{ after(grammarAccess.getAtomicExprAccess().getValBooleanLiteralParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getValStringTermParserRuleCall_6_1_0()); }
	ruleStringTerm{ after(grammarAccess.getAtomicExprAccess().getValStringTermParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__CondAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getCondExprParserRuleCall_7_2_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getCondExprParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ThenAssignment_7_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getThenExprParserRuleCall_7_4_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getThenExprParserRuleCall_7_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ElseAssignment_7_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getElseExprParserRuleCall_7_6_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getElseExprParserRuleCall_7_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__QuantAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getQuantAlternatives_8_1_0()); }
(rule__AtomicExpr__QuantAlternatives_8_1_0)
{ after(grammarAccess.getAtomicExprAccess().getQuantAlternatives_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_8_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsArgParserRuleCall_8_2_1_0()); }
	ruleArg{ after(grammarAccess.getAtomicExprAccess().getArgsArgParserRuleCall_8_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ExprAssignment_8_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprExprParserRuleCall_8_4_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getExprExprParserRuleCall_8_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__LibNameAssignment_9_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLibNameIDTerminalRuleCall_9_0_1_0()); }
	RULE_ID{ after(grammarAccess.getAtomicExprAccess().getLibNameIDTerminalRuleCall_9_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__FnNameAssignment_9_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFnNameIDTerminalRuleCall_9_0_3_0()); }
	RULE_ID{ after(grammarAccess.getAtomicExprAccess().getFnNameIDTerminalRuleCall_9_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_9_0_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_9_0_5_0_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_9_0_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_9_0_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_9_0_5_1_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_9_0_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__FnAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFnBuiltInFnParserRuleCall_10_1_0()); }
	ruleBuiltInFn{ after(grammarAccess.getAtomicExprAccess().getFnBuiltInFnParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_10_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_10_3_0_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_10_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_10_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_10_3_1_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_10_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__FnAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFnFunctionDefinitionCrossReference_11_1_0()); }
(
{ before(grammarAccess.getAtomicExprAccess().getFnFunctionDefinitionIDTerminalRuleCall_11_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAtomicExprAccess().getFnFunctionDefinitionIDTerminalRuleCall_11_1_0_1()); }
)
{ after(grammarAccess.getAtomicExprAccess().getFnFunctionDefinitionCrossReference_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_11_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_11_3_0_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_11_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_11_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_11_3_1_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getArgsExprParserRuleCall_11_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_12_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsArgParserRuleCall_12_2_0_2_1_0()); }
	ruleArg{ after(grammarAccess.getAtomicExprAccess().getArgsArgParserRuleCall_12_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__FilterAssignment_12_2_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFilterExprParserRuleCall_12_2_0_3_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getFilterExprParserRuleCall_12_2_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ExprsAssignment_12_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprsExprParserRuleCall_12_2_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getExprsExprParserRuleCall_12_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ArgsAssignment_13_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgsArgParserRuleCall_13_2_0_2_1_0()); }
	ruleArg{ after(grammarAccess.getAtomicExprAccess().getArgsArgParserRuleCall_13_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__FilterAssignment_13_2_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getFilterExprParserRuleCall_13_2_0_3_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getFilterExprParserRuleCall_13_2_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ExprsAssignment_13_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprsExprParserRuleCall_13_2_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getExprsExprParserRuleCall_13_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__BindingAssignment_16_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getBindingLetBindingParserRuleCall_16_2_0()); }
	ruleLetBinding{ after(grammarAccess.getAtomicExprAccess().getBindingLetBindingParserRuleCall_16_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ExprAssignment_16_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getExprExprParserRuleCall_16_4_0()); }
	ruleExpr{ after(grammarAccess.getAtomicExprAccess().getExprExprParserRuleCall_16_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getLetBindingAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getLetBindingAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetBinding__ExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetBindingAccess().getExprExprParserRuleCall_4_0()); }
	ruleExpr{ after(grammarAccess.getLetBindingAccess().getExprExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueUnsignedRealParserRuleCall_0_0()); }
	ruleUnsignedReal{ after(grammarAccess.getRealTermAccess().getValueUnsignedRealParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueUnsignedIntParserRuleCall_0_0()); }
	ruleUnsignedInt{ after(grammarAccess.getIntegerTermAccess().getValueUnsignedIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResoluteSubclause__ProvesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResoluteSubclauseAccess().getProvesProveStatementParserRuleCall_1_0()); }
	ruleProveStatement{ after(grammarAccess.getResoluteSubclauseAccess().getProvesProveStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__BaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getBaseNamedElementCrossReference_0_0()); }
(
{ before(grammarAccess.getNestedDotIDAccess().getBaseNamedElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getNestedDotIDAccess().getBaseNamedElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getNestedDotIDAccess().getBaseNamedElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__SubAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getSubNestedDotIDParserRuleCall_1_1_0()); }
	ruleNestedDotID{ after(grammarAccess.getNestedDotIDAccess().getSubNestedDotIDParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProveStatement__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProveStatementAccess().getExprExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getProveStatementAccess().getExprExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
	ruleQPREF{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppendAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }

	PlusSignEqualsSignGreaterThanSign 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__ConstantAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }

	Constant 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_1_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_1_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__InBindingAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_2_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierQCREFParserRuleCall_5_2_0_1()); }
	ruleQCREF{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierQCREFParserRuleCall_5_2_0_1()); }
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ContainmentPath__PathAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getPathContainmentPathElementParserRuleCall_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathAccess().getPathContainmentPathElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OptionalModalPropertyValue__OwnedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_2_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_1_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_1_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__OwnedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
	rulePropertyExpression{ after(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralorReferenceTerm__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }

	True 

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getPathContainmentPathElementParserRuleCall_2_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getReferenceTermAccess().getPathContainmentPathElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__OwnedFieldValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
	ruleFieldPropertyAssociation{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__FunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__ClassifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
	ruleQCREF{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__OwnedValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
	rulePropertyExpression{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__NamedElementAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__ArrayRangeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
	ruleArrayRange{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__PathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTerm__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
	ruleNoQuoteString{ after(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__LowerBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__UpperBoundAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
	rulePlusMinus{ after(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OwnedPropertyExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
	ruleConstantValue{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MinimumAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MaximumAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__DeltaAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


